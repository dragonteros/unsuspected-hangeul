from test.test_base import TestBase


class TestConstructor(TestBase):
    def test_dict_basic(self):
        _test = self._assert_execute
        _test('ㅅㅈ ㅎㄱ', "{}")
        _test('ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ', "{0: 1, 2: 3}")
        _test('ㄱ {ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ} ㅎㄴ', "1")
        _test('ㄷ {ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ} ㅎㄴ', "3")

    def test_dict_various_keys(self):
        _test = self._assert_execute
        _test('ㄱㅈㅎㄱ {ㄱㅈㅎㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', "5")
        _test('ㅂ ㅁㅈㅎㄴ {ㅂ ㅁㅈㅎㄴ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', "5")
        _test('ㄱ ㄴ ㅅㅈㅎㄷ {ㄱ ㄴ ㅅㅈㅎㄷ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', "5")
        _test('ㄱ ㄴ ㅅㅈㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('ㄱ ㄴ ㅁㄹㅎㄷ {ㄱ ㄴ ㅁㄹㅎㄷ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', "5")
        _test('ㄱ ㄴ ㅁㄹㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('(ㄱ ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷㅎㄴ) (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ', "5")
        _test('(ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷ) (ㄱ ㄱㅇㄱㅎㄴ {ㄱ ㄱㅇㄱㅎㄴ ㅂ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ', "5")
        _test('ㅀ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('ㅁㅈ ㄴㄱㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('ㅁㅈ ㅁㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('ㅁㅈ ㅂㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('ㄹㅎㄱ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "5")
        _test('ㅀㄱ {ㅀㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', "5")
        _test('ㅂㄱㅎㄱ {ㅂㄱㅎㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', "5")

    def test_dict_complex_keys(self):
        _test = self._assert_execute
        _test('ㄱ ㄴ ㅅㅈㅎㄷ ㄷ ㅅㅈㅎㄷ', "{{0: 1}: 2}")
        _test('(ㄱ ㄴ ㅅㅈㅎㄷ ㄷ ㄹ ㅅㅈㅎㄷ ㄷㅎㄷ) (ㄱ ㄴ ㄷ ㄹ ㅅㅈㅎㅁ ㄷ ㅅㅈㅎㄷ) ㅎㄴ', "2")
        _test('ㄱ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㄷ ㅅㅈㅎㄷ', "{[0, {}]: 2}")
        _test('(ㄱ ㅁㅀㄴ ㅅㅈㅎㄱ ㅁㅀㄴ ㄷㅎㄷ) (ㄱ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㄷ ㅅㅈㅎㄷ)ㅎㄴ', "2")

    def test_dict_various_values(self):
        _test = self._assert_execute
        _test('ㄱㅈㅎㄱ {ㄱㅈㅎㄱ ㅂㄱㅎㄱ ㅅㅈㅎㄷ} ㅎㄴ', "Nil")
        _test('ㅂ ㅁㅈㅎㄴ {ㅂ ㅁㅈㅎㄴ ㄱ ㅁㅈㅎㄴ ㅅㅈㅎㄷ} ㅎㄴ', "'0'")
        _test('ㄱ ㄴ ㅅㅈㅎㄷ {ㄱ ㄴ ㅅㅈㅎㄷ ㅅㅈㅎㄱ ㅅㅈㅎㄷ} ㅎㄴ', "{}")
        _test('ㄱ ㄴ ㅅㅈㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㄷ ㄹ ㅅㅈㅎㄷ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "{2: 3}")
        _test('ㄱ ㄴ ㅁㄹㅎㄷ {ㄱ ㄴ ㅁㄹㅎㄷ ㅁㅀㄱ ㅅㅈㅎㄷ} ㅎㄴ', "[]")
        _test('ㄱ ㄴ ㅁㄹㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㄷ ㅁㅀㄴ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "[2]")
        _test('(ㄱ ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷㅎㄴ) (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ', "b'\\x00'")
        _test('(ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷ) (ㄱ ㄱㅇㄱㅎㄴ {ㄱ ㄱㅇㄱㅎㄴ ㄴ ㄱㅇㄱㅎㄴ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ', "b'\\x01'")
        _test('ㅀ (ㄱㅇㄱ {ㄱㅇㄱ ㅂㅎ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄱ', "5")
        _test('ㅁㅈ ㄴㄱㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄱ', "''")
        _test('ㄷ ㅁㅈ ㅁㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅂㅂㅎㄴ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄴ', "'2'")
        _test('ㄷ ㅁㅈㅎㄴ ㄱㅁ ㅂㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄴ', "'2'")
        _test('ㄹㅎㄱ (ㄱㅇㄱ {ㄱㅇㄱ ㅀㄱ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "'5'", '5', '')
        _test('ㅀㄱ {ㅀㄱ ㅀㄱ ㅅㅈㅎㄷ} ㅎㄴ', "'5'", '5', '')
        _test('ㅂㄱㅎㄱ {ㅂㄱㅎㄱ ㄴ ㅁㅈㅎㄴ ㅈㅀㄴ ㅅㅈㅎㄷ} ㅎㄴ', 'Nil', '', '1')

    def test_dict_complex_values(self):
        _test = self._assert_execute
        _test('ㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄷ', "{0: {1: 2}}")
        _test('ㄱ (ㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄷ) ㅎㄴ', "{1: 2}")
        _test('ㄴ ㄱ (ㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄷ) ㅎㄴㅎㄴ', "2")
        _test('ㄱ ㄷ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㅅㅈㅎㄷ', "{0: [2, {}]}")
        _test('ㄱ {ㄱ ㄷ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㅅㅈㅎㄷ}ㅎㄴ', "[2, {}]")

    def test_list_basic(self):
        _test = self._assert_execute
        _test('ㅁㄹ ㅎㄱ', "[]")
        _test('ㄱ ㄴ ㄷ ㄹ ㅁㄹ ㅎㅁ', "[0, 1, 2, 3]")
        _test('ㄱ ([ㄱ ㄴ ㄷ] ㅁㄹ ㅎㄹ) ㅎㄴ', "0")
        _test('ㄴ ([ㄱ ㄴ ㄷ] ㅁㄹ ㅎㄹ) ㅎㄴ', "1")
        _test('(ㄷ ㄷㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ) ([ㄱ ㄴ ㄷ] ㅁㄹ ㅎㄹ) ㅎㄴ', "1")

    def test_string_basic(self):
        _test = self._assert_execute
        _test('ㅁㅈㅎㄱ', "''")
        _test('ㄱ ㅁㅈㅎㄴ', "'0'")
        _test('ㄱㄴ ㅁㅈㅎㄴ', "'-8'")
        _test('ㄴㄱ ㅁㅈㅎㄴ', "'-1'")
        _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㅁㅈㅎㄴ', "'0.5'")
