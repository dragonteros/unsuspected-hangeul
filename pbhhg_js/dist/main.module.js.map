{"version":3,"file":"main.module.js","sources":["../../node_modules/eastasianwidth/eastasianwidth.js","../../node_modules/complex.js/complex.js","../src/numbers.ts","../src/abstractSyntax.ts","../src/parse.ts","../src/error.ts","../src/utils.ts","../src/builtins/arithmetics.ts","../src/builtins/constructors.ts","../src/builtins/control.ts","../src/builtins/functional.ts","../src/builtins/io.ts","../src/builtins/logic.ts","../src/modules/bitwise.ts","../src/modules/byte.ts","../src/modules/math.ts","../src/builtins/module.ts","../src/builtins/sequence.ts","../src/builtins/string.ts","../src/interpret.ts","../src/main.ts"],"sourcesContent":["var eaw = {};\n\nif ('undefined' == typeof module) {\n  window.eastasianwidth = eaw;\n} else {\n  module.exports = eaw;\n}\n\neaw.eastAsianWidth = function(character) {\n  var x = character.charCodeAt(0);\n  var y = (character.length == 2) ? character.charCodeAt(1) : 0;\n  var codePoint = x;\n  if ((0xD800 <= x && x <= 0xDBFF) && (0xDC00 <= y && y <= 0xDFFF)) {\n    x &= 0x3FF;\n    y &= 0x3FF;\n    codePoint = (x << 10) | y;\n    codePoint += 0x10000;\n  }\n\n  if ((0x3000 == codePoint) ||\n      (0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n      (0xFFE0 <= codePoint && codePoint <= 0xFFE6)) {\n    return 'F';\n  }\n  if ((0x20A9 == codePoint) ||\n      (0xFF61 <= codePoint && codePoint <= 0xFFBE) ||\n      (0xFFC2 <= codePoint && codePoint <= 0xFFC7) ||\n      (0xFFCA <= codePoint && codePoint <= 0xFFCF) ||\n      (0xFFD2 <= codePoint && codePoint <= 0xFFD7) ||\n      (0xFFDA <= codePoint && codePoint <= 0xFFDC) ||\n      (0xFFE8 <= codePoint && codePoint <= 0xFFEE)) {\n    return 'H';\n  }\n  if ((0x1100 <= codePoint && codePoint <= 0x115F) ||\n      (0x11A3 <= codePoint && codePoint <= 0x11A7) ||\n      (0x11FA <= codePoint && codePoint <= 0x11FF) ||\n      (0x2329 <= codePoint && codePoint <= 0x232A) ||\n      (0x2E80 <= codePoint && codePoint <= 0x2E99) ||\n      (0x2E9B <= codePoint && codePoint <= 0x2EF3) ||\n      (0x2F00 <= codePoint && codePoint <= 0x2FD5) ||\n      (0x2FF0 <= codePoint && codePoint <= 0x2FFB) ||\n      (0x3001 <= codePoint && codePoint <= 0x303E) ||\n      (0x3041 <= codePoint && codePoint <= 0x3096) ||\n      (0x3099 <= codePoint && codePoint <= 0x30FF) ||\n      (0x3105 <= codePoint && codePoint <= 0x312D) ||\n      (0x3131 <= codePoint && codePoint <= 0x318E) ||\n      (0x3190 <= codePoint && codePoint <= 0x31BA) ||\n      (0x31C0 <= codePoint && codePoint <= 0x31E3) ||\n      (0x31F0 <= codePoint && codePoint <= 0x321E) ||\n      (0x3220 <= codePoint && codePoint <= 0x3247) ||\n      (0x3250 <= codePoint && codePoint <= 0x32FE) ||\n      (0x3300 <= codePoint && codePoint <= 0x4DBF) ||\n      (0x4E00 <= codePoint && codePoint <= 0xA48C) ||\n      (0xA490 <= codePoint && codePoint <= 0xA4C6) ||\n      (0xA960 <= codePoint && codePoint <= 0xA97C) ||\n      (0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n      (0xD7B0 <= codePoint && codePoint <= 0xD7C6) ||\n      (0xD7CB <= codePoint && codePoint <= 0xD7FB) ||\n      (0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n      (0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n      (0xFE30 <= codePoint && codePoint <= 0xFE52) ||\n      (0xFE54 <= codePoint && codePoint <= 0xFE66) ||\n      (0xFE68 <= codePoint && codePoint <= 0xFE6B) ||\n      (0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n      (0x1F200 <= codePoint && codePoint <= 0x1F202) ||\n      (0x1F210 <= codePoint && codePoint <= 0x1F23A) ||\n      (0x1F240 <= codePoint && codePoint <= 0x1F248) ||\n      (0x1F250 <= codePoint && codePoint <= 0x1F251) ||\n      (0x20000 <= codePoint && codePoint <= 0x2F73F) ||\n      (0x2B740 <= codePoint && codePoint <= 0x2FFFD) ||\n      (0x30000 <= codePoint && codePoint <= 0x3FFFD)) {\n    return 'W';\n  }\n  if ((0x0020 <= codePoint && codePoint <= 0x007E) ||\n      (0x00A2 <= codePoint && codePoint <= 0x00A3) ||\n      (0x00A5 <= codePoint && codePoint <= 0x00A6) ||\n      (0x00AC == codePoint) ||\n      (0x00AF == codePoint) ||\n      (0x27E6 <= codePoint && codePoint <= 0x27ED) ||\n      (0x2985 <= codePoint && codePoint <= 0x2986)) {\n    return 'Na';\n  }\n  if ((0x00A1 == codePoint) ||\n      (0x00A4 == codePoint) ||\n      (0x00A7 <= codePoint && codePoint <= 0x00A8) ||\n      (0x00AA == codePoint) ||\n      (0x00AD <= codePoint && codePoint <= 0x00AE) ||\n      (0x00B0 <= codePoint && codePoint <= 0x00B4) ||\n      (0x00B6 <= codePoint && codePoint <= 0x00BA) ||\n      (0x00BC <= codePoint && codePoint <= 0x00BF) ||\n      (0x00C6 == codePoint) ||\n      (0x00D0 == codePoint) ||\n      (0x00D7 <= codePoint && codePoint <= 0x00D8) ||\n      (0x00DE <= codePoint && codePoint <= 0x00E1) ||\n      (0x00E6 == codePoint) ||\n      (0x00E8 <= codePoint && codePoint <= 0x00EA) ||\n      (0x00EC <= codePoint && codePoint <= 0x00ED) ||\n      (0x00F0 == codePoint) ||\n      (0x00F2 <= codePoint && codePoint <= 0x00F3) ||\n      (0x00F7 <= codePoint && codePoint <= 0x00FA) ||\n      (0x00FC == codePoint) ||\n      (0x00FE == codePoint) ||\n      (0x0101 == codePoint) ||\n      (0x0111 == codePoint) ||\n      (0x0113 == codePoint) ||\n      (0x011B == codePoint) ||\n      (0x0126 <= codePoint && codePoint <= 0x0127) ||\n      (0x012B == codePoint) ||\n      (0x0131 <= codePoint && codePoint <= 0x0133) ||\n      (0x0138 == codePoint) ||\n      (0x013F <= codePoint && codePoint <= 0x0142) ||\n      (0x0144 == codePoint) ||\n      (0x0148 <= codePoint && codePoint <= 0x014B) ||\n      (0x014D == codePoint) ||\n      (0x0152 <= codePoint && codePoint <= 0x0153) ||\n      (0x0166 <= codePoint && codePoint <= 0x0167) ||\n      (0x016B == codePoint) ||\n      (0x01CE == codePoint) ||\n      (0x01D0 == codePoint) ||\n      (0x01D2 == codePoint) ||\n      (0x01D4 == codePoint) ||\n      (0x01D6 == codePoint) ||\n      (0x01D8 == codePoint) ||\n      (0x01DA == codePoint) ||\n      (0x01DC == codePoint) ||\n      (0x0251 == codePoint) ||\n      (0x0261 == codePoint) ||\n      (0x02C4 == codePoint) ||\n      (0x02C7 == codePoint) ||\n      (0x02C9 <= codePoint && codePoint <= 0x02CB) ||\n      (0x02CD == codePoint) ||\n      (0x02D0 == codePoint) ||\n      (0x02D8 <= codePoint && codePoint <= 0x02DB) ||\n      (0x02DD == codePoint) ||\n      (0x02DF == codePoint) ||\n      (0x0300 <= codePoint && codePoint <= 0x036F) ||\n      (0x0391 <= codePoint && codePoint <= 0x03A1) ||\n      (0x03A3 <= codePoint && codePoint <= 0x03A9) ||\n      (0x03B1 <= codePoint && codePoint <= 0x03C1) ||\n      (0x03C3 <= codePoint && codePoint <= 0x03C9) ||\n      (0x0401 == codePoint) ||\n      (0x0410 <= codePoint && codePoint <= 0x044F) ||\n      (0x0451 == codePoint) ||\n      (0x2010 == codePoint) ||\n      (0x2013 <= codePoint && codePoint <= 0x2016) ||\n      (0x2018 <= codePoint && codePoint <= 0x2019) ||\n      (0x201C <= codePoint && codePoint <= 0x201D) ||\n      (0x2020 <= codePoint && codePoint <= 0x2022) ||\n      (0x2024 <= codePoint && codePoint <= 0x2027) ||\n      (0x2030 == codePoint) ||\n      (0x2032 <= codePoint && codePoint <= 0x2033) ||\n      (0x2035 == codePoint) ||\n      (0x203B == codePoint) ||\n      (0x203E == codePoint) ||\n      (0x2074 == codePoint) ||\n      (0x207F == codePoint) ||\n      (0x2081 <= codePoint && codePoint <= 0x2084) ||\n      (0x20AC == codePoint) ||\n      (0x2103 == codePoint) ||\n      (0x2105 == codePoint) ||\n      (0x2109 == codePoint) ||\n      (0x2113 == codePoint) ||\n      (0x2116 == codePoint) ||\n      (0x2121 <= codePoint && codePoint <= 0x2122) ||\n      (0x2126 == codePoint) ||\n      (0x212B == codePoint) ||\n      (0x2153 <= codePoint && codePoint <= 0x2154) ||\n      (0x215B <= codePoint && codePoint <= 0x215E) ||\n      (0x2160 <= codePoint && codePoint <= 0x216B) ||\n      (0x2170 <= codePoint && codePoint <= 0x2179) ||\n      (0x2189 == codePoint) ||\n      (0x2190 <= codePoint && codePoint <= 0x2199) ||\n      (0x21B8 <= codePoint && codePoint <= 0x21B9) ||\n      (0x21D2 == codePoint) ||\n      (0x21D4 == codePoint) ||\n      (0x21E7 == codePoint) ||\n      (0x2200 == codePoint) ||\n      (0x2202 <= codePoint && codePoint <= 0x2203) ||\n      (0x2207 <= codePoint && codePoint <= 0x2208) ||\n      (0x220B == codePoint) ||\n      (0x220F == codePoint) ||\n      (0x2211 == codePoint) ||\n      (0x2215 == codePoint) ||\n      (0x221A == codePoint) ||\n      (0x221D <= codePoint && codePoint <= 0x2220) ||\n      (0x2223 == codePoint) ||\n      (0x2225 == codePoint) ||\n      (0x2227 <= codePoint && codePoint <= 0x222C) ||\n      (0x222E == codePoint) ||\n      (0x2234 <= codePoint && codePoint <= 0x2237) ||\n      (0x223C <= codePoint && codePoint <= 0x223D) ||\n      (0x2248 == codePoint) ||\n      (0x224C == codePoint) ||\n      (0x2252 == codePoint) ||\n      (0x2260 <= codePoint && codePoint <= 0x2261) ||\n      (0x2264 <= codePoint && codePoint <= 0x2267) ||\n      (0x226A <= codePoint && codePoint <= 0x226B) ||\n      (0x226E <= codePoint && codePoint <= 0x226F) ||\n      (0x2282 <= codePoint && codePoint <= 0x2283) ||\n      (0x2286 <= codePoint && codePoint <= 0x2287) ||\n      (0x2295 == codePoint) ||\n      (0x2299 == codePoint) ||\n      (0x22A5 == codePoint) ||\n      (0x22BF == codePoint) ||\n      (0x2312 == codePoint) ||\n      (0x2460 <= codePoint && codePoint <= 0x24E9) ||\n      (0x24EB <= codePoint && codePoint <= 0x254B) ||\n      (0x2550 <= codePoint && codePoint <= 0x2573) ||\n      (0x2580 <= codePoint && codePoint <= 0x258F) ||\n      (0x2592 <= codePoint && codePoint <= 0x2595) ||\n      (0x25A0 <= codePoint && codePoint <= 0x25A1) ||\n      (0x25A3 <= codePoint && codePoint <= 0x25A9) ||\n      (0x25B2 <= codePoint && codePoint <= 0x25B3) ||\n      (0x25B6 <= codePoint && codePoint <= 0x25B7) ||\n      (0x25BC <= codePoint && codePoint <= 0x25BD) ||\n      (0x25C0 <= codePoint && codePoint <= 0x25C1) ||\n      (0x25C6 <= codePoint && codePoint <= 0x25C8) ||\n      (0x25CB == codePoint) ||\n      (0x25CE <= codePoint && codePoint <= 0x25D1) ||\n      (0x25E2 <= codePoint && codePoint <= 0x25E5) ||\n      (0x25EF == codePoint) ||\n      (0x2605 <= codePoint && codePoint <= 0x2606) ||\n      (0x2609 == codePoint) ||\n      (0x260E <= codePoint && codePoint <= 0x260F) ||\n      (0x2614 <= codePoint && codePoint <= 0x2615) ||\n      (0x261C == codePoint) ||\n      (0x261E == codePoint) ||\n      (0x2640 == codePoint) ||\n      (0x2642 == codePoint) ||\n      (0x2660 <= codePoint && codePoint <= 0x2661) ||\n      (0x2663 <= codePoint && codePoint <= 0x2665) ||\n      (0x2667 <= codePoint && codePoint <= 0x266A) ||\n      (0x266C <= codePoint && codePoint <= 0x266D) ||\n      (0x266F == codePoint) ||\n      (0x269E <= codePoint && codePoint <= 0x269F) ||\n      (0x26BE <= codePoint && codePoint <= 0x26BF) ||\n      (0x26C4 <= codePoint && codePoint <= 0x26CD) ||\n      (0x26CF <= codePoint && codePoint <= 0x26E1) ||\n      (0x26E3 == codePoint) ||\n      (0x26E8 <= codePoint && codePoint <= 0x26FF) ||\n      (0x273D == codePoint) ||\n      (0x2757 == codePoint) ||\n      (0x2776 <= codePoint && codePoint <= 0x277F) ||\n      (0x2B55 <= codePoint && codePoint <= 0x2B59) ||\n      (0x3248 <= codePoint && codePoint <= 0x324F) ||\n      (0xE000 <= codePoint && codePoint <= 0xF8FF) ||\n      (0xFE00 <= codePoint && codePoint <= 0xFE0F) ||\n      (0xFFFD == codePoint) ||\n      (0x1F100 <= codePoint && codePoint <= 0x1F10A) ||\n      (0x1F110 <= codePoint && codePoint <= 0x1F12D) ||\n      (0x1F130 <= codePoint && codePoint <= 0x1F169) ||\n      (0x1F170 <= codePoint && codePoint <= 0x1F19A) ||\n      (0xE0100 <= codePoint && codePoint <= 0xE01EF) ||\n      (0xF0000 <= codePoint && codePoint <= 0xFFFFD) ||\n      (0x100000 <= codePoint && codePoint <= 0x10FFFD)) {\n    return 'A';\n  }\n\n  return 'N';\n};\n\neaw.characterLength = function(character) {\n  var code = this.eastAsianWidth(character);\n  if (code == 'F' || code == 'W' || code == 'A') {\n    return 2;\n  } else {\n    return 1;\n  }\n};\n\n// Split a string considering surrogate-pairs.\nfunction stringToArray(string) {\n  return string.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[^\\uD800-\\uDFFF]/g) || [];\n}\n\neaw.length = function(string) {\n  var characters = stringToArray(string);\n  var len = 0;\n  for (var i = 0; i < characters.length; i++) {\n    len = len + this.characterLength(characters[i]);\n  }\n  return len;\n};\n\neaw.slice = function(text, start, end) {\n  textLen = eaw.length(text)\n  start = start ? start : 0;\n  end = end ? end : 1;\n  if (start < 0) {\n      start = textLen + start;\n  }\n  if (end < 0) {\n      end = textLen + end;\n  }\n  var result = '';\n  var eawLen = 0;\n  var chars = stringToArray(text);\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n    var charLen = eaw.length(char);\n    if (eawLen >= start - (charLen == 2 ? 1 : 0)) {\n        if (eawLen + charLen <= end) {\n            result += char;\n        } else {\n            break;\n        }\n    }\n    eawLen += charLen;\n  }\n  return result;\n};\n","/**\n * @license Complex.js v2.1.1 12/05/2020\n *\n * Copyright (c) 2020, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = Math.cosh || function(x) {\n    return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = Math.sinh || function(x) {\n    return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small (-¼π ≤ x ≤ ¼π).\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n  var cosm1 = function(x) {\n\n    var b = Math.PI / 4;\n    if (-b > x || x > b) {\n      return Math.cos(x) - 1.0;\n    }\n\n    /* Calculate horner form of polynomial of taylor series in Q\n    var fac = 1, alt = 1, pol = {};\n    for (var i = 0; i <= 16; i++) {\n      fac*= i || 1;\n      if (i % 2 == 0) {\n        pol[i] = new Fraction(1, alt * fac);\n        alt = -alt;\n      }\n    }\n    console.log(new Polynomial(pol).toHorner()); // (((((((1/20922789888000x^2-1/87178291200)x^2+1/479001600)x^2-1/3628800)x^2+1/40320)x^2-1/720)x^2+1/24)x^2-1/2)x^2+1\n    */\n\n    var xx = x * x;\n    return xx * (\n      xx * (\n        xx * (\n          xx * (\n            xx * (\n              xx * (\n                xx * (\n                  xx / 20922789888000\n                  - 1 / 87178291200)\n                + 1 / 479001600)\n              - 1 / 3628800)\n            + 1 / 40320)\n          - 1 / 720)\n        + 1 / 24)\n      - 1 / 2);\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n     a = a / 2;\n     b = b / 2;\n\n    return 0.5 * Math.log(a * a + b * b) + Math.LN2;\n  }\n\n  var parse = function(a, b) {\n\n    var z = { 're': 0, 'im': 0 };\n\n    if (a === undefined || a === null) {\n      z['re'] =\n      z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n          z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n        this['re'] / abs,\n        this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n        this['re'] + z['re'],\n        this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n        this['re'] - z['re'],\n        this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n        this['re'] * z['re'] - this['im'] * z['im'],\n        this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n          (a * x + b) / t,\n          (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n          (a + b * x) / t,\n          (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a > 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n        a * Math.cos(b),\n        a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n        tmp * Math.cos(this['im']),\n        tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.expm1(a) * Math.cos(b) + cosm1(b),\n        Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n        logHypot(a, b),\n        Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(z) = ( e^iz - e^-iz ) / 2i \n      //        = sin(a)cosh(b) + i cos(a)sinh(b)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.sin(a) * cosh(b),\n        Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = ( e^iz + e^-iz ) / 2 \n      //        = cos(a)cosh(b) - i sin(a)sinh(b)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.cos(a) * cosh(b),\n        -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(z) = sin(z) / cos(z) \n      //        = ( e^iz - e^-iz ) / ( i( e^iz + e^-iz ) )\n      //        = ( e^2iz - 1 ) / i( e^2iz + 1 )\n      //        = ( sin(2a) + i sinh(2b) ) / ( cos(2a) + cosh(2b) )\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n        Math.sin(a) / d,\n        sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n        -Math.sin(a) / d,\n        sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n        Math.cos(a) * cosh(b) / d,\n        Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n        Math.sin(a) * cosh(b) / d,\n        -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n        b * b - a * a + 1,\n        -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n        t1['re'] - b,\n        t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n        b * b - a * a + 1,\n        -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n        t1['re'] - b,\n        t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n        (1 - b * b - a * a) / d,\n        -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).atan()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).acos()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).asin()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        sinh(a) * Math.cos(b),\n        cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        cosh(a) * Math.cos(b),\n        sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n        sinh(a) / d,\n        Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n        sinh(a) / d,\n        -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n        -2 * sinh(a) * Math.cos(b) / d,\n        2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n        2 * cosh(a) * Math.cos(b) / d,\n        -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex acosh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n        ? new Complex(\n          (onePlus * oneMinus - b * b) / d,\n          (b * oneMinus + onePlus * b) / d)\n        : new Complex(\n          (a !== -1) ? (a / 0) : 0,\n          (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).atanh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n          (a !== 0)\n            ? Math.log(a + Math.sqrt(a * a + 1))\n            : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).asinh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).acosh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.ceil(this['re'] * places) / places,\n        Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.floor(this['re'] * places) / places,\n        Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.round(this['re'] * places) / places,\n        Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n        Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = \"\";\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (Math.abs(a) < Complex['EPSILON']) {\n        a = 0;\n      }\n\n      if (Math.abs(b) < Complex['EPSILON']) {\n        b = 0;\n      }\n\n      // If is real number\n      if (b === 0) {\n        return ret + a;\n      }\n\n      if (a !== 0) {\n        ret += a;\n        ret += \" \";\n        if (b < 0) {\n          b = -b;\n          ret += \"-\";\n        } else {\n          ret += \"+\";\n        }\n        ret += \" \";\n      } else if (b < 0) {\n        b = -b;\n        ret += \"-\";\n      }\n\n      if (1 !== b) { // b is the absolute imaginary part\n        ret += b;\n      }\n      return ret + \"i\";\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return this['im'] === 0 && this['re'] === 0;\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-15;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(Complex, \"__esModule\", { 'value': true });\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","/**\n * Number operations made generic of argument types\n */\n\nimport Complex from 'complex.js'\n\nexport type JSNumber = number | bigint | Complex\n\nMath.trunc =\n  Math.trunc ||\n  function (x) {\n    if (isNaN(x)) {\n      return NaN\n    }\n    if (x > 0) {\n      return Math.floor(x)\n    }\n    return Math.ceil(x)\n  }\n\nexport function toComplex(x: JSNumber | string): Complex {\n  const num = typeof x === 'bigint' ? Number(x) : x\n  return new Complex(num)\n}\nfunction toRealIfPossible(x: JSNumber): JSNumber {\n  if (typeof x === 'bigint' || typeof x === 'number') return x\n  if (isclose(x.im, 0)) return x.re\n  return x\n}\n\nexport function arrayToInt(\n  bigEndianArr: (number | bigint)[] | string,\n  radix: number | bigint = 10n\n) {\n  const TABLE = '0123456789abcdefghijklmnopqrstuvwxyz'.slice(0, Number(radix))\n  const _radix = BigInt(radix)\n  let arr: (number | bigint)[]\n  let sign: 1n | -1n = 1n\n  if (typeof bigEndianArr === 'string') {\n    if (bigEndianArr[0] === '+') {\n      bigEndianArr = bigEndianArr.slice(1)\n    } else if (bigEndianArr[0] === '-') {\n      sign = -1n\n      bigEndianArr = bigEndianArr.slice(1)\n    }\n\n    arr = bigEndianArr\n      .toLowerCase()\n      .split('')\n      .map((c) => TABLE.indexOf(c))\n    const invalidIdx = arr.indexOf(-1)\n    if (invalidIdx !== -1) {\n      throw Error(\n        `다음 글자를 ${radix}진법 숫자로 해석할 수 없습니다: '${bigEndianArr[invalidIdx]}'`\n      )\n    }\n  } else {\n    arr = bigEndianArr\n  }\n  let result = 0n\n  for (let i = 0; i < arr.length; i++) {\n    result *= _radix\n    result += BigInt(arr[i])\n  }\n  return result * sign\n}\nexport function intToArray(num: bigint, radix: number | bigint = 10n) {\n  if (num < 0n)\n    throw Error('Cannot convert a negative integer into array form.')\n  const _radix = BigInt(radix)\n  const littleEndianArr: bigint[] = []\n  while (num > 0n) {\n    littleEndianArr.push(num % _radix)\n    num /= _radix\n  }\n  return littleEndianArr.reverse()\n}\n\n/* Logic */\nexport function isinf(num: JSNumber): boolean {\n  if (typeof num === 'bigint') return false\n  if (num instanceof Complex) return isinf(num.re) || isinf(num.im)\n  return !(isFinite(num) || isNaN(num))\n}\nexport function isnan(num: JSNumber): boolean {\n  if (typeof num === 'bigint') return false\n  if (num instanceof Complex) return num.isNaN()\n  return isNaN(num)\n}\nfunction isInteger(num: bigint | number) {\n  return typeof num === 'bigint' || Number.isInteger(num)\n}\n\nfunction complexEq(complexValue: Complex, numberValue: JSNumber): boolean {\n  if (numberValue instanceof Complex) {\n    return (\n      complexValue.re === numberValue.re && complexValue.im === numberValue.im\n    )\n  }\n  if (complexValue.im !== 0) return false\n  if (typeof numberValue === 'bigint')\n    return bigIntEq(numberValue, complexValue.re)\n  return numberValue === complexValue.re\n}\nfunction bigIntEq(bigIntValue: bigint, realValue: number | bigint): boolean {\n  return isInteger(realValue) && bigIntValue === BigInt(realValue)\n}\nexport function eq(a: JSNumber, b: JSNumber) {\n  if (a instanceof Complex) return complexEq(a, b)\n  if (b instanceof Complex) return complexEq(b, a)\n  if (typeof a === 'bigint') return bigIntEq(a, b)\n  if (typeof b === 'bigint') return bigIntEq(b, a)\n  return a === b\n}\n\nexport function isclose(\n  a: JSNumber,\n  b: JSNumber,\n  rel_tol = 1e-9,\n  abs_tol = 1e-16\n) {\n  if (rel_tol < 0 || abs_tol < 0) {\n    throw RangeError('Tolerances must be non-negative.')\n  }\n  if (eq(a, b)) {\n    return true\n  }\n  if (isinf(a) || isinf(b)) {\n    return false\n  }\n  const _a = typeof a === 'bigint' ? Number(a) : a\n  const _b = typeof b === 'bigint' ? Number(b) : b\n  const diff = abs(sub(_a, _b))\n  return (\n    diff <= rel_tol * abs(_b) || diff <= rel_tol * abs(_a) || diff <= abs_tol\n  )\n}\n\n/* Arithmetics */\nexport function abs(num: bigint): bigint\nexport function abs(num: number | Complex): number\nexport function abs(num: JSNumber): JSNumber\nexport function abs(num: JSNumber) {\n  if (typeof num === 'bigint') {\n    return num >= 0n ? num : -num\n  } else if (num instanceof Complex) {\n    return num.abs()\n  }\n  return Math.abs(num)\n}\n\nfunction complexAdd(a: Complex, b: Complex): Complex {\n  return new Complex(a.re + b.re, a.im + b.im)\n}\nexport function add(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a + b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return complexAdd(toComplex(a), toComplex(b))\n  }\n  return Number(a) + Number(b)\n}\nfunction sub(a: bigint, b: bigint): bigint\nfunction sub(a: bigint | number, b: bigint | number): number\nfunction sub(a: JSNumber, b: JSNumber): Complex\nfunction sub(a: JSNumber, b: JSNumber): JSNumber {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a - b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return toComplex(a).sub(toComplex(b))\n  }\n  return Number(a) - Number(b)\n}\nfunction complexMul(a: Complex, b: Complex): Complex {\n  return new Complex(a.re * b.re - a.im * b.im, a.re * b.im + a.im * b.re)\n}\nexport function mul(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a * b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return complexMul(toComplex(a), toComplex(b))\n  }\n  return Number(a) * Number(b)\n}\nexport function div(a: number | bigint, b: number | bigint) {\n  // integer division\n  if (Number(b) === 0) throw Error('0으로 나눌 수 없습니다.')\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a / b\n  }\n  return Math.trunc(Number(a) / Number(b))\n}\nexport function mod(a: number | bigint, b: number | bigint) {\n  if (Number(b) === 0) throw Error('0으로 나눌 수 없습니다.')\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a % b\n  }\n  return Number(a) % Number(b)\n}\n\nexport function pow(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint' && b >= 0) {\n    return a ** b\n  }\n\n  const bReal = toRealIfPossible(b)\n  if (!(bReal instanceof Complex) && bReal < 0 && eq(a, 0))\n    throw Error('0의 역수를 구하려고 했습니다.')\n\n  if (\n    a instanceof Complex ||\n    b instanceof Complex ||\n    (a < 0 && !isInteger(b))\n  ) {\n    return toComplex(a).pow(toComplex(b))\n  }\n\n  return Number(a) === 1 ? 1 : Math.pow(Number(a), Number(b))\n}\n","/** Abstract syntax and values. **/\nimport Complex from 'complex.js'\nimport EastAsianWidth from 'eastasianwidth'\nimport { isclose } from './numbers'\n\nexport class Metadata {\n  private str?: string\n\n  constructor(\n    public filename: string,\n    public line_no: number,\n    public start_col: number,\n    public end_col: number,\n    public line: string\n  ) {}\n\n  toString() {\n    if (this.str == null) {\n      this.str =\n        this.line +\n        '\\n' +\n        ' '.repeat(EastAsianWidth.length(this.line.slice(0, this.start_col))) +\n        '^'.repeat(\n          EastAsianWidth.length(this.line.slice(this.start_col, this.end_col))\n        )\n    }\n    return this.str\n  }\n}\n\n/* Parser */\nexport class Literal {\n  constructor(public metadata: Metadata, public value: bigint) {}\n}\nexport class FunRef {\n  constructor(public metadata: Metadata, public rel: number) {}\n}\nexport class ArgRef {\n  constructor(\n    public metadata: Metadata,\n    public relA: AST,\n    public relF: number\n  ) {}\n}\nexport class FunDef {\n  constructor(public metadata: Metadata, public body: AST) {}\n}\nexport class FunCall {\n  constructor(public metadata: Metadata, public fun: AST, public argv: AST[]) {}\n}\nexport type AST = Literal | FunRef | ArgRef | FunDef | FunCall\n\n/* Interpreter */\nexport type IOUtils = {\n  input(): Promise<string | undefined>\n  print(content: string): void\n}\nexport type File = {\n  close(): void\n  read(numBytes: number): Promise<ArrayBuffer>\n  write(bytes: ArrayBuffer): number\n  seek(offset: number, whence: 'SEEK_SET' | 'SEEK_CUR'): number\n  tell(): number\n  truncate(size?: number): number\n}\nexport type LoadUtils = {\n  open(path: string | number, flags: 'a' | 'a+' | 'r' | 'r+' | 'w' | 'w+'): File\n  load(location: string): string\n  isFile(location: string): boolean\n  listdir(location: string): string[]\n  joinPath(...parts: string[]): string\n  normalizePath(path: string): string\n}\n\nexport class Env {\n  constructor(public funs: ClosureV[], public args: Value[][]) {}\n}\n\nexport class UnsuspectedHangeulError extends Error {\n  constructor(public err: ErrorV) {\n    let message = ''\n    for (const metadata of err.metadatas) {\n      message += `${metadata.filename} ${metadata.line_no + 1}번줄 `\n      message += `${metadata.start_col + 1}~${metadata.end_col + 1}번째 글자:\\n`\n      message += metadata.toString() + '\\n'\n    }\n    super(message + '\\n' + err.message)\n  }\n}\n\n/* Values */\nabstract class ValueBase {\n  abstract format(context: EvalContextBase): string\n  asKey(context: EvalContextBase): string {\n    return this.format(context)\n  }\n}\n\nfunction _isPossibleInt(num: number) {\n  return isFinite(num) && isclose(num, Math.floor(num))\n}\n\nfunction _formatFloat(num: number) {\n  if (isFinite(num)) return num.toString()\n  if (isNaN(num)) return 'nan'\n  return num > 0 ? 'inf' : '-inf'\n}\n\nexport class IntegerV extends ValueBase {\n  static typeName = '정수'\n  constructor(public value: bigint) {\n    super()\n  }\n  format(context: EvalContextBase) {\n    return this.value.toString()\n  }\n}\n\nexport class FloatV extends ValueBase {\n  static typeName = '실수'\n  constructor(public value: number) {\n    super()\n  }\n  format(context: EvalContextBase) {\n    const str = _formatFloat(this.value)\n    const trailing = _isPossibleInt(this.value) ? '.0' : ''\n    return str + trailing\n  }\n  asKey(context: EvalContextBase) {\n    return _formatFloat(this.value)\n  }\n}\n\nexport class ComplexV extends ValueBase {\n  static typeName = '복소수'\n  constructor(public value: Complex) {\n    super()\n  }\n  format(context: EvalContextBase) {\n    const re = this.value.re\n    const im = this.value.im\n    const reStr = _formatFloat(re) + (im < 0 ? '' : '+')\n    const imStr = im == 1 ? '' : im == -1 ? '-' : _formatFloat(im)\n    return (re === 0 ? '' : reStr) + imStr + 'i'\n  }\n  asKey(context: EvalContextBase): string {\n    return this.value.im ? this.format(context) : _formatFloat(this.value.re)\n  }\n}\n\nexport class BooleanV extends ValueBase {\n  static typeName = '논릿값'\n  constructor(public value: boolean) {\n    super()\n  }\n  format(context: EvalContextBase) {\n    return this.value ? 'True' : 'False'\n  }\n}\n\nexport class ListV extends ValueBase {\n  static typeName = '목록'\n  constructor(public value: Value[]) {\n    super()\n  }\n  format(context: EvalContextBase): string {\n    const children = this.value.map((value) =>\n      context.strict(value).format(context)\n    )\n    return `[${children.join(', ')}]`\n  }\n  asKey(context: EvalContextBase): string {\n    const children = this.value.map((value) =>\n      context.strict(value).asKey(context)\n    )\n    return `[${children.join(', ')}]`\n  }\n}\n\nexport class StringV extends ValueBase {\n  static typeName = '문자열'\n  public value: string[]\n  constructor(public str: string) {\n    super()\n    this.value = Array.from(str)\n  }\n  format(context: EvalContextBase) {\n    return \"'\" + this.str + \"'\"\n  }\n}\n\nexport class BytesV extends ValueBase {\n  static typeName = '바이트열'\n  private str?: string\n  constructor(public value: ArrayBuffer) {\n    super()\n  }\n  formatByte(c: number) {\n    const s = c.toString(16).toUpperCase()\n    return '\\\\x' + ('0' + s).slice(-2)\n  }\n  format(context: EvalContextBase) {\n    if (!this.str) {\n      const arr = Array.from(new Uint8Array(this.value))\n      const formatted = arr.map(this.formatByte)\n      this.str = \"b'\" + formatted.join('') + \"'\"\n    }\n    return this.str\n  }\n}\n\nexport class DictV extends ValueBase {\n  static typeName = '사전'\n  private _keys?: string[]\n  private _values?: Value[]\n  constructor(public value: Record<string, Value>) {\n    super()\n  }\n\n  keys() {\n    if (!this._keys) {\n      this._keys = Object.keys(this.value).sort()\n    }\n    return this._keys\n  }\n  values() {\n    if (!this._values) {\n      this._values = this.keys().map((k) => this.value[k])\n    }\n    return this._values\n  }\n\n  format(context: EvalContextBase): string {\n    const values = this.values().map((v) => context.strict(v).format(context))\n    const pairs = this.keys().map((k, i) => k + ': ' + values[i])\n    return '{' + pairs.join(', ') + '}'\n  }\n  asKey(context: EvalContextBase): string {\n    const values = this.values().map((v) => context.strict(v).asKey(context))\n    const pairs = this.keys().map((k, i) => k + ': ' + values[i])\n    return '{' + pairs.join(', ') + '}'\n  }\n}\n\nexport class IOV extends ValueBase {\n  static typeName = '드나듦'\n\n  constructor(\n    public inst: string,\n    public argv: Value[],\n    public continuation: (\n      doIO: (ioValue: IOV) => Promise<NonIOStrictValue>,\n      ioUtils: IOUtils\n    ) => Promise<StrictValue>\n  ) {\n    super()\n  }\n\n  format(context: EvalContextBase): string {\n    const formatted = this.argv\n      .map((value) => context.strict(value).format(context))\n      .join(', ')\n    return `<드나듦 ${this.inst}: [${formatted}]>`\n  }\n  asKey(context: EvalContextBase): string {\n    const formatted = this.argv\n      .map((value) => context.strict(value).asKey(context))\n      .join(', ')\n    return `<드나듦 ${this.inst}: [${formatted}]>`\n  }\n}\n\nexport class NilV extends ValueBase {\n  static typeName = '빈값'\n  constructor() {\n    super()\n  }\n  format(context: EvalContextBase): string {\n    return 'Nil'\n  }\n}\n\nlet FUNCTION_ID_GEN = 0\nexport abstract class FunctionV extends ValueBase {\n  static typeName = '함수'\n  private id: number\n  protected str: string\n  constructor(adj = '') {\n    super()\n    this.id = FUNCTION_ID_GEN++\n    this.str = '<' + adj + '함수>'\n  }\n  format(context: EvalContextBase) {\n    return this.str\n  }\n  asKey(context: EvalContextBase): string {\n    return this.str.replace('>', ' #' + this.id + '>')\n  }\n  abstract execute(\n    context: EvalContextBase,\n    metadata: Metadata,\n    argv: Value[]\n  ): Value\n}\n\nexport class ClosureV extends FunctionV {\n  constructor(public body: AST, public env: Env) {\n    super(`깊이 ${env.args.length}에서 생성된 `)\n  }\n\n  execute(context: EvalContextBase, metadata: Metadata, argv: Value[]) {\n    const newArgs = this.env.args.concat([argv])\n    const newEnv = new Env(this.env.funs, newArgs)\n    return new ExprV(this.body, newEnv, null)\n  }\n}\n\nexport class BuiltinModuleV extends FunctionV {\n  constructor(public module: Evaluation, name: string) {\n    super()\n    this.str = '<기본 제공 모듈 ' + name + '>'\n  }\n\n  execute(context: EvalContextBase, metadata: Metadata, argv: Value[]) {\n    return this.module(context, metadata, argv)\n  }\n}\n\nexport class ErrorV extends ValueBase {\n  static typeName = '예외'\n  constructor(\n    public metadatas: Metadata[],\n    public message: string,\n    public value: StrictValue[]\n  ) {\n    super()\n  }\n  format(context: EvalContextBase): string {\n    const formatted = this.value.map((v) => v.format(context)).join(', ')\n    return `<예외: [${formatted}]>`\n  }\n  asKey(context: EvalContextBase): string {\n    const formatted = this.value.map((v) => v.asKey(context)).join(', ')\n    return `<예외: [${formatted}]>`\n  }\n}\n\nexport class ExprV {\n  constructor(\n    public expr: AST,\n    public env: Env,\n    public cache: StrictValue | UnsuspectedHangeulError | null\n  ) {}\n}\n\nexport const RealV = [IntegerV, FloatV] as const\nexport const NumberV = [...RealV, ComplexV] as const\nexport const SequenceV = [ListV, StringV, BytesV] as const\nexport const CallableV = [\n  FunctionV,\n  BooleanV,\n  DictV,\n  ComplexV,\n  ErrorV,\n  ...SequenceV,\n] as const\nexport const AnyV = [...NumberV, ...CallableV, IOV, NilV] as const\n\nexport type StrictValueType = (typeof AnyV)[number]\n\nexport type NonIOStrictValue =\n  | IntegerV\n  | FloatV\n  | ComplexV\n  | ListV\n  | StringV\n  | BytesV\n  | BooleanV\n  | DictV\n  | ErrorV\n  | FunctionV\n  | NilV\nexport type StrictValue = NonIOStrictValue | IOV\nexport type Value = StrictValue | ExprV\n\nexport type ProcFunctionalFn = (\n  metadata: Metadata,\n  fun: Value,\n  generalCallable?: boolean\n) => Evaluation\nexport type StrictFn = (value: Value) => StrictValue\nexport type Evaluation = (\n  context: EvalContextBase,\n  metadata: Metadata,\n  argv: Value[]\n) => Value\n\nexport abstract class EvalContextBase {\n  constructor(public loadUtils: LoadUtils) {}\n\n  abstract strict(value: Value): StrictValue\n  abstract procFunctional(\n    metadata: Metadata,\n    fun: Value,\n    generalCallable?: boolean\n  ): Evaluation\n}\n","/* Parser for unsuspected hangeul. */\nimport * as AS from './abstractSyntax'\nimport * as E from './error'\n\n/** Normalizer **/\n\n// TABLES\n// note all ㅇ and ㅎ has a preceding space in following tables\nconst U1100 = (\n  'ㄱ|ㄱ|ㄴ|ㄷ|ㄷ|ㄹ|ㅁ|ㅂ|ㅂ|ㅅ|ㅅ| ㅇ|ㅈ|ㅈ|ㅈ|ㄱ|ㄷ|ㅂ| ㅎ|ㄴㄱ|ㄴ|ㄴㄷ|ㄴㅂ|ㄷㄱ|ㄹㄴ|ㄹ|' +\n  'ㄹ ㅎ|ㄹ|ㅁㅂ|ㅁ|ㅂㄱ|ㅂㄴ|ㅂㄷ|ㅂㅅ|ㅂㅅㄱ|ㅂㅅㄷ|ㅂㅅㅂ|ㅂㅅ|ㅂㅅㅈ|ㅂㅈ|ㅂㅈ|ㅂㄷ|ㅂㅂ|ㅂ|' +\n  'ㅂ|ㅅㄱ|ㅅㄴ|ㅅㄷ|ㅅㄹ|ㅅㅁ|ㅅㅂ|ㅅㅂㄱ|ㅅㅅ|ㅅ ㅇ|ㅅㅈ|ㅅㅈ|ㅅㄱ|ㅅㄷ|ㅅㅂ|ㅅ ㅎ|ㅅ|ㅅ|ㅅ|ㅅ|' +\n  'ㅅ| ㅇㄱ| ㅇㄷ| ㅇㅁ| ㅇㅂ| ㅇㅅ| ㅇㅅ| ㅇ| ㅇㅈ| ㅇㅈ| ㅇㄷ| ㅇㅂ| ㅇ|ㅈ ㅇ|ㅈ|ㅈ|ㅈ|ㅈ|' +\n  'ㅈㄱ|ㅈ ㅎ|ㅈ|ㅈ|ㅂㅂ|ㅂ| ㅎ| ㅎ|ㄱㄷ|ㄴㅅ|ㄴㅈ|ㄴ ㅎ|ㄷㄹ'\n).split('|')\nconst JAMO = (\n  'ㄱ|ㄱ|ㄱㅅ|ㄴ|ㄴㅈ|ㄴ ㅎ|ㄷ|ㄷ|ㄹ|ㄹㄱ|ㄹㅁ|ㄹㅂ|ㄹㅅ|ㄹㄷ|ㄹㅂ|ㄹ ㅎ|ㅁ|ㅂ|ㅂ|ㅂㅅ|ㅅ|ㅅ|' +\n  ' ㅇ|ㅈ|ㅈ|ㅈ|ㄱ|ㄷ|ㅂ| ㅎ'\n).split('|')\nconst U3165 = (\n  'ㄴ|ㄴㄷ|ㄴㅅ|ㄴㅅ|ㄹㄱㅅ|ㄹㄷ|ㄹㅂㅅ|ㅁㅅ|ㅁ|ㅂㄱ|ㅂㄷ|ㅂㅅㄱ|ㅂㅅㄷ|ㅂㅈ|ㅂㄷ|ㅂ|ㅂ|ㅅㄱ|ㅅㄴ|' +\n  ' ㅇ| ㅇ| ㅇㅅ| ㅇㅅ|ㅂ| ㅎ| ㅎ'\n).split('|')\nconst UA960 = (\n  'ㄷㅁ|ㄷㅂ|ㄷㅅ|ㄷㅈ|ㄹㄱ|ㄹㄱ|ㄹㄷ|ㄹㄷ|ㄹㅁ|ㄹㅂ|ㄹㅂ|ㄹㅂ|ㄹㅅ|ㄹㅈ|ㄹㄱ|ㅁㄱ|ㅁㄷ|ㅁㅅ|' +\n  'ㅂㅅㄷ|ㅂㄱ|ㅂ ㅎ|ㅅㅂ| ㅇㄹ| ㅇ ㅎ|ㅈ ㅎ|ㄷ|ㅂ ㅎ| ㅎㅅ| ㅎ'\n).split('|')\n\n/** Normalizes each character into standard form */\nfunction normalizeChar(c: string) {\n  if (c.length !== 1) {\n    throw Error(\n      '[normalizeChar] Length of string should be 1, not ' + c.length + ': ' + c\n    )\n  }\n\n  function _get(arr: string[], ref: string, divisor = 1) {\n    let idx = c.charCodeAt(0) - ref.charCodeAt(0)\n    idx = Math.floor(idx / divisor)\n    if (idx >= 0 && idx < arr.length) {\n      return arr[idx]\n    }\n    return ''\n  }\n\n  if (c >= '\\u1100' && c <= '\\u11FF') {\n    return _get(U1100, '\\u1100')\n  } else if (c >= '\\u302E' && c <= '\\u302F') {\n    return ''\n  } else if (c >= '\\u3131' && c <= '\\u3164') {\n    return _get(JAMO, '\\u3131')\n  } else if (c >= '\\u3165' && c <= '\\u318E') {\n    return _get(U3165, '\\u3165')\n  } else if (c >= '\\uA960' && c <= '\\uA97C') {\n    return _get(UA960, '\\uA960')\n  } else if (c >= '\\uAC00' && c <= '\\uD7AF') {\n    return _get(U1100, '\\uAC00', 588)\n  } else if (c >= '\\uD7B0' && c <= '\\uD7C6') {\n    return ''\n  } else if (c >= '\\uD7CB' && c <= '\\uD7FB') {\n    return ''\n  } else if (c >= '\\uFFA0' && c <= '\\uFFBE') {\n    return _get(JAMO, '\\uFFA1')\n  } else if ('ￂￃￄￅￆￇￊￋￌￍￎￏￒￓￔￕￖￗￚￛￜ'.indexOf(c) >= 0) {\n    return ''\n  } else return ' '\n}\n\nexport function normalize(sentence: string) {\n  const normalized = sentence.split('').map(normalizeChar).join('')\n  return normalized.split(/( )/)\n}\n\nfunction mergeMetadata(a: AS.Metadata, b: AS.Metadata) {\n  return new AS.Metadata(a.filename, a.line_no, a.start_col, b.end_col, a.line)\n}\n\nfunction tokenize(filename: string, sentence: string) {\n  const lines = sentence.split('\\n')\n  const characters = lines.flatMap((line, i) =>\n    (line + '\\n').split('').flatMap((c, j) =>\n      normalize(c)\n        .filter((d) => d !== '')\n        .map((d): [string, AS.Metadata] => [\n          d,\n          new AS.Metadata(filename, i, j, j + 1, line),\n        ])\n    )\n  )\n  if (characters.length === 0) return []\n\n  let tokens = [characters[0]]\n  for (const [cur, metadata] of characters.slice(1)) {\n    const top = tokens.pop()\n    if (top == null) throw Error('Internal::tokenize::EMPTY_STACK')\n    const [prev, prevMetadata] = top\n    if (prev === ' ' && cur === ' ') {\n      tokens.push([prev, prevMetadata])\n    } else if (prev !== ' ' && cur !== ' ') {\n      tokens.push([prev + cur, mergeMetadata(prevMetadata, metadata)])\n    } else {\n      tokens.push([prev, prevMetadata])\n      tokens.push([cur, metadata])\n    }\n  }\n  return tokens.filter(([c, metadata]) => c !== ' ')\n}\n\n/* Parses jamo-encoded variable length integer into JS Number */\nexport function parseNumber(s: string): bigint {\n  const tbl = 'ㄱㄴㄷㄹㅁㅂㅅㅈ'\n  const varlen = s.split('').map(function (c) {\n    return tbl.indexOf(c)\n  })\n  if (varlen.indexOf(-1) !== -1) {\n    throw SyntaxError('Argument ' + s + ' has an unsupported character')\n  }\n  let num = BigInt('0o' + varlen.reverse().join(''))\n  if (s.length % 2 === 0) {\n    num = -num\n  }\n  return num\n}\n\n/* Encodes JS integer to jamo-encoded variable length integer. */\nexport function encodeNumber(number: number | bigint) {\n  const isNegative = number < 0\n  number = number >= 0 ? number : -number\n  const oct = number.toString(8).split('').reverse()\n  const tbl = 'ㄱㄴㄷㄹㅁㅂㅅㅈ'\n  let encoded = oct.map((s) => tbl[+s]).join('')\n  if ((encoded.length % 2 === 0) !== isNegative) {\n    encoded += 'ㄱ'\n  }\n  return encoded\n}\n\n/** Parses concrete syntax to abstract syntax\n * @param token token to parse\n * @param stack list of parsed legal arguments so far that we will modify\n */\nfunction parseToken(token: [string, AS.Metadata], stack: AS.AST[]) {\n  const [word, metadata] = token\n  if (word.indexOf('ㅎ') !== -1) {\n    const arity = word.slice(1)\n\n    if (arity) {\n      // AS.FunCall\n      const _arity = Number(parseNumber(arity))\n      if (_arity < 0) {\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          `함수 호출 시 ${_arity}개의 인수를 요구했습니다.`\n        )\n      }\n\n      const fun = stack.pop()\n      if (fun == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '호출할 함수가 없습니다.'\n        )\n      if (_arity === 0) {\n        stack.push(new AS.FunCall(metadata, fun, []))\n      } else {\n        const argv = stack.splice(-_arity, _arity)\n        if (argv.length < _arity) {\n          throw new E.UnsuspectedHangeulSyntaxError(\n            metadata,\n            `함수 호출 시 ${_arity}개의 인수를 요구했으나 표현식이 ${argv.length}개밖에 없습니다.`\n          )\n        }\n        stack.push(new AS.FunCall(metadata, fun, argv))\n      }\n    } else {\n      // AS.FunDef\n      const body = stack.pop()\n      if (body == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '함수 몸통이 없습니다.'\n        )\n      stack.push(new AS.FunDef(metadata, body))\n    }\n  } else if (word.indexOf('ㅇ') !== -1) {\n    const trailer = word.slice(1)\n    if (trailer !== '') {\n      // AS.ArgRef\n      const relA = stack.pop()\n      if (relA == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '인수 참조 구문이 잘못되었습니다.'\n        )\n      const relF = Number(parseNumber(trailer))\n      stack.push(new AS.ArgRef(metadata, relA, relF))\n    } else {\n      // AS.FunRef\n      const relF = stack.pop()\n      if (relF == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '함수 참조 구문이 잘못되었습니다.'\n        )\n      if (!(relF instanceof AS.Literal)) {\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          `함수 참조 시에는 정수 리터럴만 허용됩니다.`\n        )\n      }\n      stack.push(new AS.FunRef(metadata, Number(relF.value)))\n    }\n  } else {\n    stack.push(new AS.Literal(metadata, parseNumber(word)))\n  }\n}\n\n/* Parses program into abstract syntax */\nexport function parse(filename: string, sentence: string) {\n  const tokens = tokenize(filename, sentence)\n  const stack: AS.AST[] = []\n  for (const token of tokens) {\n    parseToken(token, stack)\n  }\n  return stack\n}\n","import * as AS from './abstractSyntax'\nimport { parseNumber } from './parse'\n\nexport class UnsuspectedHangeulBuiltinError extends AS.UnsuspectedHangeulError {\n  constructor(metadata: AS.Metadata, message: string, codes: bigint[]) {\n    const _codes = [parseNumber('ㅂ'), ...codes]\n    const argv = _codes.map((code) => new AS.IntegerV(code))\n    const err = new AS.ErrorV([metadata], message, argv)\n    super(err)\n  }\n}\n\nexport class UnsuspectedHangeulOSError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㅈ') // 체제\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulArithmeticError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅅㅅ') // 산술\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulSyntaxError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅁㅂ') // 문법\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulTypeError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㄱ') // 꼴\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulValueError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㅁ') // 잘못\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulDivisionError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㄴㄴ') // 나누기\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulNotFoundError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅁㅈ') // 못찾\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulImportError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅂ') // 불러오기\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulOutOfRangeError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅂㄱ') // 바깥\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulKeyboardInterruptError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㄷ') // 중단\n    super(metadata, message, [code])\n  }\n}\n","/** Useful utilities **/\nimport * as AS from './abstractSyntax'\nimport * as E from './error'\n\nexport function isLiteralExpr(\n  expr: AS.Value\n): expr is AS.ExprV & { expr: AS.Literal } {\n  return expr instanceof AS.ExprV && expr.expr instanceof AS.Literal\n}\n\nexport function extractValue<T>(arg: { value: T }): T {\n  return arg.value\n}\n\nexport function getLength(arg: { length: number } | ArrayBuffer) {\n  return 'length' in arg ? arg.length : arg.byteLength\n}\n\nexport function joinArrayBuffer(bufs: ArrayBuffer[]) {\n  const size = bufs.map((a) => a.byteLength).reduce((a, b) => a + b, 0)\n  const newBuf = new ArrayBuffer(size)\n  const view = new Uint8Array(newBuf)\n  bufs.reduce(function (idx, buf) {\n    view.set(new Uint8Array(buf), idx)\n    return idx + buf.byteLength\n  }, 0)\n  return newBuf\n}\n\nexport function recursiveMap(\n  item: AS.Value,\n  fn: (value: AS.Value) => AS.StrictValue\n): AS.StrictValue {\n  const _item = fn(item)\n  if (_item instanceof AS.ListV) {\n    return new AS.ListV(_item.value.map((v) => recursiveMap(v, fn)))\n  }\n  if (_item instanceof AS.DictV) {\n    const d = _item.value\n    const result: Record<string, AS.StrictValue> = {}\n    Object.keys(d).forEach(function (k) {\n      result[k] = recursiveMap(d[k], fn)\n    })\n    return new AS.DictV(result)\n  }\n  if (_item instanceof AS.ErrorV) {\n    return new AS.ErrorV(\n      _item.metadatas,\n      _item.message,\n      _item.value.map((v) => recursiveMap(v, fn))\n    )\n  }\n  return _item\n}\n\nexport function allEqual<T>(arr: T[]): boolean {\n  if (arr.length === 0) return true\n  return arr.every(function (a) {\n    return a === arr[0]\n  })\n}\n\n/* Argument constraint checkers */\nexport function isType<T extends AS.StrictValueType>(\n  argv: AS.StrictValue[],\n  desiredTypes: readonly T[]\n): argv is InstanceType<T>[] {\n  function _matches(arg: AS.StrictValue) {\n    return desiredTypes.some(function (desiredType) {\n      return arg instanceof desiredType\n    })\n  }\n  return argv.every(_matches)\n}\n\nfunction _formatArray(arr: string[], conj = ', ') {\n  return arr.join(conj)\n}\n\nexport function checkType<T extends AS.StrictValueType>(\n  metadata: AS.Metadata,\n  argv: AS.StrictValue[],\n  desiredTypes: readonly T[]\n): InstanceType<T>[] {\n  if (isType(argv, desiredTypes)) return argv\n  const desiredTypeNames = desiredTypes.map((t) => t.typeName)\n  const argTypeNames = argv.map(\n    (a) => (a.constructor as AS.StrictValueType).typeName\n  )\n  throw new E.UnsuspectedHangeulTypeError(\n    metadata,\n    `인수를 ${_formatArray(desiredTypeNames)} 중에서 주어야 하는데 ` +\n      `${josa(_formatArray(argTypeNames), '을', '를')} 주었습니다.`\n  )\n}\n\nexport function checkArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  desiredArities: number | number[]\n) {\n  const arities = Array.isArray(desiredArities)\n    ? desiredArities\n    : [desiredArities]\n  if (arities.indexOf(argv.length) !== -1) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${_formatArray(\n      arities.map((a) => a.toString()),\n      '개나 '\n    )}개를 주어야 하는데 ` + `${argv.length}개의 인수를 주었습니다.`\n  )\n}\n\nexport function checkMinArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  minimumArity: number\n) {\n  if (argv.length >= minimumArity) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${minimumArity}개 이상 주어야 하는데` +\n      `${argv.length}개 주었습니다.`\n  )\n}\n\nexport function checkMaxArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  maximumArity: number\n) {\n  if (argv.length <= maximumArity) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${maximumArity}개 이하 주어야 하는데` +\n      `${argv.length}개 주었습니다.`\n  )\n}\n\nexport function matchDefaults<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  arity: number,\n  defaults?: T[]\n) {\n  if (defaults === undefined) {\n    defaults = []\n  }\n  checkMaxArity(metadata, argv, arity)\n  checkMinArity(metadata, argv, arity - defaults.length)\n  if (argv.length < arity) {\n    let deficiency = arity - argv.length\n    argv = argv.concat(defaults.slice(-deficiency))\n  }\n  return argv\n}\n\nexport function josa(\n  content: string,\n  particleBatchim: string,\n  particleNoBatchim: string\n): string {\n  if (content.length === 0) return content + particleBatchim\n  const lastCode = content.charCodeAt(content.length - 1)\n  if (lastCode < 0xac00 || lastCode > 0xd7a3) return content + particleBatchim\n  const hasBatchim = (lastCode - 0xac00) % 28 !== 0\n  return content + (hasBatchim ? particleBatchim : particleNoBatchim)\n}\n","import Complex from 'complex.js'\n\nimport * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { add, div, mod, mul, pow } from '../numbers'\nimport {\n  checkArity,\n  checkMinArity,\n  checkType,\n  extractValue,\n  isType,\n  joinArrayBuffer,\n} from '../utils'\n\nexport function wrapNumber(num: bigint | number | Complex) {\n  if (typeof num === 'bigint') return new AS.IntegerV(num)\n  if (num instanceof Complex) return new AS.ComplexV(num)\n  return new AS.FloatV(num)\n}\n\n/** Returns (g, x, y) such that a*x + b*y = g = gcd(a, b) */\nfunction extendedGcd(a: bigint, b: bigint): [bigint, bigint, bigint] {\n  let [x, x_old, y, y_old] = [0n, 1n, 1n, 0n]\n  while (a !== 0n) {\n    const quotient = b / a\n    ;[a, b] = [b % a, a]\n    ;[y, y_old] = [y_old, y - quotient * y_old]\n    ;[x, x_old] = [x_old, x - quotient * x_old]\n  }\n  return [b, x, y]\n}\n\nfunction modularInverse(num: bigint, modulo: bigint) {\n  const [g, inverse, _] = extendedGcd(num % modulo, modulo)\n  if (g === 1n) return (inverse + modulo) % modulo\n  throw Error(`법 ${modulo}에 대한 ${num}의 역원이 없습니다.`)\n}\n\nfunction modPow(base: bigint, exponent: bigint, modulo: bigint): bigint {\n  if (modulo === 0n) throw Error(`0을 법으로 할 수 없습니다.`)\n  base = base % modulo\n  let result = 1n\n  if (exponent < 0n) {\n    exponent = -exponent\n    base = modularInverse(base, modulo)\n  }\n  while (exponent > 0n) {\n    if (base === 0n) return 0n\n    if (exponent % 2n === 1n) result = (result * base) % modulo\n    exponent /= 2n\n    base = base ** 2n % modulo\n  }\n  return result\n}\n\nfunction _multiply(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkMinArity(metadata, argv, 1)\n  const first = checkType(\n    metadata,\n    [context.strict(argv[0])],\n    [AS.BooleanV, ...AS.NumberV]\n  )\n  if (isType(first, AS.NumberV)) {\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      AS.NumberV\n    )\n    return wrapNumber(_argv.map((arg) => arg.value).reduce(mul))\n  }\n\n  // short-circuiting\n  for (const arg of argv) {\n    const [_arg] = checkType(metadata, [context.strict(arg)], [AS.BooleanV])\n    if (!_arg.value) return new AS.BooleanV(false)\n  }\n  return new AS.BooleanV(true)\n}\n\nfunction _add(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkMinArity(metadata, argv, 1)\n  const first = checkType(\n    metadata,\n    [context.strict(argv[0])],\n    [AS.BooleanV, AS.DictV, ...AS.NumberV, ...AS.SequenceV]\n  )\n  if (isType(first, [AS.BooleanV])) {\n    // short-circuiting\n    for (const arg of argv) {\n      const [_arg] = checkType(metadata, [context.strict(arg)], [AS.BooleanV])\n      if (_arg.value) return new AS.BooleanV(true)\n    }\n    return new AS.BooleanV(false)\n  }\n\n  if (isType(first, [AS.StringV])) {\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.StringV]\n    )\n    return new AS.StringV(_argv.map((arg) => arg.str).join(''))\n  }\n  if (isType(first, [AS.BytesV])) {\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.BytesV]\n    )\n    return new AS.BytesV(joinArrayBuffer(_argv.map(extractValue)))\n  }\n  if (isType(first, [AS.ListV])) {\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.ListV]\n    )\n    return new AS.ListV(_argv.map(extractValue).reduce((a, b) => a.concat(b)))\n  }\n  if (isType(first, [AS.DictV])) {\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.DictV]\n    )\n    const result = {}\n    _argv.map(extractValue).forEach((d) => Object.assign(result, d))\n    return new AS.DictV(result)\n  }\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    AS.NumberV\n  )\n  return wrapNumber(_argv.map((arg) => arg.value).reduce(add))\n}\n\nfunction _exponentiate(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [2, 3])\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    AS.NumberV\n  )\n  if (_argv.length === 3) {\n    const [base, exp, mod] = checkType(metadata, _argv, [AS.IntegerV])\n    try {\n      return new AS.IntegerV(modPow(base.value, exp.value, mod.value))\n    } catch (err) {\n      if (err instanceof Error) {\n        throw new E.UnsuspectedHangeulArithmeticError(metadata, err.message)\n      }\n      throw err\n    }\n  }\n  checkArity(metadata, _argv, 2)\n  try {\n    return wrapNumber(pow(_argv[0].value, _argv[1].value))\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new E.UnsuspectedHangeulDivisionError(metadata, error.message)\n    }\n    throw error\n  }\n}\n\nfunction _integerDivision(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    AS.RealV\n  )\n  try {\n    return wrapNumber(div(_argv[0].value, _argv[1].value))\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new E.UnsuspectedHangeulDivisionError(\n        metadata,\n        '0의 역수를 구하려고 했습니다.'\n      )\n    }\n    throw error\n  }\n}\n\nfunction _remainder(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    AS.RealV\n  )\n  try {\n    return wrapNumber(mod(_argv[0].value, _argv[1].value))\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new E.UnsuspectedHangeulDivisionError(\n        metadata,\n        '0의 역수를 구하려고 했습니다.'\n      )\n    }\n    throw error\n  }\n}\n\nexport default {\n  ㄱ: _multiply,\n  ㄷ: _add,\n  ㅅ: _exponentiate,\n  ㄴㄴ: _integerDivision,\n  ㄴㅁ: _remainder,\n}\n","import Complex from 'complex.js'\n\nimport * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { arrayToInt, toComplex } from '../numbers'\nimport { checkArity, checkType, isType, matchDefaults } from '../utils'\n\nfunction _parseStrToNumber(\n  metadata: AS.Metadata,\n  argv: AS.StrictValue[]\n): [string, number] {\n  const _argv = matchDefaults(metadata, argv, 2, [new AS.IntegerV(10n)])\n  const [str] = checkType(metadata, [_argv[0]], [AS.StringV])\n  const [num] = checkType(metadata, [_argv[1]], [AS.IntegerV])\n  return [str.str, Number(num.value)]\n}\n\nfunction _list(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  return new AS.ListV(argv)\n}\nfunction _dict(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  const len = argv.length\n  if (len % 2 === 1) {\n    throw new E.UnsuspectedHangeulValueError(\n      metadata,\n      `ㅅㅈ 함수에는 인수를 짝수 개로 주어야 하는데 ${len}개를 주었습니다.`\n    )\n  }\n  const keys = argv.filter((_, i) => i % 2 === 0)\n  const values = argv.filter((_, i) => i % 2 === 1)\n  const _keys = keys.map((key) => context.strict(key).asKey(context))\n  const result: Record<string, AS.Value> = {}\n  for (let i = 0; i < len / 2; i++) {\n    result[_keys[i]] = values[i]\n  }\n  return new AS.DictV(result)\n}\nfunction _string(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [0, 1])\n  if (argv.length === 0) return new AS.StringV('')\n  const [arg] = checkType(\n    metadata,\n    [context.strict(argv[0])],\n    [AS.StringV, ...AS.NumberV]\n  )\n  if (arg instanceof AS.StringV) return arg\n  return new AS.StringV(arg.format(context))\n}\nfunction _integer(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [1, 2])\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.StringV, ...AS.RealV]\n  )\n  const first = [_argv[0]]\n  if (isType(first, AS.RealV)) {\n    checkArity(metadata, _argv, 1)\n    if (first[0] instanceof AS.IntegerV) return first[0]\n    const value = Math.trunc(first[0].value)\n    return new AS.IntegerV(BigInt(value))\n  }\n  const [digits, radix] = _parseStrToNumber(metadata, _argv)\n  try {\n    return new AS.IntegerV(arrayToInt(digits, radix))\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new E.UnsuspectedHangeulValueError(metadata, error.message)\n    }\n    throw error\n  }\n}\nfunction _float(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [1, 2])\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.StringV, ...AS.RealV]\n  )\n  const first = [_argv[0]]\n  if (isType(first, AS.RealV)) {\n    checkArity(metadata, _argv, 1)\n    return new AS.FloatV(Number(first[0].value))\n  }\n  const [digits, radix] = _parseStrToNumber(metadata, _argv)\n  if (radix === 10) {\n    const num = Number(digits)\n    if (isNaN(num))\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `다음 문자열을 실수값으로 변환할 수 없습니다: '${digits}'`\n      )\n    return new AS.FloatV(num)\n  }\n  const splitted = digits.trim().split('.')\n  let significant = splitted.join('')\n  if (significant[0] === '+') significant = significant.slice(1)\n  try {\n    const _significant = Number(arrayToInt(significant, radix))\n    const order = splitted.length > 1 ? splitted[1].length : 0\n    return new AS.FloatV(_significant / radix ** order)\n  } catch (error) {\n    throw new E.UnsuspectedHangeulValueError(\n      metadata,\n      `다음 문자열을 실수값으로 변환할 수 없습니다: '${digits}'`\n    )\n  }\n}\nfunction _complex(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [1, 2])\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.StringV, ...AS.NumberV]\n  )\n  if (argv.length === 1) {\n    const arg = _argv[0] instanceof AS.StringV ? _argv[0].str : _argv[0].value\n    try {\n      return new AS.ComplexV(toComplex(arg))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `다음 문자열을 복소수값으로 변환할 수 없습니다: ${arg}`\n        )\n      }\n      throw error\n    }\n  }\n  const __argv = checkType(metadata, _argv, AS.NumberV)\n  const values = __argv.map((arg) => toComplex(arg.value))\n  const re = values[0].re - values[1].im\n  const im = values[0].im + values[1].re\n  return new AS.ComplexV(Complex({ re, im }))\n}\nfunction _nil(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 0)\n  return new AS.NilV()\n}\nfunction _exception(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  const _argv = argv.map((x) => context.strict(x))\n  const message = `사용자 예외: ${_argv.map((v) => v.format(context))}`\n  return new AS.ErrorV([metadata], message, _argv)\n}\n\nexport default {\n  ㅅㅈ: _dict,\n  ㅁㄹ: _list,\n  ㅁㅈ: _string,\n  ㅈㅅ: _integer,\n  ㅅㅅ: _float,\n  ㅂㅅ: _complex,\n  ㅂㄱ: _nil,\n  ㄷㅂ: _exception,\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, recursiveMap } from '../utils'\n\nfunction _throw(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n): AS.Value {\n  checkArity(metadata, argv, 1)\n  const [arg] = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.ErrorV]\n  )\n  throw new AS.UnsuspectedHangeulError(arg)\n}\nfunction _try(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  try {\n    return recursiveMap(argv[0], (x) => context.strict(x))\n  } catch (error) {\n    if (error instanceof AS.UnsuspectedHangeulError) {\n      const fun = context.procFunctional(metadata, argv[1])\n      return fun(context, metadata, [error.err])\n    }\n    throw error\n  }\n}\n\nexport default {\n  ㄷㅈ: _throw,\n  ㅅㄷ: _try,\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType } from '../utils'\n\nclass PipeV extends AS.FunctionV {\n  constructor(private funs: AS.Evaluation[]) {\n    super('연결된 ')\n  }\n\n  execute(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    const result = this.funs.reduce(\n      (argv, f) => [f(context, metadata, argv)],\n      argv\n    )\n    return result[0]\n  }\n}\nclass CollectV extends AS.FunctionV {\n  constructor(private context: AS.EvalContextBase, private fn: AS.Evaluation) {\n    super('모아 받는 ')\n  }\n\n  execute(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, 1)\n    const seq = this.context.strict(argv[0])\n    const [_seq] = checkType(metadata, [seq], [AS.ListV, AS.ErrorV])\n    return this.fn(context, metadata, _seq.value)\n  }\n}\nclass SpreadV extends AS.FunctionV {\n  constructor(private fn: AS.Evaluation) {\n    super('펼쳐 받는 ')\n  }\n\n  execute(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    return this.fn(context, metadata, [new AS.ListV(argv)])\n  }\n}\n\nfunction _proc(context: AS.EvalContextBase, metadata: AS.Metadata) {\n  return (fun: AS.Value) => context.procFunctional(metadata, fun, true)\n}\nfunction _pipe(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  return new PipeV(argv.map(_proc(context, metadata)))\n}\nfunction _collect(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 1)\n  return new CollectV(context, _proc(context, metadata)(argv[0]))\n}\nfunction _spread(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 1)\n  return new SpreadV(_proc(context, metadata)(argv[0]))\n}\nexport default {\n  ㄴㄱ: _pipe,\n  ㅁㅂ: _collect,\n  ㅂㅂ: _spread,\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { encodeNumber } from '../parse'\nimport {\n  checkArity,\n  checkMaxArity,\n  checkMinArity,\n  checkType,\n  recursiveMap,\n} from '../utils'\n\nconst MODE_TABLE = {\n  ㄹ: 'r',\n  ㅈㄹ: 'w',\n  ㅈㄱ: 'a',\n  ㄹㅈㄹ: 'r+',\n  ㅈㄹㄹ: 'w+',\n  ㅈㄱㄹ: 'a+',\n} as const\n\nclass FileV extends AS.FunctionV {\n  constructor(private file: AS.File) {\n    super('파일 접근 ')\n  }\n  execute(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    checkMinArity(metadata, argv, 1)\n    const [command] = checkType(\n      metadata,\n      argv.slice(-1).map((x) => context.strict(x)),\n      [AS.IntegerV]\n    )\n    const commandStr = encodeNumber(command.value)\n    if (commandStr === 'ㄷ') {\n      return this.close(context, metadata, argv)\n    } else if (commandStr === 'ㄹ') {\n      return this.read(context, metadata, argv)\n    } else if (commandStr === 'ㅈㄹ') {\n      return this.write(context, metadata, argv)\n    } else if (commandStr === 'ㅈ') {\n      return this.seekOrTell(context, metadata, argv)\n    } else if (commandStr === 'ㄱ') {\n      return this.truncate(context, metadata, argv)\n    } else {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `${commandStr}은 파일 객체가 인식하지 못하는 명령입니다.`\n      )\n    }\n  }\n  private close(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    checkArity(metadata, argv, 1)\n    return new AS.IOV('FileV::close', [this], async (doIO, ioUtils) => {\n      try {\n        this.file.close()\n        return new AS.NilV()\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 닫기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n  private read(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    checkArity(metadata, argv, 2)\n    const [count] = checkType(\n      metadata,\n      [context.strict(argv[0])],\n      [AS.IntegerV]\n    )\n    return new AS.IOV('FileV::read', [this, count], async (doIO, ioUtils) => {\n      try {\n        const content = await this.file.read(Number(count.value))\n        return new AS.BytesV(content)\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 읽기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n  private write(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    checkArity(metadata, argv, 2)\n    const [content] = checkType(\n      metadata,\n      [context.strict(argv[0])],\n      [AS.BytesV]\n    )\n    return new AS.IOV(\n      'FileV::write',\n      [this, content],\n      async (doIO, ioUtils) => {\n        try {\n          const count = this.file.write(content.value)\n          return new AS.IntegerV(BigInt(count))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일 쓰기에 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n  private seekOrTell(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    checkMaxArity(metadata, argv, 3)\n    const _argv = argv.map((x) => context.strict(x))\n    if (argv.length === 1) {\n      return new AS.IOV('FileV::seekOrTell', [this], async (doIO, ioUtils) => {\n        try {\n          return new AS.IntegerV(BigInt(this.file.tell()))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일의 어디를 읽고 있는지 알아내는 데 실패하였습니다: ${error}`\n          )\n        }\n      })\n    }\n\n    let whence: 'SEEK_SET' | 'SEEK_CUR' = 'SEEK_SET'\n    let offset: AS.IntegerV\n    if (argv.length === 2) {\n      ;[offset] = checkType(metadata, [_argv[0]], [AS.IntegerV])\n    } else {\n      ;[offset] = checkType(metadata, [_argv[1]], [AS.IntegerV])\n      let [_whence] = checkType(metadata, [_argv[0]], [AS.IntegerV])\n      switch (encodeNumber(_whence.value)) {\n        case 'ㅅㅈㅂㄷ':\n          whence = 'SEEK_SET'\n          break\n        case 'ㅈㄱㅂㄷ':\n          whence = 'SEEK_CUR'\n          break\n        default:\n          throw new E.UnsuspectedHangeulValueError(\n            metadata,\n            `파일 객체의 ㅈ 명령에 주는 위치 인수로 ${_whence.value}은 적절하지 않습니다.`\n          )\n      }\n    }\n    return new AS.IOV(\n      'FileV::seekOrTell',\n      [this, ..._argv.slice(0, -1)],\n      async (doIO, ioUtils) => {\n        try {\n          const pos = this.file.seek(Number(offset.value), whence)\n          return new AS.IntegerV(BigInt(pos))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일의 읽는 위치를 수정하는 데 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n  private truncate(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    checkMaxArity(metadata, argv, 2)\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.IntegerV]\n    )\n    const size = _argv.length > 1 ? Number(_argv[0].value) : undefined\n    return new AS.IOV(\n      'FileV::truncate',\n      [this, ..._argv.slice(0, -1)],\n      async (doIO, ioUtils) => {\n        try {\n          const newSize = this.file.truncate(size)\n          return new AS.IntegerV(BigInt(newSize))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일 크기를 재조정하는 데 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n}\n\nfunction _input(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 0)\n  return new AS.IOV('ㄹ', argv, async function (doIO, ioUtils) {\n    const input = await ioUtils.input()\n    return input == null ? new AS.NilV() : new AS.StringV(input)\n  })\n}\nfunction _print(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 1)\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.StringV]\n  )\n  return new AS.IOV('ㅈㄹ', _argv, async function (doIO, ioUtils) {\n    ioUtils.print(_argv[0].str)\n    return new AS.NilV()\n  })\n}\nfunction _return(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 1)\n  const arg = recursiveMap(argv[0], (x) => context.strict(x))\n  return new AS.IOV('ㄱㅅ', [arg], async function (doIO, ioUtils) {\n    return arg\n  })\n}\nfunction _bind(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [2, 3])\n  const [ioToBind] = checkType(metadata, [context.strict(argv[0])], [AS.IOV])\n  return new AS.IOV('ㄱㄹ', argv, async function (doIO, ioUtils) {\n    let arg: AS.NonIOStrictValue\n    try {\n      arg = await doIO(ioToBind)\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) {\n        if (argv.length < 3) throw error\n        const result = context.procFunctional(metadata, argv[2])(\n          context,\n          metadata,\n          [error.err]\n        )\n        const [_result] = checkType(\n          metadata,\n          [context.strict(result)],\n          [AS.IOV]\n        )\n        return _result\n      }\n      throw error\n    }\n    const result = context.procFunctional(metadata, argv[1])(\n      context,\n      metadata,\n      [arg]\n    )\n    const [_result] = checkType(metadata, [context.strict(result)], [AS.IOV])\n\n    return _result\n  })\n}\nfunction _file(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  const [path] = checkType(\n    metadata,\n    [context.strict(argv[0])],\n    [AS.IntegerV, AS.StringV]\n  )\n  const _path = path instanceof AS.IntegerV ? Number(path.value) : path.str\n\n  const [mode] = checkType(metadata, [context.strict(argv[1])], [AS.IntegerV])\n  const modeStr = encodeNumber(mode.value)\n  if (!(modeStr in MODE_TABLE)) {\n    throw new E.UnsuspectedHangeulValueError(\n      metadata,\n      `${modeStr}은 기본 제공 함수 ㄱㄴ이 이해하는 파일 열기 방식이 아닙니다.`\n    )\n  }\n  const _mode = MODE_TABLE[modeStr as keyof typeof MODE_TABLE]\n  return new AS.IOV('ㄱㄴ', [path, mode], async function (doIO, ioUtils) {\n    try {\n      return new FileV(context.loadUtils.open(_path, _mode))\n    } catch (error) {\n      throw new E.UnsuspectedHangeulOSError(\n        metadata,\n        `파일 열기에 실패하였습니다: ${error}`\n      )\n    }\n  })\n}\n\nexport default {\n  ㄹ: _input,\n  ㅈㄹ: _print,\n  ㄱㅅ: _return,\n  ㄱㄹ: _bind,\n  ㄱㄴ: _file,\n}\n","import * as AS from '../abstractSyntax'\nimport { eq, JSNumber } from '../numbers'\nimport { allEqual, checkArity, checkType, extractValue, isType } from '../utils'\n\nfunction _allNumbersEqual(nums: JSNumber[]) {\n  if (nums.length === 0) return true\n  return nums.slice(1).every((x) => eq(x, nums[0]))\n}\n\nfunction _allBytesEqual(buffers: ArrayBuffer[]) {\n  if (buffers.length === 0) return true\n  if (!allEqual(buffers.map((buf) => buf.byteLength))) return false\n  const len = buffers[0].byteLength\n  const views = buffers.map((buf) => new Uint8Array(buf))\n  for (let i = 0; i < len; i++) {\n    if (!allEqual(views.map((view) => view[i]))) return false\n  }\n  return true\n}\n\nfunction _listedEquals(\n  context: AS.EvalContextBase,\n  arrs: AS.Value[][]\n): boolean {\n  if (arrs.length === 0) return true\n  if (!allEqual(arrs.map((arr) => arr.length))) return false\n  var len = arrs[0].length\n  for (var i = 0; i < len; i++) {\n    // compare among tiers\n    if (\n      !_valueEquals(\n        context,\n        arrs.map((arr) => arr[i])\n      ).value\n    )\n      return false\n  }\n  return true\n}\n\nfunction _dictEquals(context: AS.EvalContextBase, dicts: AS.DictV[]): boolean {\n  if (dicts.length === 0) return true\n  const keys = dicts.map((d) => d.keys())\n  if (\n    !_listedEquals(\n      context,\n      keys.map((ks) => ks.map((k) => new AS.StringV(k)))\n    )\n  )\n    return false\n  const values = keys[0].map((k) => dicts.map((d) => d.value[k]))\n  return values.map((x) => _valueEquals(context, x)).every(extractValue)\n}\n\nfunction _valueEquals(context: AS.EvalContextBase, argv: AS.Value[]) {\n  const _argv = argv.map((x) => context.strict(x))\n  if (isType(_argv, [AS.FunctionV])) {\n    return new AS.BooleanV(allEqual(_argv))\n  } else if (isType(_argv, [AS.DictV])) {\n    return new AS.BooleanV(_dictEquals(context, _argv))\n  } else if (isType(_argv, [AS.IOV])) {\n    if (!allEqual(_argv.map((arg) => arg.inst))) return new AS.BooleanV(false)\n    return new AS.BooleanV(\n      _listedEquals(\n        context,\n        _argv.map((arg) => arg.argv)\n      )\n    )\n  } else if (isType(_argv, AS.NumberV)) {\n    return new AS.BooleanV(_allNumbersEqual(_argv.map((arg) => arg.value)))\n  } else if (isType(_argv, [AS.ListV, AS.ErrorV])) {\n    return new AS.BooleanV(_listedEquals(context, _argv.map(extractValue)))\n  } else if (isType(_argv, [AS.BytesV])) {\n    return new AS.BooleanV(_allBytesEqual(_argv.map(extractValue)))\n  } else if (isType(_argv, [AS.StringV])) {\n    return new AS.BooleanV(allEqual(_argv.map((x) => x.str)))\n  } else if (isType(_argv, [AS.BooleanV])) {\n    return new AS.BooleanV(allEqual(_argv.map(extractValue)))\n  } else if (isType(_argv, [AS.NilV])) {\n    return new AS.BooleanV(true)\n  }\n  return new AS.BooleanV(false)\n}\n\nfunction _equals(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  return _valueEquals(context, argv)\n}\n\nfunction _negate(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 1)\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.BooleanV]\n  )\n  return new AS.BooleanV(!_argv[0].value)\n}\n\nfunction _lessThan(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    AS.RealV\n  )\n  return new AS.BooleanV(_argv[0].value < _argv[1].value)\n}\n\nfunction _true(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 0)\n  return new AS.BooleanV(true)\n}\n\nfunction _false(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 0)\n  return new AS.BooleanV(false)\n}\n\nexport default {\n  ㄴ: _equals,\n  ㅁ: _negate,\n  ㅈ: _lessThan,\n  ㅈㅈ: _true,\n  ㄱㅈ: _false,\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, extractValue } from '../utils'\n\nfunction _wrap(\n  op: (...args: bigint[]) => bigint,\n  arity: number\n): AS.Evaluation {\n  return function (\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, arity)\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.IntegerV]\n    )\n    return new AS.IntegerV(op(..._argv.map(extractValue)))\n  }\n}\n\nexport default {\n  ㅂㄷ: {\n    ㄱ: _wrap((a, b) => a & b, 2),\n    ㄷ: _wrap((a, b) => a | b, 2),\n    ㅁ: _wrap((a) => ~a, 1),\n    ㅂ: _wrap((a, b) => a ^ b, 2),\n    ㅈ: _wrap((a, b) => a << b, 2),\n  },\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { arrayToInt, intToArray } from '../numbers'\nimport { checkArity, checkType } from '../utils'\n\nfunction _isBigEndianSystem() {\n  // Copied from:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView#endianness\n  const buffer = new ArrayBuffer(2)\n  new DataView(buffer).setInt16(0, 256, false /* big endian */)\n  // Int16Array uses the platform's endianness.\n  return new Int16Array(buffer)[0] === 256\n}\n\nfunction _write(\n  view: DataView,\n  arr: number[],\n  numBytes: number,\n  bigEndian?: boolean\n) {\n  const _set = {\n    1: view.setUint8.bind(view),\n    2: view.setUint16.bind(view),\n    4: view.setUint32.bind(view),\n  }[numBytes]\n  if (_set == null) throw Error()\n  for (let i = 0; i < arr.length; i++) {\n    _set(i * numBytes, arr[i], !bigEndian)\n  }\n}\n\nfunction _read(view: DataView, numBytes: number, bigEndian?: boolean) {\n  const _get = {\n    1: view.getUint8.bind(view),\n    2: view.getUint16.bind(view),\n    4: view.getUint32.bind(view),\n  }[numBytes]\n  if (_get == null) throw Error()\n  var arr = []\n  for (let i = 0; i < view.byteLength; i += numBytes) {\n    arr.push(_get(i, !bigEndian))\n  }\n  return arr\n}\n\nfunction isExpressible(integer: bigint, numBytes: bigint, signed: boolean) {\n  const bound = 2n << (8n * numBytes)\n  if (signed) return -bound / 2n <= integer && integer < bound / 2n\n  return 0n <= integer && integer < bound\n}\n\nconst CODEC_TBL = ['utf', 'unsigned', 'signed', 'float'] as const\n\nclass Codec extends AS.FunctionV {\n  private scheme: (typeof CODEC_TBL)[number]\n  private numBytes: number\n  private bigEndian?: boolean\n  private endianness: 'big' | 'little' | ''\n  private codec: AS.Evaluation\n  constructor(\n    metadata: AS.Metadata,\n    scheme: AS.StrictValue,\n    numBytes: AS.StrictValue,\n    bigEndian?: AS.StrictValue\n  ) {\n    super()\n    const [_scheme, _numBytes] = checkType(\n      metadata,\n      [scheme, numBytes],\n      [AS.IntegerV]\n    )\n    this.scheme = CODEC_TBL[Number(_scheme.value)]\n    this.numBytes = Number(_numBytes.value)\n    this.endianness = ''\n    if (bigEndian) {\n      const [_bigEndian] = checkType(metadata, [bigEndian], [AS.BooleanV])\n      this.bigEndian = _bigEndian.value\n      this.endianness = this.bigEndian ? 'big' : 'little'\n    }\n    this.codec = this.getCodec()\n\n    this.str =\n      '<Codec(scheme=' +\n      this.scheme +\n      ', num_bytes=' +\n      this.numBytes +\n      ', big_endian=' +\n      this.bigEndian +\n      ')>'\n  }\n\n  execute(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    const _argv = argv.map((x) => context.strict(x))\n    try {\n      return this.codec(context, metadata, _argv)\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) throw error\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `요청된 변환을 수행하지 못했습니다. 변환기: ${this.str}, 인수: ${_argv}`\n      )\n    }\n  }\n\n  getCodec(): AS.Evaluation {\n    switch (this.scheme) {\n      case 'utf':\n        return this.unicodeCodec\n      case 'signed':\n        return this.integerCodec\n      case 'unsigned':\n        return this.integerCodec\n      case 'float':\n        return this.floatingPointCodec\n    }\n  }\n\n  unicodeCodec(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, 1)\n    const [arg] = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.StringV, AS.BytesV]\n    )\n    if (arg instanceof AS.StringV) {\n      if (this.numBytes === 1) {\n        const encoder = new TextEncoder()\n        return new AS.BytesV(encoder.encode(arg.str).buffer)\n      }\n\n      let arr: number[]\n      if (this.numBytes === 2) {\n        arr = arg.str.split('').map((c) => c.charCodeAt(0))\n      } else if (this.numBytes === 4) {\n        arr = arg.value\n          .map((c) => c.codePointAt(0))\n          .filter((x): x is number => x != null)\n      } else {\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `UTF-${this.numBytes * 8} 형식은 존재하지 않습니다.`\n        )\n      }\n\n      if (this.endianness === '') {\n        arr.unshift(0xfeff)\n      }\n      const buf = new ArrayBuffer(arr.length * this.numBytes)\n      _write(new DataView(buf), arr, this.numBytes, this.bigEndian)\n      return new AS.BytesV(buf)\n    } else {\n      const buf = arg.value\n      if (this.numBytes === 1) {\n        const decoder = new TextDecoder()\n        return new AS.StringV(decoder.decode(new Uint8Array(buf)))\n      }\n\n      let view = new DataView(buf)\n      let bigEndian = this.bigEndian ?? _isBigEndianSystem()\n      if (this.endianness === '') {\n        const getter = (\n          this.numBytes > 2 ? view.getUint32 : view.getUint16\n        ).bind(view)\n        const guessBigEndian = getter(0) === 0xfeff\n        if (guessBigEndian || getter(0, true) === 0xfeff) {\n          bigEndian = guessBigEndian\n          view = new DataView(buf, this.numBytes)\n        }\n      }\n      const arr = _read(view, this.numBytes, bigEndian)\n      return new AS.StringV(String.fromCodePoint(...arr))\n    }\n  }\n\n  integerCodec(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, 1)\n    const signed = this.scheme === 'signed'\n    const [arg] = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      [AS.IntegerV, AS.BytesV]\n    )\n    if (arg instanceof AS.IntegerV) {\n      let num = arg.value\n      const isNegative = num < 0\n\n      if (isNegative && !signed)\n        throw Error('음수는 부호 없는 정수 형식으로 변환할 수 없습니다.')\n      if (!isExpressible(num, BigInt(this.numBytes), signed))\n        throw Error(\n          `${this.numBytes}바이트로 표현할 수 없는 정수를 받았습니다.`\n        )\n\n      if (isNegative) num = ~num\n      const arr = intToArray(num, 256n).map(Number)\n      const buf = new ArrayBuffer(this.numBytes)\n      const u8 = new Uint8Array(buf)\n      u8.set(arr, this.numBytes - arr.length)\n      if (isNegative) u8.forEach((n, i) => (u8[i] = ~n))\n      if (!this.bigEndian) u8.reverse()\n      return new AS.BytesV(buf)\n    } else {\n      const buf = arg.value.slice(0)\n      const u8 = new Uint8Array(buf)\n      if (!this.bigEndian) u8.reverse()\n      const isNegative = signed && u8[0] & 0x80\n      if (isNegative) u8.forEach((n, i) => (u8[i] = ~n))\n      const arr = Array.from(u8)\n      let num = arrayToInt(arr, 256)\n      if (isNegative) num = ~num\n      return new AS.IntegerV(num)\n    }\n  }\n\n  floatingPointCodec(\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ): AS.Value {\n    throw EvalError('Not yet implemented')\n  }\n}\n\nfunction codec(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [2, 3])\n  const _argv = argv.map((x) => context.strict(x))\n  const scheme = _argv[0]\n  const numBytes = _argv[1]\n  const bigEndian = _argv.length > 2 ? _argv[2] : undefined\n  return new Codec(metadata, scheme, numBytes, bigEndian)\n}\n\nexport default { ㅂ: codec }\n","import * as AS from '../abstractSyntax'\nimport { wrapNumber } from '../builtins/arithmetics'\nimport { JSNumber, abs, isclose, isinf, isnan, toComplex } from '../numbers'\nimport { checkArity, checkType, isType } from '../utils'\n\nfunction _rountToInf(x: number) {\n  return x > 0 ? Math.ceil(x) : Math.floor(x)\n}\nfunction _rountToEven(x: number) {\n  let rounded = Math.round(x)\n  if (x % 1 === 0.5 || x % 1 === -0.5) {\n    if (rounded % 2 === 1 || rounded % 2 === -1) rounded--\n  }\n  return rounded\n}\nfunction _wrapType<T, V>(type: { new (arg: V): T }) {\n  return (arg: V) => new type(arg)\n}\n\nfunction _wrap<\n  ReturnInnerValue,\n  ReturnValue extends AS.StrictValue & { value: ReturnInnerValue },\n  ArgInnerValue extends InstanceType<ArgValue>['value'],\n  ArgValue extends (typeof AS.NumberV)[number]\n>(\n  _fn: (...args: ArgInnerValue[]) => ReturnInnerValue,\n  arity: number,\n  retWrapper: (inner: ReturnInnerValue) => ReturnValue,\n  argType: readonly ArgValue[]\n) {\n  return function (\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, arity)\n    const _argv = checkType(\n      metadata,\n      argv.map((x) => context.strict(x)),\n      argType\n    )\n    const values = _argv.map(\n      (arg: InstanceType<ArgValue>) => arg.value as ArgInnerValue\n    )\n    return retWrapper(_fn(...values))\n  }\n}\n\nfunction _wrap2(\n  fnName: 'log' | 'sin' | 'asin' | 'cos' | 'acos' | 'tan' | 'atan'\n) {\n  return function (\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, 1)\n    const _argv = checkType(metadata, [context.strict(argv[0])], AS.NumberV)\n    if (isType(_argv, AS.RealV)) {\n      const value = Math[fnName](Number(_argv[0].value))\n      if (!isNaN(value)) return new AS.FloatV(value)\n    }\n    return new AS.ComplexV(toComplex(_argv[0].value)[fnName]())\n  }\n}\n\nfunction _wrapRound(_rounder: (x: number) => number) {\n  return function (\n    context: AS.EvalContextBase,\n    metadata: AS.Metadata,\n    argv: AS.Value[]\n  ) {\n    checkArity(metadata, argv, 1)\n    const [arg] = checkType(metadata, [context.strict(argv[0])], AS.RealV)\n    if (arg instanceof AS.IntegerV) return arg\n    const _arg = BigInt(_rounder(arg.value))\n    return new AS.IntegerV(_arg)\n  }\n}\nconst _atan1 = _wrap2('atan')\nconst _atan2 = _wrap(\n  (y, x) => Math.atan2(Number(y), Number(x)),\n  2,\n  _wrapType(AS.FloatV),\n  AS.RealV\n)\nfunction _atan(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  return argv.length === 2\n    ? _atan2(context, metadata, argv)\n    : _atan1(context, metadata, argv)\n}\nexport default {\n  ㅅ: {\n    ㅂ: Math.PI,\n    ㅈ: Math.E,\n    ㅁ: Infinity,\n    ㄴ: NaN,\n    ㄱ: _wrap(\n      (a: JSNumber, b: JSNumber) => isclose(a, b),\n      2,\n      _wrapType(AS.BooleanV),\n      AS.NumberV\n    ),\n    ㄴㄴ: _wrap(isnan, 1, _wrapType(AS.BooleanV), AS.NumberV),\n    ㅁㄴ: _wrap(isinf, 1, _wrapType(AS.BooleanV), AS.NumberV),\n    ㅈㄷ: _wrap(abs, 1, wrapNumber, AS.NumberV),\n    ㄹㄱ: _wrap2('log'),\n    ㅅㄴ: _wrap2('sin'),\n    ㄴㅅ: _wrap2('asin'),\n    ㄱㅅ: _wrap2('cos'),\n    ㅅㄱ: _wrap2('acos'),\n    ㄷㄴ: _wrap2('tan'),\n    ㄴㄷ: _atan,\n    ㅂㄹ: {\n      ㄱ: _wrapRound(Math.trunc),\n      ㄴ: _wrapRound(Math.floor),\n      ㄷ: _wrapRound(_rountToEven),\n      ㄹ: _wrapRound(Math.ceil),\n      ㅁ: _wrapRound(_rountToInf),\n    },\n  },\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { encodeNumber, normalize, parse, parseNumber } from '../parse'\nimport { checkArity, checkMinArity, checkType, isLiteralExpr } from '../utils'\n\nimport buildBitwise from '../modules/bitwise'\nimport buildByte from '../modules/byte'\nimport buildMath from '../modules/math'\n\ninterface ModuleTable\n  extends Record<string, number | AS.Evaluation | ModuleTable> {}\nconst BUILDERS: ModuleTable[] = [buildBitwise, buildByte, buildMath]\n\nvar MODULE_REGISTRY: Record<string, AS.Value> = {}\nvar BUILTIN_MODULE_REGISTRY = new AS.DictV({})\n\nfunction loadFromPath(context: AS.EvalContextBase, path: string) {\n  path = context.loadUtils.normalizePath(path)\n  var module = MODULE_REGISTRY[path]\n  if (module) return module\n  const program = context.loadUtils.load(path)\n  const exprs = parse(path, program)\n  if (exprs.length !== 1) {\n    throw new E.UnsuspectedHangeulValueError(\n      exprs[0].metadata,\n      `모듈에는 표현식이 하나만 있어야 하는데 ${exprs.length}개가 있습니다.`\n    )\n  }\n  const env = new AS.Env([], [])\n  module = new AS.ExprV(exprs[0], env, null)\n  MODULE_REGISTRY[path] = module\n  return module\n}\n\nfunction loadFromLiteral(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  literals: bigint[]\n) {\n  const name = literals.map(encodeNumber).join(' ')\n  const errMsg = `정수 리터럴열 ${name}에 맞는 모듈을 찾지 못했습니다.`\n  // Search builtins\n  if (literals[0] === 5n) {\n    var module: AS.Value = BUILTIN_MODULE_REGISTRY\n    for (const idx of literals.slice(1)) {\n      if (module instanceof AS.DictV) {\n        module = module.value[idx.toString()]\n      } else throw new E.UnsuspectedHangeulNotFoundError(metadata, errMsg)\n    }\n    return module\n  }\n  const path = searchLiteral(context, metadata, literals, '.')\n  if (!path) throw new E.UnsuspectedHangeulNotFoundError(metadata, errMsg)\n  return loadFromPath(context, path)\n}\n\nfunction searchLiteral(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  literals: bigint[],\n  location: string\n): string | null {\n  if (literals.length === 0) {\n    return context.loadUtils.isFile(location) ? location : null\n  }\n  const cur = literals[0]\n  const sub = literals.slice(1)\n\n  const subentries = context.loadUtils.listdir(location)\n  const found = subentries\n    .map((entry) => {\n      if (!matchesLiteral(entry, cur)) return null\n      const searchPath = context.loadUtils.joinPath(location, entry)\n      return searchLiteral(context, metadata, sub, searchPath)\n    })\n    .filter((x) => x)\n\n  if (found.length > 1) {\n    throw new E.UnsuspectedHangeulImportError(\n      metadata,\n      `${location}에 정수 리터럴열 ${literals}에 맞는 모듈이 ` +\n        `${found.length}개 있어 모호합니다.`\n    )\n  }\n  return found.length ? found[0] : null\n}\n\nfunction matchesLiteral(string: string, literal: bigint) {\n  string = normalize(string).join(' ').trim()\n  try {\n    return parseNumber(string) === literal\n  } catch (e) {\n    return false\n  }\n}\n\ntype LeafData = number | AS.Evaluation | ModuleData\ninterface ModuleData extends Record<string, LeafData> {}\nfunction constructBuiltinModule(data: LeafData, keys: string[]) {\n  if (typeof data === 'function') {\n    return new AS.BuiltinModuleV(data, keys.join(' '))\n  } else if (typeof data === 'number') {\n    return new AS.FloatV(data) // ad-hoc\n  }\n  return constructBuiltinModules(data, keys)\n}\nfunction constructBuiltinModules(data: ModuleData, keys: string[]) {\n  let newObj: Record<string, AS.Value> = {}\n  for (const key in data) {\n    newObj[parseNumber(key).toString()] = constructBuiltinModule(\n      data[key],\n      keys.concat([key])\n    )\n  }\n  return new AS.DictV(newObj)\n}\n\nfunction _registerBuiltinModule(module: ModuleTable) {\n  const _module = constructBuiltinModules(module, ['ㅂ'])\n  Object.assign(BUILTIN_MODULE_REGISTRY.value, _module.value)\n}\nBUILDERS.forEach(_registerBuiltinModule)\n\nfunction _load(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkMinArity(metadata, argv, 1)\n  if (argv.every(isLiteralExpr)) {\n    var literals = argv.map((arg) => arg.expr.value)\n    return loadFromLiteral(context, metadata, literals)\n  }\n  checkArity(metadata, argv, 1)\n  const [filepath] = checkType(\n    metadata,\n    [context.strict(argv[0])],\n    [AS.StringV]\n  )\n  return loadFromPath(context, filepath.str)\n}\n\nexport default {\n  ㅂ: _load,\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport {\n  checkArity,\n  checkType,\n  extractValue,\n  getLength,\n  matchDefaults,\n} from '../utils'\n\nfunction* slice<T>(arr: T[], start: number, end: number, step: number) {\n  const startIdx = start < 0 ? start + arr.length : start\n  const endIdx = end < 0 ? end + arr.length : end\n\n  if (step > 0) {\n    const _startIdx = Math.max(0, startIdx)\n    const _endIdx = Math.min(endIdx, arr.length)\n    for (let i = _startIdx; i < _endIdx; i += step) {\n      yield arr[i]\n    }\n  } else {\n    const _startIdx = Math.min(startIdx, arr.length - 1)\n    const _endIdx = Math.max(-1, endIdx)\n    for (let i = _startIdx; i > _endIdx; i += step) {\n      yield arr[i]\n    }\n  }\n}\n\nfunction _len(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 1)\n  const [seq] = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [...AS.SequenceV, AS.ErrorV]\n  )\n  if (seq instanceof AS.BytesV) {\n    return new AS.IntegerV(BigInt(seq.value.byteLength))\n  }\n  return new AS.IntegerV(BigInt(seq.value.length))\n}\n\nfunction _slice(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [2, 3, 4])\n  const _argv = argv.map((x) => context.strict(x))\n  const [seq] = checkType(metadata, [_argv[0]], AS.SequenceV)\n  const rest = checkType(metadata, _argv.slice(1), [AS.IntegerV])\n  const _rest = rest.map((arg) => Number(arg.value))\n  const [start, end, step] = matchDefaults(metadata, _rest, 3, [\n    getLength(seq.value),\n    1,\n  ])\n  if (step === 0) {\n    throw new E.UnsuspectedHangeulValueError(\n      metadata,\n      '0은 ㅂㅈ 함수의 네 번째 인수로 적합하지 않습니다.'\n    )\n  }\n\n  if (seq instanceof AS.ListV) {\n    const items = slice(seq.value, start, end, step)\n    return new AS.ListV(Array.from(items))\n  }\n  if (seq instanceof AS.StringV) {\n    const items = slice(seq.value, start, end, step)\n    return new AS.StringV(Array.from(items).join(''))\n  }\n  const _seq = Array.from(new Uint8Array(seq.value))\n  const sliced = slice(_seq, start, end, step)\n  return new AS.BytesV(new Uint8Array(sliced).buffer)\n}\n\nfunction _map(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  const [seq] = checkType(metadata, [context.strict(argv[0])], [AS.ListV])\n  const fn = context.procFunctional(metadata, argv[1])\n  return new AS.ListV(seq.value.map((a) => fn(context, metadata, [a])))\n}\n\nfunction _filter(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, 2)\n  const [seq] = checkType(metadata, [context.strict(argv[0])], [AS.ListV])\n  const fn = context.procFunctional(metadata, argv[1])\n\n  const fitCheck = seq.value.map((a) =>\n    context.strict(fn(context, metadata, [a]))\n  )\n  const fit = checkType(metadata, fitCheck, [AS.BooleanV]).map(extractValue)\n  return new AS.ListV(seq.value.filter((_, idx) => fit[idx]))\n}\n\nfunction _fold(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [2, 3])\n  let init: AS.Value | null = null\n  if (argv.length === 3) {\n    init = argv[1]\n    argv = [argv[0], argv[2]]\n  }\n\n  const first = context.strict(argv[0])\n  const fromRight = first instanceof AS.ListV\n  function maybeReversed<T>(arr: T[]): T[] {\n    if (!fromRight) return arr\n    return arr.slice().reverse()\n  }\n\n  argv = maybeReversed(argv)\n  const fn = context.procFunctional(metadata, argv[0])\n  const [seq] = checkType(metadata, [context.strict(argv[1])], [AS.ListV])\n\n  let feed = maybeReversed(seq.value)\n  if (init == null) {\n    init = feed[0]\n    feed = feed.slice(1)\n  }\n  return feed.reduce(function (acc, item) {\n    const args = maybeReversed([acc, item])\n    return fn(context, metadata, args)\n  }, init)\n}\n\nexport default {\n  ㅈㄷ: _len,\n  ㅂㅈ: _slice,\n  ㅁㄷ: _map,\n  ㅅㅂ: _filter,\n  ㅅㄹ: _fold,\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, joinArrayBuffer } from '../utils'\n\nfunction _split(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [1, 2])\n  const _argv = checkType(\n    metadata,\n    argv.map((x) => context.strict(x)),\n    [AS.StringV, AS.BytesV]\n  )\n  if (_argv[0] instanceof AS.StringV) {\n    const __argv = checkType(metadata, _argv, [AS.StringV])\n    const src = __argv[0].str\n    const delimiter = __argv.length > 1 ? __argv[1].str : ''\n    const pieces = src.split(delimiter)\n    return new AS.ListV(pieces.map((piece) => new AS.StringV(piece)))\n  }\n  const __argv = checkType(metadata, _argv, [AS.BytesV])\n  const src = String.fromCharCode(...new Uint8Array(__argv[0].value))\n  const delimiter =\n    __argv.length > 1\n      ? String.fromCharCode(...new Uint8Array(__argv[1].value))\n      : ''\n  const pieces = src.split(delimiter)\n  const buf = pieces.map(\n    (piece) =>\n      new AS.BytesV(\n        new Uint8Array(piece.split('').map((c) => c.charCodeAt(0))).buffer\n      )\n  )\n  return new AS.ListV(buf)\n}\n\nfunction _join(\n  context: AS.EvalContextBase,\n  metadata: AS.Metadata,\n  argv: AS.Value[]\n) {\n  checkArity(metadata, argv, [1, 2])\n\n  const [seq] = checkType(metadata, [context.strict(argv[0])], [AS.ListV])\n  const pieces = checkType(\n    metadata,\n    seq.value.map((x) => context.strict(x)),\n    [AS.StringV, AS.BytesV]\n  )\n\n  if (pieces[0] instanceof AS.StringV) {\n    const _pieces = checkType(metadata, pieces, [AS.StringV])\n    const delimiter =\n      argv.length > 1 ? context.strict(argv[1]) : new AS.StringV('')\n    const [_delimiter] = checkType(metadata, [delimiter], [AS.StringV])\n    return new AS.StringV(_pieces.map((x) => x.str).join(_delimiter.str))\n  }\n\n  const _pieces = checkType(metadata, pieces, [AS.BytesV])\n  const delimiter =\n    argv.length > 1\n      ? context.strict(argv[1])\n      : new AS.BytesV(new ArrayBuffer(0))\n  const [_delimiter] = checkType(metadata, [delimiter], [AS.BytesV])\n\n  if (_pieces.length === 0) return new AS.BytesV(new ArrayBuffer(0))\n  const buffers = [_pieces[0].value]\n  for (const piece of _pieces.slice(1)) {\n    buffers.push(_delimiter.value)\n    buffers.push(piece.value)\n  }\n  return new AS.BytesV(joinArrayBuffer(buffers))\n}\n\nexport default {\n  ㅂㄹ: _split,\n  ㄱㅁ: _join,\n}\n","import * as AS from './abstractSyntax'\nimport * as E from './error'\nimport { encodeNumber } from './parse'\nimport { checkArity, checkType, isLiteralExpr } from './utils'\n\nimport buildArithmetics from './builtins/arithmetics'\nimport buildConstructors from './builtins/constructors'\nimport buildControl from './builtins/control'\nimport buildFunctional from './builtins/functional'\nimport buildIO from './builtins/io'\nimport buildLogic from './builtins/logic'\nimport buildModule from './builtins/module'\nimport buildSequence from './builtins/sequence'\nimport buildString from './builtins/string'\n\ntype BuiltinFunctionMap = Record<string, AS.Evaluation>\nconst BUILTINS: BuiltinFunctionMap = {\n  ...buildArithmetics,\n  ...buildConstructors,\n  ...buildControl,\n  ...buildFunctional,\n  ...buildIO,\n  ...buildLogic,\n  ...buildModule,\n  ...buildSequence,\n  ...buildString,\n}\n\nexport class EvalContext implements AS.EvalContextBase {\n  constructor(public loadUtils: AS.LoadUtils) {}\n\n  /** Forces strict evaluation of the value */\n  strict(value: AS.Value): AS.StrictValue {\n    if (value instanceof AS.ExprV) {\n      if (value.cache) {\n        if (value.cache instanceof AS.UnsuspectedHangeulError) {\n          throw value.cache\n        }\n        return value.cache\n      }\n      try {\n        value.cache = this.strict(interpret(this, value.expr, value.env))\n        return value.cache\n      } catch (error) {\n        if (error instanceof AS.UnsuspectedHangeulError) {\n          value.cache = error\n        }\n        throw error\n      }\n    }\n    return value\n  }\n\n  /**\n   * Converts function-like values into functions.\n   * @param metadata Caller's metadata.\n   * @param fun A maybe-Expr value that may correspond to a function.\n   * @param generalCallable Whether to allow callable other than function.\n   * @returns A recipe function that receives argument list and returns the value.\n   */\n  procFunctional(\n    metadata: AS.Metadata,\n    fun: AS.Value,\n    generalCallable?: boolean | undefined\n  ): AS.Evaluation {\n    if (isLiteralExpr(fun)) return findBuiltin(metadata, Number(fun.expr.value))\n\n    const allow = generalCallable ? AS.CallableV : [AS.FunctionV]\n    const [_fun] = checkType(metadata, [this.strict(fun)], allow)\n\n    if (_fun instanceof AS.FunctionV) {\n      return _fun.execute.bind(_fun)\n    } else if (_fun instanceof AS.BooleanV) {\n      return function (\n        context: AS.EvalContextBase,\n        metadata: AS.Metadata,\n        argv: AS.Value[]\n      ): AS.Value {\n        checkArity(metadata, argv, 2)\n        return argv[_fun.value ? 0 : 1]\n      }\n    } else if (_fun instanceof AS.DictV) {\n      return function (\n        context: AS.EvalContextBase,\n        metadata: AS.Metadata,\n        argv: AS.Value[]\n      ): AS.Value {\n        checkArity(metadata, argv, 1)\n        const argKey = context.strict(argv[0]).asKey(context)\n        const value = _fun.value[argKey]\n        if (value) return value\n        throw new E.UnsuspectedHangeulNotFoundError(\n          metadata,\n          `사전에 다음 표제가 없습니다: ${argKey}`\n        )\n      }\n    } else if (_fun instanceof AS.ComplexV) {\n      return function (\n        context: AS.EvalContextBase,\n        metadata: AS.Metadata,\n        argv: AS.Value[]\n      ): AS.Value {\n        checkArity(metadata, argv, 1)\n        const arg = context.strict(argv[0])\n        const [_arg] = checkType(metadata, [arg], [AS.IntegerV])\n        if (_arg.value === 0n || _arg.value === 1n) {\n          return new AS.FloatV(_fun.value.toVector()[Number(_arg.value)])\n        }\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `복소수 객체의 ${_arg.value}번째 요소를 접근하려고 했습니다.`\n        )\n      }\n    } else {\n      return function (\n        context: AS.EvalContextBase,\n        metadata: AS.Metadata,\n        argv: AS.Value[]\n      ): AS.Value {\n        checkArity(metadata, argv, 1)\n        const arg = context.strict(argv[0])\n        const [_arg] = checkType(metadata, [arg], [AS.IntegerV])\n        const idx = Number(_arg.value)\n        try {\n          if (_fun instanceof AS.BytesV) {\n            return new AS.BytesV(_accessBuffer(_fun.value, idx))\n          }\n          if (_fun instanceof AS.StringV) {\n            return new AS.StringV(_accessArray(_fun.value, idx))\n          }\n          return _accessArray(_fun.value, idx)\n        } catch (error) {\n          if (error instanceof Error) {\n            throw new E.UnsuspectedHangeulOutOfRangeError(\n              metadata,\n              error.message\n            )\n          }\n          throw error\n        }\n      }\n    }\n  }\n}\n\n/**\n * Finds the built-in function corresponding to the builtin function id.\n * @param metadata Caller's metadata.\n * @param id Built-in function ID.\n * @returns corresponding function that takes arguments.\n */\nfunction findBuiltin(metadata: AS.Metadata, id: number) {\n  const inst = encodeNumber(id)\n  const builtinFun = BUILTINS[inst]\n  if (builtinFun) return builtinFun\n  throw new E.UnsuspectedHangeulNotFoundError(\n    metadata,\n    `${inst}이라는 이름의 기본 제공 함수를 찾지 못했습니다.`\n  )\n}\n\nfunction _accessArray<T>(arr: T[], rel: number): T {\n  const idx = rel < 0 ? rel + arr.length : rel\n  if (idx < 0 || idx >= arr.length)\n    throw Error(`길이 ${arr.length}의 객체의 ${rel}번째 요소를 요청했습니다.`)\n  return arr[idx]\n}\nfunction _accessBuffer(buf: ArrayBuffer, rel: number): ArrayBuffer {\n  const idx = rel < 0 ? rel + buf.byteLength : rel\n  if (idx < 0 || idx >= buf.byteLength)\n    throw Error(\n      `길이 ${buf.byteLength}의 바이트열의 ${rel}번째 요소를 요청했습니다.`\n    )\n  return buf.slice(idx, idx + 1)\n}\n\n/** Evaluates the expression in given environment and returns a value */\nexport function interpret(\n  context: AS.EvalContextBase,\n  expr: AS.AST,\n  env: AS.Env\n) {\n  if (expr instanceof AS.Literal) {\n    return new AS.IntegerV(expr.value)\n  } else if (expr instanceof AS.FunRef) {\n    const fun = _accessArray(env.funs, -expr.rel - 1)\n    if (fun == null) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        '함수 참조의 범위를 벗어났습니다.'\n      )\n    }\n    return fun\n  } else if (expr instanceof AS.ArgRef) {\n    if (env.funs.length !== env.args.length) {\n      throw Error(\n        'Assertion Error: Environment has ' +\n          env.funs.length +\n          ' funs and ' +\n          env.args.length +\n          ' args.'\n      )\n    }\n    const args = _accessArray(env.args, -expr.relF - 1)\n    if (args == null) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        '존재하지 않는 함수에 대한 인수 참조를 시도했습니다.'\n      )\n    }\n    const relA = context.strict(interpret(context, expr.relA, env))\n    const [_relA] = checkType(expr.metadata, [relA], [AS.IntegerV])\n    const relAValue = _relA.value\n    if (relAValue < 0 || relAValue > args.length) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        `${relAValue}번째 인수를 참조하는데 ${args.length}개의 인수만 받았습니다.`\n      )\n    } else return args[Number(relAValue)]\n  } else if (expr instanceof AS.FunDef) {\n    var newFuns = env.funs.slice()\n    var newEnv = new AS.Env(newFuns, env.args)\n    var closure = new AS.ClosureV(expr.body, newEnv)\n    newEnv.funs.push(closure)\n    return closure\n  } else if (expr instanceof AS.FunCall) {\n    var fun = new AS.ExprV(expr.fun, env, null)\n    var argv = expr.argv.map(function (arg) {\n      return new AS.ExprV(arg, env, null)\n    })\n    var recipe = context.procFunctional(expr.metadata, fun, true)\n    return recipe(context, expr.metadata, argv)\n  }\n  throw Error('Unexpected expression: ' + expr)\n}\n","import * as AS from './abstractSyntax'\nimport { EvalContext, interpret } from './interpret'\nimport { parse } from './parse'\nimport { checkType } from './utils'\n\n/** Receives an IOV and produces non-IOV non-ExprV value. */\nasync function doIO(\n  value: AS.StrictValue,\n  ioUtils: AS.IOUtils\n): Promise<AS.NonIOStrictValue> {\n  const _doIO = (value: AS.StrictValue) => doIO(value, ioUtils)\n  while (value instanceof AS.IOV) {\n    value = await value.continuation(_doIO, ioUtils)\n  }\n  return value\n}\n\n/** Converts the value into string for display */\nasync function toString(\n  value: AS.Value,\n  context: AS.EvalContextBase,\n  ioUtils: AS.IOUtils,\n  formatIO: boolean\n): Promise<string> {\n  const _partial = (v: AS.Value) => toString(v, context, ioUtils, formatIO)\n  value = context.strict(value)\n  if (value instanceof AS.IOV) {\n    value = await doIO(value, ioUtils)\n    const formatted = await _partial(value)\n    return formatIO ? 'IO(' + formatted + ')' : formatted\n  }\n\n  if (value instanceof AS.ListV) {\n    return '[' + (await Promise.all(value.value.map(_partial))).join(', ') + ']'\n  }\n  if (value instanceof AS.DictV) {\n    const d = value.value\n    const keys = value.keys()\n    const pairs = await Promise.all(\n      keys.map(async (k) => k + ': ' + (await _partial(d[k])))\n    )\n    return '{' + pairs.join(', ') + '}'\n  }\n  if (value instanceof AS.ErrorV) {\n    const argvStr = (await Promise.all(value.value.map(_partial))).join(', ')\n    return '<예외: [' + argvStr + ']>'\n  }\n  return value.format(context)\n}\n\n/** Main procedure. Parses, evaluates, and converts to str.\n * @param filename File name of the program\n * @param program raw string that encodes a program\n * @returns A string representing the resulting value */\nexport async function main(\n  filename: string,\n  program: string,\n  ioUtils: AS.IOUtils,\n  loadUtils: AS.LoadUtils,\n  formatIO = true\n): Promise<string[]> {\n  const exprs = parse(filename, program)\n  const context = new EvalContext(loadUtils)\n  const env = new AS.Env([], [])\n  const values = exprs.map((expr) => interpret(context, expr, env))\n  return Promise.all(values.map((v) => toString(v, context, ioUtils, formatIO)))\n}\n\n/** Main procedure. Parses, evaluates, and converts to str.\n * @param filename File name of the program\n * @param program raw string that encodes a program\n * @returns A string representing the resulting value */\nexport async function run(\n  filename: string,\n  program: string,\n  argv: string[],\n  ioUtils: AS.IOUtils,\n  loadUtils: AS.LoadUtils\n): Promise<number> {\n  const metadata = new AS.Metadata('<main>', 0, 0, 0, '')\n  const args = argv.map((arg) => new AS.StringV(arg))\n\n  const exprs = parse(filename, program)\n  if (exprs.length === 0) return 0\n  if (exprs.length > 1) {\n    const error = new AS.ErrorV(\n      exprs.map((expr) => expr.metadata),\n      `모듈에는 표현식이 하나만 있어야 하는데 ${exprs.length}개가 있습니다.`,\n      []\n    )\n    throw new AS.UnsuspectedHangeulError(error)\n  }\n\n  const context = new EvalContext(loadUtils)\n  const env = new AS.Env([], [])\n  let value = context.strict(interpret(context, exprs[0], env))\n\n  if (value instanceof AS.FunctionV) {\n    const recipe = context.procFunctional(metadata, value)\n    value = context.strict(recipe(context, metadata, args))\n  }\n\n  if (value instanceof AS.IOV) {\n    value = await doIO(value, ioUtils)\n  }\n\n  const [exitCode] = checkType(metadata, [value], [AS.IntegerV, AS.NilV])\n  if (exitCode instanceof AS.NilV) return 0\n  return Number(exitCode.value)\n}\n"],"names":["eaw","stringToArray","string","match","module","exports","eastAsianWidth","character","x","charCodeAt","y","length","codePoint","characterLength","code","this","characters","len","i","slice","text","start","end","textLen","result","eawLen","chars","char","charLen","root","cosh","Math","abs","exp","sinh","parser_exit","SyntaxError","logHypot","a","b","_a","_b","log","LN2","Complex","z","re","im","undefined","Number","isFinite","cos","sin","tokens","plus","minus","c","isNaN","parseFloat","parse","prototype","sign","add","sub","mul","div","t","d","pow","arg","atan2","loh","sqrt","r","tmp","expm1","PI","xx","cosm1","tan","cot","sec","csc","asin","t1","t2","acos","atan","Infinity","acot","asec","acsc","tanh","coth","csch","sech","asinh","res","acosh","atanh","noIM","oneMinus","onePlus","temp","acoth","acsch","asech","inverse","conjugate","neg","ceil","places","floor","round","equals","clone","toString","ret","toVector","valueOf","isZero","isInfinite","E","NaN","Object","defineProperty","value","toComplex","num","arrayToInt","bigEndianArr","radix","arr","TABLE","_radix","BigInt","invalidIdx","toLowerCase","split","map","indexOf","Error","isinf","isInteger","complexEq","complexValue","numberValue","bigIntEq","bigIntValue","realValue","eq","isclose","rel_tol","abs_tol","RangeError","diff","complexAdd","complexMul","trunc","Metadata","filename","line_no","start_col","end_col","line","str","repeat","EastAsianWidth","Literal","metadata","FunRef","rel","ArgRef","relA","relF","FunDef","body","FunCall","fun","argv","Env","funs","args","UnsuspectedHangeulError","_Error","err","_this","_step","message","_iterator","_createForOfIteratorHelperLoose","metadatas","done","call","_inheritsLoose","_wrapNativeSuper","ValueBase","_proto2","asKey","context","format","_formatFloat","IntegerV","_ValueBase","_this2","typeName","FloatV","_ValueBase2","_this3","_proto4","ComplexV","_ValueBase3","_this4","_proto5","reStr","BooleanV","_ValueBase4","_this5","ListV","_ValueBase5","_this6","_proto7","strict","join","children","StringV","_ValueBase6","_this7","Array","from","BytesV","_ValueBase7","_this8","_proto9","formatByte","toUpperCase","formatted","Uint8Array","DictV","_ValueBase8","_this9","_keys","_values","_proto10","keys","sort","values","_this10","k","v","IOV","_ValueBase9","inst","continuation","_this11","_proto11","NilV","_ValueBase10","FUNCTION_ID_GEN","FunctionV","_ValueBase11","adj","_this12","id","_proto13","replace","ClosureV","_FunctionV","env","_this13","execute","newArgs","concat","newEnv","ExprV","BuiltinModuleV","_FunctionV2","name","_this14","ErrorV","_ValueBase12","_this15","_proto16","expr","cache","RealV","NumberV","SequenceV","CallableV","U1100","JAMO","U3165","UA960","normalizeChar","_get","ref","divisor","idx","normalize","sentence","parseNumber","s","varlen","reverse","encodeNumber","number","isNegative","encoded","parseToken","token","stack","word","arity","_arity","pop","push","AS","splice","trailer","_step2","flatMap","j","filter","_step$value","cur","top","prev","prevMetadata","_ref","tokenize","_iterator2","UnsuspectedHangeulBuiltinError","_AS$UnsuspectedHangeu","codes","UnsuspectedHangeulOSError","_UnsuspectedHangeulBu","UnsuspectedHangeulArithmeticError","_UnsuspectedHangeulBu2","UnsuspectedHangeulSyntaxError","_UnsuspectedHangeulBu3","UnsuspectedHangeulTypeError","_UnsuspectedHangeulBu4","UnsuspectedHangeulValueError","_UnsuspectedHangeulBu5","UnsuspectedHangeulDivisionError","_UnsuspectedHangeulBu6","UnsuspectedHangeulNotFoundError","_UnsuspectedHangeulBu7","UnsuspectedHangeulImportError","_UnsuspectedHangeulBu8","UnsuspectedHangeulOutOfRangeError","_UnsuspectedHangeulBu9","isLiteralExpr","extractValue","joinArrayBuffer","bufs","size","byteLength","reduce","newBuf","ArrayBuffer","view","buf","set","recursiveMap","item","fn","_item","forEach","allEqual","every","isType","desiredTypes","some","desiredType","_formatArray","conj","checkType","desiredTypeNames","argTypeNames","constructor","content","particleBatchim","particleNoBatchim","lastCode","josa","checkArity","desiredArities","arities","isArray","checkMinArity","minimumArity","checkMaxArity","maximumArity","matchDefaults","defaults","wrapNumber","buildArithmetics","ㄱ","ㄷ","first","_argv","assign","ㅅ","_checkType3","base","mod","exponent","modulo","_extendedGcd","x_old","y_old","quotient","_ref2","_ref3","extendedGcd","modularInverse","modPow","bReal","error","ㄴㄴ","ㄴㅁ","_parseStrToNumber","_checkType2","buildConstructors","ㅅㅈ","_","key","ㅁㄹ","ㅁㅈ","ㅈㅅ","_parseStrToNumber2","digits","ㅅㅅ","_parseStrToNumber3","splitted","trim","significant","_significant","ㅂㅅ","ㅂㄱ","ㄷㅂ","buildControl","ㄷㅈ","_checkType","ㅅㄷ","procFunctional","PipeV","_AS$FunctionV","f","CollectV","_AS$FunctionV2","SpreadV","_AS$FunctionV3","_proc","buildFunctional","ㄴㄱ","ㅁㅂ","ㅂㅂ","MODE_TABLE","ㄹ","ㅈㄹ","ㅈㄱ","ㄹㅈㄹ","ㅈㄹㄹ","ㅈㄱㄹ","FileV","file","_proto","commandStr","close","read","write","seekOrTell","truncate","doIO","ioUtils","Promise","resolve","e","reject","count","_catch","then","tell","offset","whence","_checkType4","_checkType5","_whence","pos","seek","newSize","buildIO","input","print","ㄱㅅ","ㄱㄹ","ioToBind","_exit","_temp2","_result2","_temp","_doIO","_checkType9","ㄱㄴ","path","_path","mode","modeStr","_mode","loadUtils","open","_listedEquals","arrs","_valueEquals","nums","dicts","ks","_dictEquals","buffers","views","_loop","_ret","_allBytesEqual","buildLogic","ㄴ","ㅁ","ㅈ","ㅈㅈ","ㄱㅈ","_wrap","op","apply","buildBitwise","ㅂㄷ","ㅂ","CODEC_TBL","Codec","scheme","numBytes","bigEndian","endianness","codec","_numBytes","getCodec","unicodeCodec","integerCodec","floatingPointCodec","encoder","TextEncoder","encode","buffer","codePointAt","unshift","_set","setUint8","bind","setUint16","setUint32","_write","DataView","_this$bigEndian","decoder","TextDecoder","decode","setInt16","Int16Array","getter","getUint32","getUint16","guessBigEndian","getUint8","_read","String","fromCodePoint","signed","integer","bound","isExpressible","littleEndianArr","intToArray","u8","n","EvalError","buildByte","_wrapType","type","_fn","retWrapper","argType","_wrap2","fnName","_wrapRound","_rounder","_arg","_atan1","_atan2","BUILDERS","ㅁㄴ","ㅈㄷ","ㄹㄱ","ㅅㄴ","ㄴㅅ","ㅅㄱ","ㄷㄴ","ㄴㄷ","ㅂㄹ","rounded","MODULE_REGISTRY","BUILTIN_MODULE_REGISTRY","loadFromPath","normalizePath","exprs","load","loadFromLiteral","literals","errMsg","searchLiteral","location","isFile","found","listdir","entry","literal","matchesLiteral","searchPath","joinPath","constructBuiltinModule","data","constructBuiltinModules","newObj","_module","buildModule","step","startIdx","endIdx","_startIdx","_endIdx","_startIdx2","_endIdx2","_i","_regeneratorRuntime","wrap","_context","next","max","min","stop","_marked","BUILTINS","_extends","seq","ㅂㅈ","_rest","_matchDefaults","items","sliced","ㅁㄷ","ㅅㅂ","fitCheck","fit","ㅅㄹ","init","fromRight","maybeReversed","feed","acc","__argv","pieces","piece","src","fromCharCode","delimiter","ㄱㅁ","_pieces","_delimiter","EvalContext","interpret","generalCallable","builtinFun","findBuiltin","allow","_fun","argKey","_accessBuffer","_accessArray","relAValue","newFuns","closure","recipe","_settle","pact","state","_Pact","observer","o","onRejected","callback","onFulfilled","thenable","run","program","_temp3","exitCode","_doIO2","main","formatIO","all","_temp15","_result","_exit2","_temp13","_exit3","_temp11","_result3","_exit4","_temp9","_result4","_temp8","_partial","_Promise$all2","argvStr","_temp7","_temp10","_partial2","pairs","_temp6","_temp12","_Promise$all","_temp5","_temp14","_doIO3","_for","_value$continuation"],"mappings":"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,KACpC,KAAUA,GAAaA,GAAa,KACpC,KAAUA,GAAaA,GAAa,KACpC,KAAUA,GAAaA,GAAa,KACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa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"}