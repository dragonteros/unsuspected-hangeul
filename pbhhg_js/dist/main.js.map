{"version":3,"file":"main.js","sources":["../../node_modules/eastasianwidth/eastasianwidth.js","../../node_modules/complex.js/complex.js","../src/numbers.ts","../src/abstractSyntax.ts","../src/parse.ts","../src/error.ts","../src/utils.ts","../src/builtins/arithmetics.ts","../src/builtins/constructors.ts","../src/builtins/functional.ts","../src/builtins/io.ts","../src/modules/byte.ts","../src/modules/math.ts","../src/builtins/module.ts","../src/modules/bitwise.ts","../src/builtins/sequence.ts","../src/interpret.ts","../src/builtins/control.ts","../src/builtins/logic.ts","../src/builtins/string.ts","../src/main.ts"],"sourcesContent":["var eaw = {};\n\nif ('undefined' == typeof module) {\n  window.eastasianwidth = eaw;\n} else {\n  module.exports = eaw;\n}\n\neaw.eastAsianWidth = function(character) {\n  var x = character.charCodeAt(0);\n  var y = (character.length == 2) ? character.charCodeAt(1) : 0;\n  var codePoint = x;\n  if ((0xD800 <= x && x <= 0xDBFF) && (0xDC00 <= y && y <= 0xDFFF)) {\n    x &= 0x3FF;\n    y &= 0x3FF;\n    codePoint = (x << 10) | y;\n    codePoint += 0x10000;\n  }\n\n  if ((0x3000 == codePoint) ||\n      (0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n      (0xFFE0 <= codePoint && codePoint <= 0xFFE6)) {\n    return 'F';\n  }\n  if ((0x20A9 == codePoint) ||\n      (0xFF61 <= codePoint && codePoint <= 0xFFBE) ||\n      (0xFFC2 <= codePoint && codePoint <= 0xFFC7) ||\n      (0xFFCA <= codePoint && codePoint <= 0xFFCF) ||\n      (0xFFD2 <= codePoint && codePoint <= 0xFFD7) ||\n      (0xFFDA <= codePoint && codePoint <= 0xFFDC) ||\n      (0xFFE8 <= codePoint && codePoint <= 0xFFEE)) {\n    return 'H';\n  }\n  if ((0x1100 <= codePoint && codePoint <= 0x115F) ||\n      (0x11A3 <= codePoint && codePoint <= 0x11A7) ||\n      (0x11FA <= codePoint && codePoint <= 0x11FF) ||\n      (0x2329 <= codePoint && codePoint <= 0x232A) ||\n      (0x2E80 <= codePoint && codePoint <= 0x2E99) ||\n      (0x2E9B <= codePoint && codePoint <= 0x2EF3) ||\n      (0x2F00 <= codePoint && codePoint <= 0x2FD5) ||\n      (0x2FF0 <= codePoint && codePoint <= 0x2FFB) ||\n      (0x3001 <= codePoint && codePoint <= 0x303E) ||\n      (0x3041 <= codePoint && codePoint <= 0x3096) ||\n      (0x3099 <= codePoint && codePoint <= 0x30FF) ||\n      (0x3105 <= codePoint && codePoint <= 0x312D) ||\n      (0x3131 <= codePoint && codePoint <= 0x318E) ||\n      (0x3190 <= codePoint && codePoint <= 0x31BA) ||\n      (0x31C0 <= codePoint && codePoint <= 0x31E3) ||\n      (0x31F0 <= codePoint && codePoint <= 0x321E) ||\n      (0x3220 <= codePoint && codePoint <= 0x3247) ||\n      (0x3250 <= codePoint && codePoint <= 0x32FE) ||\n      (0x3300 <= codePoint && codePoint <= 0x4DBF) ||\n      (0x4E00 <= codePoint && codePoint <= 0xA48C) ||\n      (0xA490 <= codePoint && codePoint <= 0xA4C6) ||\n      (0xA960 <= codePoint && codePoint <= 0xA97C) ||\n      (0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n      (0xD7B0 <= codePoint && codePoint <= 0xD7C6) ||\n      (0xD7CB <= codePoint && codePoint <= 0xD7FB) ||\n      (0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n      (0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n      (0xFE30 <= codePoint && codePoint <= 0xFE52) ||\n      (0xFE54 <= codePoint && codePoint <= 0xFE66) ||\n      (0xFE68 <= codePoint && codePoint <= 0xFE6B) ||\n      (0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n      (0x1F200 <= codePoint && codePoint <= 0x1F202) ||\n      (0x1F210 <= codePoint && codePoint <= 0x1F23A) ||\n      (0x1F240 <= codePoint && codePoint <= 0x1F248) ||\n      (0x1F250 <= codePoint && codePoint <= 0x1F251) ||\n      (0x20000 <= codePoint && codePoint <= 0x2F73F) ||\n      (0x2B740 <= codePoint && codePoint <= 0x2FFFD) ||\n      (0x30000 <= codePoint && codePoint <= 0x3FFFD)) {\n    return 'W';\n  }\n  if ((0x0020 <= codePoint && codePoint <= 0x007E) ||\n      (0x00A2 <= codePoint && codePoint <= 0x00A3) ||\n      (0x00A5 <= codePoint && codePoint <= 0x00A6) ||\n      (0x00AC == codePoint) ||\n      (0x00AF == codePoint) ||\n      (0x27E6 <= codePoint && codePoint <= 0x27ED) ||\n      (0x2985 <= codePoint && codePoint <= 0x2986)) {\n    return 'Na';\n  }\n  if ((0x00A1 == codePoint) ||\n      (0x00A4 == codePoint) ||\n      (0x00A7 <= codePoint && codePoint <= 0x00A8) ||\n      (0x00AA == codePoint) ||\n      (0x00AD <= codePoint && codePoint <= 0x00AE) ||\n      (0x00B0 <= codePoint && codePoint <= 0x00B4) ||\n      (0x00B6 <= codePoint && codePoint <= 0x00BA) ||\n      (0x00BC <= codePoint && codePoint <= 0x00BF) ||\n      (0x00C6 == codePoint) ||\n      (0x00D0 == codePoint) ||\n      (0x00D7 <= codePoint && codePoint <= 0x00D8) ||\n      (0x00DE <= codePoint && codePoint <= 0x00E1) ||\n      (0x00E6 == codePoint) ||\n      (0x00E8 <= codePoint && codePoint <= 0x00EA) ||\n      (0x00EC <= codePoint && codePoint <= 0x00ED) ||\n      (0x00F0 == codePoint) ||\n      (0x00F2 <= codePoint && codePoint <= 0x00F3) ||\n      (0x00F7 <= codePoint && codePoint <= 0x00FA) ||\n      (0x00FC == codePoint) ||\n      (0x00FE == codePoint) ||\n      (0x0101 == codePoint) ||\n      (0x0111 == codePoint) ||\n      (0x0113 == codePoint) ||\n      (0x011B == codePoint) ||\n      (0x0126 <= codePoint && codePoint <= 0x0127) ||\n      (0x012B == codePoint) ||\n      (0x0131 <= codePoint && codePoint <= 0x0133) ||\n      (0x0138 == codePoint) ||\n      (0x013F <= codePoint && codePoint <= 0x0142) ||\n      (0x0144 == codePoint) ||\n      (0x0148 <= codePoint && codePoint <= 0x014B) ||\n      (0x014D == codePoint) ||\n      (0x0152 <= codePoint && codePoint <= 0x0153) ||\n      (0x0166 <= codePoint && codePoint <= 0x0167) ||\n      (0x016B == codePoint) ||\n      (0x01CE == codePoint) ||\n      (0x01D0 == codePoint) ||\n      (0x01D2 == codePoint) ||\n      (0x01D4 == codePoint) ||\n      (0x01D6 == codePoint) ||\n      (0x01D8 == codePoint) ||\n      (0x01DA == codePoint) ||\n      (0x01DC == codePoint) ||\n      (0x0251 == codePoint) ||\n      (0x0261 == codePoint) ||\n      (0x02C4 == codePoint) ||\n      (0x02C7 == codePoint) ||\n      (0x02C9 <= codePoint && codePoint <= 0x02CB) ||\n      (0x02CD == codePoint) ||\n      (0x02D0 == codePoint) ||\n      (0x02D8 <= codePoint && codePoint <= 0x02DB) ||\n      (0x02DD == codePoint) ||\n      (0x02DF == codePoint) ||\n      (0x0300 <= codePoint && codePoint <= 0x036F) ||\n      (0x0391 <= codePoint && codePoint <= 0x03A1) ||\n      (0x03A3 <= codePoint && codePoint <= 0x03A9) ||\n      (0x03B1 <= codePoint && codePoint <= 0x03C1) ||\n      (0x03C3 <= codePoint && codePoint <= 0x03C9) ||\n      (0x0401 == codePoint) ||\n      (0x0410 <= codePoint && codePoint <= 0x044F) ||\n      (0x0451 == codePoint) ||\n      (0x2010 == codePoint) ||\n      (0x2013 <= codePoint && codePoint <= 0x2016) ||\n      (0x2018 <= codePoint && codePoint <= 0x2019) ||\n      (0x201C <= codePoint && codePoint <= 0x201D) ||\n      (0x2020 <= codePoint && codePoint <= 0x2022) ||\n      (0x2024 <= codePoint && codePoint <= 0x2027) ||\n      (0x2030 == codePoint) ||\n      (0x2032 <= codePoint && codePoint <= 0x2033) ||\n      (0x2035 == codePoint) ||\n      (0x203B == codePoint) ||\n      (0x203E == codePoint) ||\n      (0x2074 == codePoint) ||\n      (0x207F == codePoint) ||\n      (0x2081 <= codePoint && codePoint <= 0x2084) ||\n      (0x20AC == codePoint) ||\n      (0x2103 == codePoint) ||\n      (0x2105 == codePoint) ||\n      (0x2109 == codePoint) ||\n      (0x2113 == codePoint) ||\n      (0x2116 == codePoint) ||\n      (0x2121 <= codePoint && codePoint <= 0x2122) ||\n      (0x2126 == codePoint) ||\n      (0x212B == codePoint) ||\n      (0x2153 <= codePoint && codePoint <= 0x2154) ||\n      (0x215B <= codePoint && codePoint <= 0x215E) ||\n      (0x2160 <= codePoint && codePoint <= 0x216B) ||\n      (0x2170 <= codePoint && codePoint <= 0x2179) ||\n      (0x2189 == codePoint) ||\n      (0x2190 <= codePoint && codePoint <= 0x2199) ||\n      (0x21B8 <= codePoint && codePoint <= 0x21B9) ||\n      (0x21D2 == codePoint) ||\n      (0x21D4 == codePoint) ||\n      (0x21E7 == codePoint) ||\n      (0x2200 == codePoint) ||\n      (0x2202 <= codePoint && codePoint <= 0x2203) ||\n      (0x2207 <= codePoint && codePoint <= 0x2208) ||\n      (0x220B == codePoint) ||\n      (0x220F == codePoint) ||\n      (0x2211 == codePoint) ||\n      (0x2215 == codePoint) ||\n      (0x221A == codePoint) ||\n      (0x221D <= codePoint && codePoint <= 0x2220) ||\n      (0x2223 == codePoint) ||\n      (0x2225 == codePoint) ||\n      (0x2227 <= codePoint && codePoint <= 0x222C) ||\n      (0x222E == codePoint) ||\n      (0x2234 <= codePoint && codePoint <= 0x2237) ||\n      (0x223C <= codePoint && codePoint <= 0x223D) ||\n      (0x2248 == codePoint) ||\n      (0x224C == codePoint) ||\n      (0x2252 == codePoint) ||\n      (0x2260 <= codePoint && codePoint <= 0x2261) ||\n      (0x2264 <= codePoint && codePoint <= 0x2267) ||\n      (0x226A <= codePoint && codePoint <= 0x226B) ||\n      (0x226E <= codePoint && codePoint <= 0x226F) ||\n      (0x2282 <= codePoint && codePoint <= 0x2283) ||\n      (0x2286 <= codePoint && codePoint <= 0x2287) ||\n      (0x2295 == codePoint) ||\n      (0x2299 == codePoint) ||\n      (0x22A5 == codePoint) ||\n      (0x22BF == codePoint) ||\n      (0x2312 == codePoint) ||\n      (0x2460 <= codePoint && codePoint <= 0x24E9) ||\n      (0x24EB <= codePoint && codePoint <= 0x254B) ||\n      (0x2550 <= codePoint && codePoint <= 0x2573) ||\n      (0x2580 <= codePoint && codePoint <= 0x258F) ||\n      (0x2592 <= codePoint && codePoint <= 0x2595) ||\n      (0x25A0 <= codePoint && codePoint <= 0x25A1) ||\n      (0x25A3 <= codePoint && codePoint <= 0x25A9) ||\n      (0x25B2 <= codePoint && codePoint <= 0x25B3) ||\n      (0x25B6 <= codePoint && codePoint <= 0x25B7) ||\n      (0x25BC <= codePoint && codePoint <= 0x25BD) ||\n      (0x25C0 <= codePoint && codePoint <= 0x25C1) ||\n      (0x25C6 <= codePoint && codePoint <= 0x25C8) ||\n      (0x25CB == codePoint) ||\n      (0x25CE <= codePoint && codePoint <= 0x25D1) ||\n      (0x25E2 <= codePoint && codePoint <= 0x25E5) ||\n      (0x25EF == codePoint) ||\n      (0x2605 <= codePoint && codePoint <= 0x2606) ||\n      (0x2609 == codePoint) ||\n      (0x260E <= codePoint && codePoint <= 0x260F) ||\n      (0x2614 <= codePoint && codePoint <= 0x2615) ||\n      (0x261C == codePoint) ||\n      (0x261E == codePoint) ||\n      (0x2640 == codePoint) ||\n      (0x2642 == codePoint) ||\n      (0x2660 <= codePoint && codePoint <= 0x2661) ||\n      (0x2663 <= codePoint && codePoint <= 0x2665) ||\n      (0x2667 <= codePoint && codePoint <= 0x266A) ||\n      (0x266C <= codePoint && codePoint <= 0x266D) ||\n      (0x266F == codePoint) ||\n      (0x269E <= codePoint && codePoint <= 0x269F) ||\n      (0x26BE <= codePoint && codePoint <= 0x26BF) ||\n      (0x26C4 <= codePoint && codePoint <= 0x26CD) ||\n      (0x26CF <= codePoint && codePoint <= 0x26E1) ||\n      (0x26E3 == codePoint) ||\n      (0x26E8 <= codePoint && codePoint <= 0x26FF) ||\n      (0x273D == codePoint) ||\n      (0x2757 == codePoint) ||\n      (0x2776 <= codePoint && codePoint <= 0x277F) ||\n      (0x2B55 <= codePoint && codePoint <= 0x2B59) ||\n      (0x3248 <= codePoint && codePoint <= 0x324F) ||\n      (0xE000 <= codePoint && codePoint <= 0xF8FF) ||\n      (0xFE00 <= codePoint && codePoint <= 0xFE0F) ||\n      (0xFFFD == codePoint) ||\n      (0x1F100 <= codePoint && codePoint <= 0x1F10A) ||\n      (0x1F110 <= codePoint && codePoint <= 0x1F12D) ||\n      (0x1F130 <= codePoint && codePoint <= 0x1F169) ||\n      (0x1F170 <= codePoint && codePoint <= 0x1F19A) ||\n      (0xE0100 <= codePoint && codePoint <= 0xE01EF) ||\n      (0xF0000 <= codePoint && codePoint <= 0xFFFFD) ||\n      (0x100000 <= codePoint && codePoint <= 0x10FFFD)) {\n    return 'A';\n  }\n\n  return 'N';\n};\n\neaw.characterLength = function(character) {\n  var code = this.eastAsianWidth(character);\n  if (code == 'F' || code == 'W' || code == 'A') {\n    return 2;\n  } else {\n    return 1;\n  }\n};\n\n// Split a string considering surrogate-pairs.\nfunction stringToArray(string) {\n  return string.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[^\\uD800-\\uDFFF]/g) || [];\n}\n\neaw.length = function(string) {\n  var characters = stringToArray(string);\n  var len = 0;\n  for (var i = 0; i < characters.length; i++) {\n    len = len + this.characterLength(characters[i]);\n  }\n  return len;\n};\n\neaw.slice = function(text, start, end) {\n  textLen = eaw.length(text)\n  start = start ? start : 0;\n  end = end ? end : 1;\n  if (start < 0) {\n      start = textLen + start;\n  }\n  if (end < 0) {\n      end = textLen + end;\n  }\n  var result = '';\n  var eawLen = 0;\n  var chars = stringToArray(text);\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n    var charLen = eaw.length(char);\n    if (eawLen >= start - (charLen == 2 ? 1 : 0)) {\n        if (eawLen + charLen <= end) {\n            result += char;\n        } else {\n            break;\n        }\n    }\n    eawLen += charLen;\n  }\n  return result;\n};\n","/**\n * @license Complex.js v2.1.1 12/05/2020\n *\n * Copyright (c) 2020, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = Math.cosh || function(x) {\n    return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = Math.sinh || function(x) {\n    return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small (-¼π ≤ x ≤ ¼π).\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n  var cosm1 = function(x) {\n\n    var b = Math.PI / 4;\n    if (-b > x || x > b) {\n      return Math.cos(x) - 1.0;\n    }\n\n    /* Calculate horner form of polynomial of taylor series in Q\n    var fac = 1, alt = 1, pol = {};\n    for (var i = 0; i <= 16; i++) {\n      fac*= i || 1;\n      if (i % 2 == 0) {\n        pol[i] = new Fraction(1, alt * fac);\n        alt = -alt;\n      }\n    }\n    console.log(new Polynomial(pol).toHorner()); // (((((((1/20922789888000x^2-1/87178291200)x^2+1/479001600)x^2-1/3628800)x^2+1/40320)x^2-1/720)x^2+1/24)x^2-1/2)x^2+1\n    */\n\n    var xx = x * x;\n    return xx * (\n      xx * (\n        xx * (\n          xx * (\n            xx * (\n              xx * (\n                xx * (\n                  xx / 20922789888000\n                  - 1 / 87178291200)\n                + 1 / 479001600)\n              - 1 / 3628800)\n            + 1 / 40320)\n          - 1 / 720)\n        + 1 / 24)\n      - 1 / 2);\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n     a = a / 2;\n     b = b / 2;\n\n    return 0.5 * Math.log(a * a + b * b) + Math.LN2;\n  }\n\n  var parse = function(a, b) {\n\n    var z = { 're': 0, 'im': 0 };\n\n    if (a === undefined || a === null) {\n      z['re'] =\n      z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n          z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n        this['re'] / abs,\n        this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n        this['re'] + z['re'],\n        this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n        this['re'] - z['re'],\n        this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n        this['re'] * z['re'] - this['im'] * z['im'],\n        this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n          (a * x + b) / t,\n          (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n          (a + b * x) / t,\n          (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a > 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n        a * Math.cos(b),\n        a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n        tmp * Math.cos(this['im']),\n        tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.expm1(a) * Math.cos(b) + cosm1(b),\n        Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n        logHypot(a, b),\n        Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(z) = ( e^iz - e^-iz ) / 2i \n      //        = sin(a)cosh(b) + i cos(a)sinh(b)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.sin(a) * cosh(b),\n        Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = ( e^iz + e^-iz ) / 2 \n      //        = cos(a)cosh(b) - i sin(a)sinh(b)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.cos(a) * cosh(b),\n        -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(z) = sin(z) / cos(z) \n      //        = ( e^iz - e^-iz ) / ( i( e^iz + e^-iz ) )\n      //        = ( e^2iz - 1 ) / i( e^2iz + 1 )\n      //        = ( sin(2a) + i sinh(2b) ) / ( cos(2a) + cosh(2b) )\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n        Math.sin(a) / d,\n        sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n        -Math.sin(a) / d,\n        sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n        Math.cos(a) * cosh(b) / d,\n        Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n        Math.sin(a) * cosh(b) / d,\n        -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n        b * b - a * a + 1,\n        -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n        t1['re'] - b,\n        t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n        b * b - a * a + 1,\n        -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n        t1['re'] - b,\n        t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n        (1 - b * b - a * a) / d,\n        -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).atan()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).acos()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).asin()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        sinh(a) * Math.cos(b),\n        cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        cosh(a) * Math.cos(b),\n        sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n        sinh(a) / d,\n        Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n        sinh(a) / d,\n        -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n        -2 * sinh(a) * Math.cos(b) / d,\n        2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n        2 * cosh(a) * Math.cos(b) / d,\n        -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex acosh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n        ? new Complex(\n          (onePlus * oneMinus - b * b) / d,\n          (b * oneMinus + onePlus * b) / d)\n        : new Complex(\n          (a !== -1) ? (a / 0) : 0,\n          (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).atanh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n          (a !== 0)\n            ? Math.log(a + Math.sqrt(a * a + 1))\n            : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).asinh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).acosh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.ceil(this['re'] * places) / places,\n        Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.floor(this['re'] * places) / places,\n        Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.round(this['re'] * places) / places,\n        Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n        Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = \"\";\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (Math.abs(a) < Complex['EPSILON']) {\n        a = 0;\n      }\n\n      if (Math.abs(b) < Complex['EPSILON']) {\n        b = 0;\n      }\n\n      // If is real number\n      if (b === 0) {\n        return ret + a;\n      }\n\n      if (a !== 0) {\n        ret += a;\n        ret += \" \";\n        if (b < 0) {\n          b = -b;\n          ret += \"-\";\n        } else {\n          ret += \"+\";\n        }\n        ret += \" \";\n      } else if (b < 0) {\n        b = -b;\n        ret += \"-\";\n      }\n\n      if (1 !== b) { // b is the absolute imaginary part\n        ret += b;\n      }\n      return ret + \"i\";\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return this['im'] === 0 && this['re'] === 0;\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-15;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(Complex, \"__esModule\", { 'value': true });\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","/**\n * Number operations made generic of argument types\n */\n\nimport Complex from 'complex.js'\n\nexport type JSNumber = number | bigint | Complex\n\nMath.trunc =\n  Math.trunc ||\n  function (x) {\n    if (isNaN(x)) {\n      return NaN\n    }\n    if (x > 0) {\n      return Math.floor(x)\n    }\n    return Math.ceil(x)\n  }\n\nexport function toComplex(x: JSNumber | string): Complex {\n  const num = typeof x === 'bigint' ? Number(x) : x\n  return new Complex(num)\n}\nfunction toRealIfPossible(x: JSNumber): JSNumber {\n  if (typeof x === 'bigint' || typeof x === 'number') return x\n  if (isclose(x.im, 0)) return x.re\n  return x\n}\n\nexport function arrayToInt(\n  bigEndianArr: (number | bigint)[] | string,\n  radix: number | bigint = 10n\n) {\n  const TABLE = '0123456789abcdefghijklmnopqrstuvwxyz'.slice(0, Number(radix))\n  const _radix = BigInt(radix)\n  let arr: (number | bigint)[]\n  let sign: 1n | -1n = 1n\n  if (typeof bigEndianArr === 'string') {\n    if (bigEndianArr[0] === '+') {\n      bigEndianArr = bigEndianArr.slice(1)\n    } else if (bigEndianArr[0] === '-') {\n      sign = -1n\n      bigEndianArr = bigEndianArr.slice(1)\n    }\n\n    arr = bigEndianArr\n      .toLowerCase()\n      .split('')\n      .map((c) => TABLE.indexOf(c))\n    const invalidIdx = arr.indexOf(-1)\n    if (invalidIdx !== -1) {\n      throw Error(\n        `다음 글자를 ${radix}진법 숫자로 해석할 수 없습니다: '${bigEndianArr[invalidIdx]}'`\n      )\n    }\n  } else {\n    arr = bigEndianArr\n  }\n  let result = 0n\n  for (let i = 0; i < arr.length; i++) {\n    result *= _radix\n    result += BigInt(arr[i])\n  }\n  return result * sign\n}\nexport function intToArray(num: bigint, radix: number | bigint = 10n) {\n  if (num < 0n)\n    throw Error('Cannot convert a negative integer into array form.')\n  const _radix = BigInt(radix)\n  const littleEndianArr: bigint[] = []\n  while (num > 0n) {\n    littleEndianArr.push(num % _radix)\n    num /= _radix\n  }\n  return littleEndianArr.reverse()\n}\n\n/* Logic */\nexport function isinf(num: JSNumber): boolean {\n  if (typeof num === 'bigint') return false\n  if (num instanceof Complex) return isinf(num.re) || isinf(num.im)\n  return !(isFinite(num) || isNaN(num))\n}\nexport function isnan(num: JSNumber): boolean {\n  if (typeof num === 'bigint') return false\n  if (num instanceof Complex) return num.isNaN()\n  return isNaN(num)\n}\nfunction isInteger(num: bigint | number) {\n  return typeof num === 'bigint' || Number.isInteger(num)\n}\n\nfunction complexEq(complexValue: Complex, numberValue: JSNumber): boolean {\n  if (numberValue instanceof Complex) {\n    return (\n      complexValue.re === numberValue.re && complexValue.im === numberValue.im\n    )\n  }\n  if (complexValue.im !== 0) return false\n  if (typeof numberValue === 'bigint')\n    return bigIntEq(numberValue, complexValue.re)\n  return numberValue === complexValue.re\n}\nfunction bigIntEq(bigIntValue: bigint, realValue: number | bigint): boolean {\n  return isInteger(realValue) && bigIntValue === BigInt(realValue)\n}\nexport function eq(a: JSNumber, b: JSNumber) {\n  if (a instanceof Complex) return complexEq(a, b)\n  if (b instanceof Complex) return complexEq(b, a)\n  if (typeof a === 'bigint') return bigIntEq(a, b)\n  if (typeof b === 'bigint') return bigIntEq(b, a)\n  return a === b\n}\n\nexport function isclose(\n  a: JSNumber,\n  b: JSNumber,\n  rel_tol = 1e-9,\n  abs_tol = 1e-16\n) {\n  if (rel_tol < 0 || abs_tol < 0) {\n    throw RangeError('Tolerances must be non-negative.')\n  }\n  if (eq(a, b)) {\n    return true\n  }\n  if (isinf(a) || isinf(b)) {\n    return false\n  }\n  const _a = typeof a === 'bigint' ? Number(a) : a\n  const _b = typeof b === 'bigint' ? Number(b) : b\n  const diff = abs(sub(_a, _b))\n  return (\n    diff <= rel_tol * abs(_b) || diff <= rel_tol * abs(_a) || diff <= abs_tol\n  )\n}\n\n/* Arithmetics */\nexport function abs(num: bigint): bigint\nexport function abs(num: number | Complex): number\nexport function abs(num: JSNumber): JSNumber\nexport function abs(num: JSNumber) {\n  if (typeof num === 'bigint') {\n    return num >= 0n ? num : -num\n  } else if (num instanceof Complex) {\n    return num.abs()\n  }\n  return Math.abs(num)\n}\n\nfunction complexAdd(a: Complex, b: Complex): Complex {\n  return new Complex(a.re + b.re, a.im + b.im)\n}\nexport function add(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a + b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return complexAdd(toComplex(a), toComplex(b))\n  }\n  return Number(a) + Number(b)\n}\nfunction sub(a: bigint, b: bigint): bigint\nfunction sub(a: bigint | number, b: bigint | number): number\nfunction sub(a: JSNumber, b: JSNumber): Complex\nfunction sub(a: JSNumber, b: JSNumber): JSNumber {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a - b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return toComplex(a).sub(toComplex(b))\n  }\n  return Number(a) - Number(b)\n}\nfunction complexMul(a: Complex, b: Complex): Complex {\n  return new Complex(a.re * b.re - a.im * b.im, a.re * b.im + a.im * b.re)\n}\nexport function mul(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a * b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return complexMul(toComplex(a), toComplex(b))\n  }\n  return Number(a) * Number(b)\n}\nexport function div(a: number | bigint, b: number | bigint) {\n  // integer division\n  if (Number(b) === 0) throw Error('0으로 나눌 수 없습니다.')\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a / b\n  }\n  return Math.trunc(Number(a) / Number(b))\n}\nexport function mod(a: number | bigint, b: number | bigint) {\n  if (Number(b) === 0) throw Error('0으로 나눌 수 없습니다.')\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a % b\n  }\n  return Number(a) % Number(b)\n}\n\nexport function pow(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint' && b >= 0) {\n    return a ** b\n  }\n\n  const bReal = toRealIfPossible(b)\n  if (!(bReal instanceof Complex) && bReal < 0 && eq(a, 0))\n    throw Error('0의 역수를 구하려고 했습니다.')\n\n  if (\n    a instanceof Complex ||\n    b instanceof Complex ||\n    (a < 0 && !isInteger(b))\n  ) {\n    return toComplex(a).pow(toComplex(b))\n  }\n\n  return Number(a) === 1 ? 1 : Math.pow(Number(a), Number(b))\n}\n","/** Abstract syntax and values. **/\nimport Complex from 'complex.js'\nimport EastAsianWidth from 'eastasianwidth'\nimport { isclose } from './numbers'\n\nexport class Metadata {\n  private str?: string\n\n  constructor(\n    public filename: string,\n    public line_no: number,\n    public start_col: number,\n    public end_col: number,\n    public line: string\n  ) {}\n\n  toString() {\n    if (this.str == null) {\n      this.str =\n        this.line +\n        '\\n' +\n        ' '.repeat(EastAsianWidth.length(this.line.slice(0, this.start_col))) +\n        '^'.repeat(\n          EastAsianWidth.length(this.line.slice(this.start_col, this.end_col))\n        )\n    }\n    return this.str\n  }\n}\n\n/* Parser */\nexport class Literal {\n  constructor(public metadata: Metadata, public value: bigint) {}\n}\nexport class FunRef {\n  constructor(public metadata: Metadata, public rel: number) {}\n}\nexport class ArgRef {\n  constructor(\n    public metadata: Metadata,\n    public relA: AST,\n    public relF: number\n  ) {}\n}\nexport class FunDef {\n  constructor(public metadata: Metadata, public body: AST) {}\n}\nexport class FunCall {\n  constructor(public metadata: Metadata, public fun: AST, public argv: AST[]) {}\n}\nexport type AST = Literal | FunRef | ArgRef | FunDef | FunCall\n\n/* Interpreter */\nexport type IOUtils = {\n  input(): Promise<string | undefined>\n  print(content: string): void\n}\nexport type File = {\n  close(): void\n  read(numBytes: number): Promise<ArrayBuffer>\n  write(bytes: ArrayBuffer): number\n  seek(offset: number, whence: 'SEEK_SET' | 'SEEK_CUR'): number\n  tell(): number\n  truncate(size?: number): number\n}\nexport type LoadUtils = {\n  open(path: string | number, flags: 'a' | 'a+' | 'r' | 'r+' | 'w' | 'w+'): File\n  load(location: string): string\n  isFile(location: string): boolean\n  listdir(location: string): string[]\n  joinPath(...parts: string[]): string\n  normalizePath(path: string): string\n}\nexport class Env {\n  constructor(\n    public funs: ClosureV[],\n    public args: Value[][],\n    public utils: LoadUtils\n  ) {}\n}\n\nexport class UnsuspectedHangeulError extends Error {\n  constructor(public err: ErrorV) {\n    let message = ''\n    for (const metadata of err.metadatas) {\n      message += `${metadata.filename} ${metadata.line_no + 1}번줄 `\n      message += `${metadata.start_col + 1}~${metadata.end_col + 1}번째 글자:\\n`\n      message += metadata.toString() + '\\n'\n    }\n    super(message + '\\n' + err.message)\n  }\n}\n\n/* Values */\nabstract class ValueBase {\n  abstract format(strict: StrictFn): string\n  asKey(strict: StrictFn): string {\n    return this.format(strict)\n  }\n}\n\nfunction _isPossibleInt(num: number) {\n  return isFinite(num) && isclose(num, Math.floor(num))\n}\n\nfunction _formatFloat(num: number) {\n  if (isFinite(num)) return num.toString()\n  if (isNaN(num)) return 'nan'\n  return num > 0 ? 'inf' : '-inf'\n}\n\nexport class IntegerV extends ValueBase {\n  static typeName = '정수'\n  constructor(public value: bigint) {\n    super()\n  }\n  format(strict: StrictFn) {\n    return this.value.toString()\n  }\n}\n\nexport class FloatV extends ValueBase {\n  static typeName = '실수'\n  constructor(public value: number) {\n    super()\n  }\n  format(strict: StrictFn) {\n    const str = _formatFloat(this.value)\n    const trailing = _isPossibleInt(this.value) ? '.0' : ''\n    return str + trailing\n  }\n  asKey(strict: StrictFn) {\n    return _formatFloat(this.value)\n  }\n}\n\nexport class ComplexV extends ValueBase {\n  static typeName = '복소수'\n  constructor(public value: Complex) {\n    super()\n  }\n  format(strict: StrictFn) {\n    const re = this.value.re\n    const im = this.value.im\n    const reStr = _formatFloat(re) + (im < 0 ? '' : '+')\n    const imStr = im == 1 ? '' : im == -1 ? '-' : _formatFloat(im)\n    return (re === 0 ? '' : reStr) + imStr + 'i'\n  }\n  asKey(strict: StrictFn): string {\n    return this.value.im ? this.format(strict) : _formatFloat(this.value.re)\n  }\n}\n\nexport class BooleanV extends ValueBase {\n  static typeName = '논릿값'\n  constructor(public value: boolean) {\n    super()\n  }\n  format(strict: StrictFn) {\n    return this.value ? 'True' : 'False'\n  }\n}\n\nexport class ListV extends ValueBase {\n  static typeName = '목록'\n  constructor(public value: Value[]) {\n    super()\n  }\n  format(strict: StrictFn): string {\n    const children = this.value.map((value) => strict(value).format(strict))\n    return `[${children.join(', ')}]`\n  }\n  asKey(strict: StrictFn): string {\n    const children = this.value.map((value) => strict(value).asKey(strict))\n    return `[${children.join(', ')}]`\n  }\n}\n\nexport class StringV extends ValueBase {\n  static typeName = '문자열'\n  public value: string[]\n  constructor(public str: string) {\n    super()\n    this.value = Array.from(str)\n  }\n  format(strict: StrictFn) {\n    return \"'\" + this.str + \"'\"\n  }\n}\n\nexport class BytesV extends ValueBase {\n  static typeName = '바이트열'\n  private str?: string\n  constructor(public value: ArrayBuffer) {\n    super()\n  }\n  formatByte(c: number) {\n    const s = c.toString(16).toUpperCase()\n    return '\\\\x' + ('0' + s).slice(-2)\n  }\n  format(strict: StrictFn) {\n    if (!this.str) {\n      const arr = Array.from(new Uint8Array(this.value))\n      const formatted = arr.map(this.formatByte)\n      this.str = \"b'\" + formatted.join('') + \"'\"\n    }\n    return this.str\n  }\n}\n\nexport class DictV extends ValueBase {\n  static typeName = '사전'\n  private _keys?: string[]\n  private _values?: Value[]\n  constructor(public value: Record<string, Value>) {\n    super()\n  }\n\n  keys() {\n    if (!this._keys) {\n      this._keys = Object.keys(this.value).sort()\n    }\n    return this._keys\n  }\n  values() {\n    if (!this._values) {\n      this._values = this.keys().map((k) => this.value[k])\n    }\n    return this._values\n  }\n\n  format(strict: StrictFn): string {\n    const values = this.values().map((v) => strict(v).format(strict))\n    const pairs = this.keys().map((k, i) => k + ': ' + values[i])\n    return '{' + pairs.join(', ') + '}'\n  }\n  asKey(strict: StrictFn): string {\n    const values = this.values().map((v) => strict(v).asKey(strict))\n    const pairs = this.keys().map((k, i) => k + ': ' + values[i])\n    return '{' + pairs.join(', ') + '}'\n  }\n}\n\nexport class IOV extends ValueBase {\n  static typeName = '드나듦'\n\n  constructor(\n    public inst: string,\n    public argv: Value[],\n    public continuation: (\n      doIO: (ioValue: IOV) => Promise<NonIOStrictValue>,\n      ioUtils: IOUtils\n    ) => Promise<StrictValue>\n  ) {\n    super()\n  }\n\n  format(strict: StrictFn): string {\n    const formatted = this.argv\n      .map((value) => strict(value).format(strict))\n      .join(', ')\n    return `<드나듦 ${this.inst}: [${formatted}]>`\n  }\n  asKey(strict: StrictFn): string {\n    const formatted = this.argv\n      .map((value) => strict(value).asKey(strict))\n      .join(', ')\n    return `<드나듦 ${this.inst}: [${formatted}]>`\n  }\n}\n\nexport class NilV extends ValueBase {\n  static typeName = '빈값'\n  constructor() {\n    super()\n  }\n  format(strict: StrictFn): string {\n    return 'Nil'\n  }\n}\n\nlet FUNCTION_ID_GEN = 0\nexport abstract class FunctionV extends ValueBase {\n  static typeName = '함수'\n  private id: number\n  protected str: string\n  constructor(adj = '') {\n    super()\n    this.id = FUNCTION_ID_GEN++\n    this.str = '<' + adj + '함수>'\n  }\n  format(strict: StrictFn) {\n    return this.str\n  }\n  asKey(strict: StrictFn): string {\n    return this.str.replace('>', ' #' + this.id + '>')\n  }\n  abstract execute(metadata: Metadata, argv: Value[]): Value\n}\n\nexport class ClosureV extends FunctionV {\n  constructor(public body: AST, public env: Env) {\n    super(`깊이 ${env.args.length}에서 생성된 `)\n  }\n\n  execute(metadata: Metadata, argv: Value[]) {\n    const newArgs = this.env.args.concat([argv])\n    const newEnv = new Env(this.env.funs, newArgs, this.env.utils)\n    return new ExprV(this.body, newEnv, null)\n  }\n}\n\nexport class BuiltinModuleV extends FunctionV {\n  constructor(public module: Evaluation, name: string) {\n    super()\n    this.str = '<기본 제공 모듈 ' + name + '>'\n  }\n\n  execute(metadata: Metadata, argv: Value[]) {\n    return this.module(metadata, argv)\n  }\n}\n\nexport class ErrorV extends ValueBase {\n  static typeName = '예외'\n  constructor(\n    public metadatas: Metadata[],\n    public message: string,\n    public value: StrictValue[]\n  ) {\n    super()\n  }\n  format(strict: StrictFn): string {\n    const formatted = this.value.map((v) => v.format(strict)).join(', ')\n    return `<예외: [${formatted}]>`\n  }\n  asKey(strict: StrictFn): string {\n    const formatted = this.value.map((v) => v.asKey(strict)).join(', ')\n    return `<예외: [${formatted}]>`\n  }\n}\n\nexport class ExprV {\n  constructor(\n    public expr: AST,\n    public env: Env,\n    public cache: StrictValue | UnsuspectedHangeulError | null\n  ) {}\n}\n\nexport const RealV = [IntegerV, FloatV] as const\nexport const NumberV = [...RealV, ComplexV] as const\nexport const SequenceV = [ListV, StringV, BytesV] as const\nexport const CallableV = [\n  FunctionV,\n  BooleanV,\n  DictV,\n  ComplexV,\n  ErrorV,\n  ...SequenceV,\n] as const\nexport const AnyV = [...NumberV, ...CallableV, IOV, NilV] as const\n\nexport type StrictValueType = (typeof AnyV)[number]\n\nexport type NonIOStrictValue =\n  | IntegerV\n  | FloatV\n  | ComplexV\n  | ListV\n  | StringV\n  | BytesV\n  | BooleanV\n  | DictV\n  | ErrorV\n  | FunctionV\n  | NilV\nexport type StrictValue = NonIOStrictValue | IOV\nexport type Value = StrictValue | ExprV\n\nexport type ProcFunctionalFn = (\n  metadata: Metadata,\n  fun: Value,\n  generalCallable?: boolean\n) => Evaluation\nexport type StrictFn = (value: Value) => StrictValue\nexport type Evaluation = (metadata: Metadata, args: Value[]) => Value\n","/* Parser for unsuspected hangeul. */\nimport * as AS from './abstractSyntax'\nimport * as E from './error'\n\n/** Normalizer **/\n\n// TABLES\n// note all ㅇ and ㅎ has a preceding space in following tables\nconst U1100 = (\n  'ㄱ|ㄱ|ㄴ|ㄷ|ㄷ|ㄹ|ㅁ|ㅂ|ㅂ|ㅅ|ㅅ| ㅇ|ㅈ|ㅈ|ㅈ|ㄱ|ㄷ|ㅂ| ㅎ|ㄴㄱ|ㄴ|ㄴㄷ|ㄴㅂ|ㄷㄱ|ㄹㄴ|ㄹ|' +\n  'ㄹ ㅎ|ㄹ|ㅁㅂ|ㅁ|ㅂㄱ|ㅂㄴ|ㅂㄷ|ㅂㅅ|ㅂㅅㄱ|ㅂㅅㄷ|ㅂㅅㅂ|ㅂㅅ|ㅂㅅㅈ|ㅂㅈ|ㅂㅈ|ㅂㄷ|ㅂㅂ|ㅂ|' +\n  'ㅂ|ㅅㄱ|ㅅㄴ|ㅅㄷ|ㅅㄹ|ㅅㅁ|ㅅㅂ|ㅅㅂㄱ|ㅅㅅ|ㅅ ㅇ|ㅅㅈ|ㅅㅈ|ㅅㄱ|ㅅㄷ|ㅅㅂ|ㅅ ㅎ|ㅅ|ㅅ|ㅅ|ㅅ|' +\n  'ㅅ| ㅇㄱ| ㅇㄷ| ㅇㅁ| ㅇㅂ| ㅇㅅ| ㅇㅅ| ㅇ| ㅇㅈ| ㅇㅈ| ㅇㄷ| ㅇㅂ| ㅇ|ㅈ ㅇ|ㅈ|ㅈ|ㅈ|ㅈ|' +\n  'ㅈㄱ|ㅈ ㅎ|ㅈ|ㅈ|ㅂㅂ|ㅂ| ㅎ| ㅎ|ㄱㄷ|ㄴㅅ|ㄴㅈ|ㄴ ㅎ|ㄷㄹ'\n).split('|')\nconst JAMO = (\n  'ㄱ|ㄱ|ㄱㅅ|ㄴ|ㄴㅈ|ㄴ ㅎ|ㄷ|ㄷ|ㄹ|ㄹㄱ|ㄹㅁ|ㄹㅂ|ㄹㅅ|ㄹㄷ|ㄹㅂ|ㄹ ㅎ|ㅁ|ㅂ|ㅂ|ㅂㅅ|ㅅ|ㅅ|' +\n  ' ㅇ|ㅈ|ㅈ|ㅈ|ㄱ|ㄷ|ㅂ| ㅎ'\n).split('|')\nconst U3165 = (\n  'ㄴ|ㄴㄷ|ㄴㅅ|ㄴㅅ|ㄹㄱㅅ|ㄹㄷ|ㄹㅂㅅ|ㅁㅅ|ㅁ|ㅂㄱ|ㅂㄷ|ㅂㅅㄱ|ㅂㅅㄷ|ㅂㅈ|ㅂㄷ|ㅂ|ㅂ|ㅅㄱ|ㅅㄴ|' +\n  ' ㅇ| ㅇ| ㅇㅅ| ㅇㅅ|ㅂ| ㅎ| ㅎ'\n).split('|')\nconst UA960 = (\n  'ㄷㅁ|ㄷㅂ|ㄷㅅ|ㄷㅈ|ㄹㄱ|ㄹㄱ|ㄹㄷ|ㄹㄷ|ㄹㅁ|ㄹㅂ|ㄹㅂ|ㄹㅂ|ㄹㅅ|ㄹㅈ|ㄹㄱ|ㅁㄱ|ㅁㄷ|ㅁㅅ|' +\n  'ㅂㅅㄷ|ㅂㄱ|ㅂ ㅎ|ㅅㅂ| ㅇㄹ| ㅇ ㅎ|ㅈ ㅎ|ㄷ|ㅂ ㅎ| ㅎㅅ| ㅎ'\n).split('|')\n\n/** Normalizes each character into standard form */\nfunction normalizeChar(c: string) {\n  if (c.length !== 1) {\n    throw Error(\n      '[normalizeChar] Length of string should be 1, not ' + c.length + ': ' + c\n    )\n  }\n\n  function _get(arr: string[], ref: string, divisor = 1) {\n    let idx = c.charCodeAt(0) - ref.charCodeAt(0)\n    idx = Math.floor(idx / divisor)\n    if (idx >= 0 && idx < arr.length) {\n      return arr[idx]\n    }\n    return ''\n  }\n\n  if (c >= '\\u1100' && c <= '\\u11FF') {\n    return _get(U1100, '\\u1100')\n  } else if (c >= '\\u302E' && c <= '\\u302F') {\n    return ''\n  } else if (c >= '\\u3131' && c <= '\\u3164') {\n    return _get(JAMO, '\\u3131')\n  } else if (c >= '\\u3165' && c <= '\\u318E') {\n    return _get(U3165, '\\u3165')\n  } else if (c >= '\\uA960' && c <= '\\uA97C') {\n    return _get(UA960, '\\uA960')\n  } else if (c >= '\\uAC00' && c <= '\\uD7AF') {\n    return _get(U1100, '\\uAC00', 588)\n  } else if (c >= '\\uD7B0' && c <= '\\uD7C6') {\n    return ''\n  } else if (c >= '\\uD7CB' && c <= '\\uD7FB') {\n    return ''\n  } else if (c >= '\\uFFA0' && c <= '\\uFFBE') {\n    return _get(JAMO, '\\uFFA1')\n  } else if ('ￂￃￄￅￆￇￊￋￌￍￎￏￒￓￔￕￖￗￚￛￜ'.indexOf(c) >= 0) {\n    return ''\n  } else return ' '\n}\n\nexport function normalize(sentence: string) {\n  const normalized = sentence.split('').map(normalizeChar).join('')\n  return normalized.split(/( )/)\n}\n\nfunction mergeMetadata(a: AS.Metadata, b: AS.Metadata) {\n  return new AS.Metadata(a.filename, a.line_no, a.start_col, b.end_col, a.line)\n}\n\nfunction tokenize(filename: string, sentence: string) {\n  const lines = sentence.split('\\n')\n  const characters = lines.flatMap((line, i) =>\n    (line + '\\n').split('').flatMap((c, j) =>\n      normalize(c)\n        .filter((d) => d !== '')\n        .map((d): [string, AS.Metadata] => [\n          d,\n          new AS.Metadata(filename, i, j, j + 1, line),\n        ])\n    )\n  )\n  if (characters.length === 0) return []\n\n  let tokens = [characters[0]]\n  for (const [cur, metadata] of characters.slice(1)) {\n    const top = tokens.pop()\n    if (top == null) throw Error('Internal::tokenize::EMPTY_STACK')\n    const [prev, prevMetadata] = top\n    if (prev === ' ' && cur === ' ') {\n      tokens.push([prev, prevMetadata])\n    } else if (prev !== ' ' && cur !== ' ') {\n      tokens.push([prev + cur, mergeMetadata(prevMetadata, metadata)])\n    } else {\n      tokens.push([prev, prevMetadata])\n      tokens.push([cur, metadata])\n    }\n  }\n  return tokens.filter(([c, metadata]) => c !== ' ')\n}\n\n/* Parses jamo-encoded variable length integer into JS Number */\nexport function parseNumber(s: string): bigint {\n  const tbl = 'ㄱㄴㄷㄹㅁㅂㅅㅈ'\n  const varlen = s.split('').map(function (c) {\n    return tbl.indexOf(c)\n  })\n  if (varlen.indexOf(-1) !== -1) {\n    throw SyntaxError('Argument ' + s + ' has an unsupported character')\n  }\n  let num = BigInt('0o' + varlen.reverse().join(''))\n  if (s.length % 2 === 0) {\n    num = -num\n  }\n  return num\n}\n\n/* Encodes JS integer to jamo-encoded variable length integer. */\nexport function encodeNumber(number: number | bigint) {\n  const isNegative = number < 0\n  number = number >= 0 ? number : -number\n  const oct = number.toString(8).split('').reverse()\n  const tbl = 'ㄱㄴㄷㄹㅁㅂㅅㅈ'\n  let encoded = oct.map((s) => tbl[+s]).join('')\n  if ((encoded.length % 2 === 0) !== isNegative) {\n    encoded += 'ㄱ'\n  }\n  return encoded\n}\n\n/** Parses concrete syntax to abstract syntax\n * @param token token to parse\n * @param stack list of parsed legal arguments so far that we will modify\n */\nfunction parseToken(token: [string, AS.Metadata], stack: AS.AST[]) {\n  const [word, metadata] = token\n  if (word.indexOf('ㅎ') !== -1) {\n    const arity = word.slice(1)\n\n    if (arity) {\n      // AS.FunCall\n      const _arity = Number(parseNumber(arity))\n      if (_arity < 0) {\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          `함수 호출 시 ${_arity}개의 인수를 요구했습니다.`\n        )\n      }\n\n      const fun = stack.pop()\n      if (fun == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '호출할 함수가 없습니다.'\n        )\n      if (_arity === 0) {\n        stack.push(new AS.FunCall(metadata, fun, []))\n      } else {\n        const argv = stack.splice(-_arity, _arity)\n        if (argv.length < _arity) {\n          throw new E.UnsuspectedHangeulSyntaxError(\n            metadata,\n            `함수 호출 시 ${_arity}개의 인수를 요구했으나 표현식이 ${argv.length}개밖에 없습니다.`\n          )\n        }\n        stack.push(new AS.FunCall(metadata, fun, argv))\n      }\n    } else {\n      // AS.FunDef\n      const body = stack.pop()\n      if (body == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '함수 몸통이 없습니다.'\n        )\n      stack.push(new AS.FunDef(metadata, body))\n    }\n  } else if (word.indexOf('ㅇ') !== -1) {\n    const trailer = word.slice(1)\n    if (trailer !== '') {\n      // AS.ArgRef\n      const relA = stack.pop()\n      if (relA == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '인수 참조 구문이 잘못되었습니다.'\n        )\n      const relF = Number(parseNumber(trailer))\n      stack.push(new AS.ArgRef(metadata, relA, relF))\n    } else {\n      // AS.FunRef\n      const relF = stack.pop()\n      if (relF == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '함수 참조 구문이 잘못되었습니다.'\n        )\n      if (!(relF instanceof AS.Literal)) {\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          `함수 참조 시에는 정수 리터럴만 허용됩니다.`\n        )\n      }\n      stack.push(new AS.FunRef(metadata, Number(relF.value)))\n    }\n  } else {\n    stack.push(new AS.Literal(metadata, parseNumber(word)))\n  }\n}\n\n/* Parses program into abstract syntax */\nexport function parse(filename: string, sentence: string) {\n  const tokens = tokenize(filename, sentence)\n  const stack: AS.AST[] = []\n  for (const token of tokens) {\n    parseToken(token, stack)\n  }\n  return stack\n}\n","import * as AS from './abstractSyntax'\nimport { parseNumber } from './parse'\n\nexport class UnsuspectedHangeulBuiltinError extends AS.UnsuspectedHangeulError {\n  constructor(metadata: AS.Metadata, message: string, codes: bigint[]) {\n    const _codes = [parseNumber('ㅂ'), ...codes]\n    const argv = _codes.map((code) => new AS.IntegerV(code))\n    const err = new AS.ErrorV([metadata], message, argv)\n    super(err)\n  }\n}\n\nexport class UnsuspectedHangeulOSError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㅈ') // 체제\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulArithmeticError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅅㅅ') // 산술\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulSyntaxError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅁㅂ') // 문법\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulTypeError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㄱ') // 꼴\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulValueError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㅁ') // 잘못\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulDivisionError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㄴㄴ') // 나누기\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulNotFoundError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅁㅈ') // 못찾\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulImportError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅂ') // 불러오기\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulOutOfRangeError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅂㄱ') // 바깥\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulKeyboardInterruptError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㄷ') // 중단\n    super(metadata, message, [code])\n  }\n}\n","/** Useful utilities **/\nimport * as AS from './abstractSyntax'\nimport * as E from './error'\n\nexport function isLiteralExpr(\n  expr: AS.Value\n): expr is AS.ExprV & { expr: AS.Literal } {\n  return expr instanceof AS.ExprV && expr.expr instanceof AS.Literal\n}\n\nexport function extractValue<T>(arg: { value: T }): T {\n  return arg.value\n}\n\nexport function getLength(arg: { length: number } | ArrayBuffer) {\n  return 'length' in arg ? arg.length : arg.byteLength\n}\n\nexport function joinArrayBuffer(bufs: ArrayBuffer[]) {\n  const size = bufs.map((a) => a.byteLength).reduce((a, b) => a + b, 0)\n  const newBuf = new ArrayBuffer(size)\n  const view = new Uint8Array(newBuf)\n  bufs.reduce(function (idx, buf) {\n    view.set(new Uint8Array(buf), idx)\n    return idx + buf.byteLength\n  }, 0)\n  return newBuf\n}\n\nexport function recursiveMap(\n  item: AS.Value,\n  fn: (value: AS.Value) => AS.StrictValue\n): AS.StrictValue {\n  const _item = fn(item)\n  if (_item instanceof AS.ListV) {\n    return new AS.ListV(_item.value.map((v) => recursiveMap(v, fn)))\n  }\n  if (_item instanceof AS.DictV) {\n    const d = _item.value\n    const result: Record<string, AS.StrictValue> = {}\n    Object.keys(d).forEach(function (k) {\n      result[k] = recursiveMap(d[k], fn)\n    })\n    return new AS.DictV(result)\n  }\n  if (_item instanceof AS.ErrorV) {\n    return new AS.ErrorV(\n      _item.metadatas,\n      _item.message,\n      _item.value.map((v) => recursiveMap(v, fn))\n    )\n  }\n  return _item\n}\n\nexport function allEqual<T>(arr: T[]): boolean {\n  if (arr.length === 0) return true\n  return arr.every(function (a) {\n    return a === arr[0]\n  })\n}\n\n/* Argument constraint checkers */\nexport function isType<T extends AS.StrictValueType>(\n  argv: AS.StrictValue[],\n  desiredTypes: readonly T[]\n): argv is InstanceType<T>[] {\n  function _matches(arg: AS.StrictValue) {\n    return desiredTypes.some(function (desiredType) {\n      return arg instanceof desiredType\n    })\n  }\n  return argv.every(_matches)\n}\n\nfunction _formatArray(arr: string[], conj = ', ') {\n  return arr.join(conj)\n}\n\nexport function checkType<T extends AS.StrictValueType>(\n  metadata: AS.Metadata,\n  argv: AS.StrictValue[],\n  desiredTypes: readonly T[]\n): InstanceType<T>[] {\n  if (isType(argv, desiredTypes)) return argv\n  const desiredTypeNames = desiredTypes.map((t) => t.typeName)\n  const argTypeNames = argv.map(\n    (a) => (a.constructor as AS.StrictValueType).typeName\n  )\n  throw new E.UnsuspectedHangeulTypeError(\n    metadata,\n    `인수를 ${_formatArray(desiredTypeNames)} 중에서 주어야 하는데 ` +\n      `${josa(_formatArray(argTypeNames), '을', '를')} 주었습니다.`\n  )\n}\n\nexport function checkArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  desiredArities: number | number[]\n) {\n  const arities = Array.isArray(desiredArities)\n    ? desiredArities\n    : [desiredArities]\n  if (arities.indexOf(argv.length) !== -1) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${_formatArray(\n      arities.map((a) => a.toString()),\n      '개나 '\n    )}개를 주어야 하는데 ` + `${argv.length}개의 인수를 주었습니다.`\n  )\n}\n\nexport function checkMinArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  minimumArity: number\n) {\n  if (argv.length >= minimumArity) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${minimumArity}개 이상 주어야 하는데` +\n      `${argv.length}개 주었습니다.`\n  )\n}\n\nexport function checkMaxArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  maximumArity: number\n) {\n  if (argv.length <= maximumArity) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${maximumArity}개 이하 주어야 하는데` +\n      `${argv.length}개 주었습니다.`\n  )\n}\n\nexport function matchDefaults<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  arity: number,\n  defaults?: T[]\n) {\n  if (defaults === undefined) {\n    defaults = []\n  }\n  checkMaxArity(metadata, argv, arity)\n  checkMinArity(metadata, argv, arity - defaults.length)\n  if (argv.length < arity) {\n    let deficiency = arity - argv.length\n    argv = argv.concat(defaults.slice(-deficiency))\n  }\n  return argv\n}\n\nexport function josa(\n  content: string,\n  particleBatchim: string,\n  particleNoBatchim: string\n): string {\n  if (content.length === 0) return content + particleBatchim\n  const lastCode = content.charCodeAt(content.length - 1)\n  if (lastCode < 0xac00 || lastCode > 0xd7a3) return content + particleBatchim\n  const hasBatchim = (lastCode - 0xac00) % 28 !== 0\n  return content + (hasBatchim ? particleBatchim : particleNoBatchim)\n}\n","import Complex from 'complex.js'\n\nimport * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { add, div, mod, mul, pow } from '../numbers'\nimport {\n  checkArity,\n  checkMinArity,\n  checkType,\n  extractValue,\n  isType,\n  joinArrayBuffer,\n} from '../utils'\n\nexport function wrapNumber(num: bigint | number | Complex) {\n  if (typeof num === 'bigint') return new AS.IntegerV(num)\n  if (num instanceof Complex) return new AS.ComplexV(num)\n  return new AS.FloatV(num)\n}\n\n/** Returns (g, x, y) such that a*x + b*y = g = gcd(a, b) */\nfunction extendedGcd(a: bigint, b: bigint): [bigint, bigint, bigint] {\n  let [x, x_old, y, y_old] = [0n, 1n, 1n, 0n]\n  while (a !== 0n) {\n    const quotient = b / a\n    ;[a, b] = [b % a, a]\n    ;[y, y_old] = [y_old, y - quotient * y_old]\n    ;[x, x_old] = [x_old, x - quotient * x_old]\n  }\n  return [b, x, y]\n}\n\nfunction modularInverse(num: bigint, modulo: bigint) {\n  const [g, inverse, _] = extendedGcd(num % modulo, modulo)\n  if (g === 1n) return (inverse + modulo) % modulo\n  throw Error(`법 ${modulo}에 대한 ${num}의 역원이 없습니다.`)\n}\n\nfunction modPow(base: bigint, exponent: bigint, modulo: bigint): bigint {\n  if (modulo === 0n) throw Error(`0을 법으로 할 수 없습니다.`)\n  base = base % modulo\n  let result = 1n\n  if (exponent < 0n) {\n    exponent = -exponent\n    base = modularInverse(base, modulo)\n  }\n  while (exponent > 0n) {\n    if (base === 0n) return 0n\n    if (exponent % 2n === 1n) result = (result * base) % modulo\n    exponent /= 2n\n    base = base ** 2n % modulo\n  }\n  return result\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _multiply(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkMinArity(metadata, argv, 1)\n    const first = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.BooleanV, ...AS.NumberV]\n    )\n    if (isType(first, AS.NumberV)) {\n      const _argv = checkType(metadata, argv.map(strict), AS.NumberV)\n      return wrapNumber(_argv.map((arg) => arg.value).reduce(mul))\n    }\n\n    // short-circuiting\n    for (const arg of argv) {\n      const [_arg] = checkType(metadata, [strict(arg)], [AS.BooleanV])\n      if (!_arg.value) return new AS.BooleanV(false)\n    }\n    return new AS.BooleanV(true)\n  }\n\n  function _add(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkMinArity(metadata, argv, 1)\n    const first = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.BooleanV, AS.DictV, ...AS.NumberV, ...AS.SequenceV]\n    )\n    if (isType(first, [AS.BooleanV])) {\n      // short-circuiting\n      for (const arg of argv) {\n        const [_arg] = checkType(metadata, [strict(arg)], [AS.BooleanV])\n        if (_arg.value) return new AS.BooleanV(true)\n      }\n      return new AS.BooleanV(false)\n    }\n\n    if (isType(first, [AS.StringV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.StringV])\n      return new AS.StringV(_argv.map((arg) => arg.str).join(''))\n    }\n    if (isType(first, [AS.BytesV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.BytesV])\n      return new AS.BytesV(joinArrayBuffer(_argv.map(extractValue)))\n    }\n    if (isType(first, [AS.ListV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.ListV])\n      return new AS.ListV(_argv.map(extractValue).reduce((a, b) => a.concat(b)))\n    }\n    if (isType(first, [AS.DictV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.DictV])\n      const result = {}\n      _argv.map(extractValue).forEach((d) => Object.assign(result, d))\n      return new AS.DictV(result)\n    }\n    const _argv = checkType(metadata, argv.map(strict), AS.NumberV)\n    return wrapNumber(_argv.map((arg) => arg.value).reduce(add))\n  }\n\n  function _exponentiate(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    const _argv = checkType(metadata, argv.map(strict), AS.NumberV)\n    if (_argv.length === 3) {\n      const [base, exp, mod] = checkType(metadata, _argv, [AS.IntegerV])\n      try {\n        return new AS.IntegerV(modPow(base.value, exp.value, mod.value))\n      } catch (err) {\n        if (err instanceof Error) {\n          throw new E.UnsuspectedHangeulArithmeticError(metadata, err.message)\n        }\n        throw err\n      }\n    }\n    checkArity(metadata, _argv, 2)\n    try {\n      return wrapNumber(pow(_argv[0].value, _argv[1].value))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulDivisionError(metadata, error.message)\n      }\n      throw error\n    }\n  }\n\n  function _integerDivision(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(strict), AS.RealV)\n    try {\n      return wrapNumber(div(_argv[0].value, _argv[1].value))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulDivisionError(\n          metadata,\n          '0의 역수를 구하려고 했습니다.'\n        )\n      }\n      throw error\n    }\n  }\n\n  function _remainder(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(strict), AS.RealV)\n    try {\n      return wrapNumber(mod(_argv[0].value, _argv[1].value))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulDivisionError(\n          metadata,\n          '0의 역수를 구하려고 했습니다.'\n        )\n      }\n      throw error\n    }\n  }\n\n  return {\n    ㄱ: _multiply,\n    ㄷ: _add,\n    ㅅ: _exponentiate,\n    ㄴㄴ: _integerDivision,\n    ㄴㅁ: _remainder,\n  }\n}\n","import Complex from 'complex.js'\n\nimport * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { arrayToInt, toComplex } from '../numbers'\nimport { checkArity, checkType, isType, matchDefaults } from '../utils'\n\nfunction _parseStrToNumber(\n  metadata: AS.Metadata,\n  argv: AS.StrictValue[]\n): [string, number] {\n  const _argv = matchDefaults(metadata, argv, 2, [new AS.IntegerV(10n)])\n  const [str] = checkType(metadata, [_argv[0]], [AS.StringV])\n  const [num] = checkType(metadata, [_argv[1]], [AS.IntegerV])\n  return [str.str, Number(num.value)]\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _list(metadata: AS.Metadata, argv: AS.Value[]) {\n    return new AS.ListV(argv)\n  }\n  function _dict(metadata: AS.Metadata, argv: AS.Value[]) {\n    const len = argv.length\n    if (len % 2 === 1) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `ㅅㅈ 함수에는 인수를 짝수 개로 주어야 하는데 ${len}개를 주었습니다.`\n      )\n    }\n    const keys = argv.filter((_, i) => i % 2 === 0)\n    const values = argv.filter((_, i) => i % 2 === 1)\n    const _keys = keys.map(strict).map((key) => key.asKey(strict))\n    const result: Record<string, AS.Value> = {}\n    for (let i = 0; i < len / 2; i++) {\n      result[_keys[i]] = values[i]\n    }\n    return new AS.DictV(result)\n  }\n  function _string(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [0, 1])\n    if (argv.length === 0) return new AS.StringV('')\n    const [arg] = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.StringV, ...AS.NumberV]\n    )\n    if (arg instanceof AS.StringV) return arg\n    return new AS.StringV(arg.format(strict))\n  }\n  function _integer(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [\n      AS.StringV,\n      ...AS.RealV,\n    ])\n    const first = [_argv[0]]\n    if (isType(first, AS.RealV)) {\n      checkArity(metadata, _argv, 1)\n      if (first[0] instanceof AS.IntegerV) return first[0]\n      const value = Math.trunc(first[0].value)\n      return new AS.IntegerV(BigInt(value))\n    }\n    const [digits, radix] = _parseStrToNumber(metadata, _argv)\n    try {\n      return new AS.IntegerV(arrayToInt(digits, radix))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulValueError(metadata, error.message)\n      }\n      throw error\n    }\n  }\n  function _float(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [\n      AS.StringV,\n      ...AS.RealV,\n    ])\n    const first = [_argv[0]]\n    if (isType(first, AS.RealV)) {\n      checkArity(metadata, _argv, 1)\n      return new AS.FloatV(Number(first[0].value))\n    }\n    const [digits, radix] = _parseStrToNumber(metadata, _argv)\n    if (radix === 10) {\n      const num = Number(digits)\n      if (isNaN(num))\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `다음 문자열을 실수값으로 변환할 수 없습니다: '${digits}'`\n        )\n      return new AS.FloatV(num)\n    }\n    const splitted = digits.trim().split('.')\n    let significant = splitted.join('')\n    if (significant[0] === '+') significant = significant.slice(1)\n    try {\n      const _significant = Number(arrayToInt(significant, radix))\n      const order = splitted.length > 1 ? splitted[1].length : 0\n      return new AS.FloatV(_significant / radix ** order)\n    } catch (error) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `다음 문자열을 실수값으로 변환할 수 없습니다: '${digits}'`\n      )\n    }\n  }\n  function _complex(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [\n      AS.StringV,\n      ...AS.NumberV,\n    ])\n    if (argv.length === 1) {\n      const arg = _argv[0] instanceof AS.StringV ? _argv[0].str : _argv[0].value\n      try {\n        return new AS.ComplexV(toComplex(arg))\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new E.UnsuspectedHangeulValueError(\n            metadata,\n            `다음 문자열을 복소수값으로 변환할 수 없습니다: ${arg}`\n          )\n        }\n        throw error\n      }\n    }\n    const __argv = checkType(metadata, _argv, AS.NumberV)\n    const values = __argv.map((arg) => toComplex(arg.value))\n    const re = values[0].re - values[1].im\n    const im = values[0].im + values[1].re\n    return new AS.ComplexV(Complex({ re, im }))\n  }\n  function _nil(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.NilV()\n  }\n  function _exception(metadata: AS.Metadata, argv: AS.Value[]) {\n    const _argv = argv.map(strict)\n    const message = `사용자 예외: ${_argv.map((v) => v.format(strict))}`\n    return new AS.ErrorV([metadata], message, _argv)\n  }\n\n  return {\n    ㅅㅈ: _dict,\n    ㅁㄹ: _list,\n    ㅁㅈ: _string,\n    ㅈㅅ: _integer,\n    ㅅㅅ: _float,\n    ㅂㅅ: _complex,\n    ㅂㄱ: _nil,\n    ㄷㅂ: _exception,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType } from '../utils'\n\nclass PipeV extends AS.FunctionV {\n  constructor(private funs: AS.Evaluation[]) {\n    super('연결된 ')\n  }\n\n  execute(metadata: AS.Metadata, args: AS.Value[]) {\n    const result = this.funs.reduce((argv, f) => [f(metadata, argv)], args)\n    return result[0]\n  }\n}\nclass CollectV extends AS.FunctionV {\n  constructor(private fn: AS.Evaluation, private strict: AS.StrictFn) {\n    super('모아 받는 ')\n  }\n\n  execute(metadata: AS.Metadata, args: AS.Value[]) {\n    checkArity(metadata, args, 1)\n    const seq = this.strict(args[0])\n    const [_seq] = checkType(metadata, [seq], [AS.ListV, AS.ErrorV])\n    return this.fn(metadata, _seq.value)\n  }\n}\nclass SpreadV extends AS.FunctionV {\n  constructor(private fn: AS.Evaluation) {\n    super('펼쳐 받는 ')\n  }\n\n  execute(metadata: AS.Metadata, args: AS.Value[]) {\n    return this.fn(metadata, [new AS.ListV(args)])\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _proc(metadata: AS.Metadata) {\n    return (fun: AS.Value) => procFunctional(metadata, fun, true)\n  }\n  function _pipe(metadata: AS.Metadata, argv: AS.Value[]) {\n    return new PipeV(argv.map(_proc(metadata)))\n  }\n  function _collect(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    return new CollectV(_proc(metadata)(argv[0]), strict)\n  }\n  function _spread(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    return new SpreadV(_proc(metadata)(argv[0]))\n  }\n  return {\n    ㄴㄱ: _pipe,\n    ㅁㅂ: _collect,\n    ㅂㅂ: _spread,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { encodeNumber } from '../parse'\nimport {\n  checkArity,\n  checkMaxArity,\n  checkMinArity,\n  checkType,\n  recursiveMap,\n} from '../utils'\n\nconst MODE_TABLE = {\n  ㄹ: 'r',\n  ㅈㄹ: 'w',\n  ㅈㄱ: 'a',\n  ㄹㅈㄹ: 'r+',\n  ㅈㄹㄹ: 'w+',\n  ㅈㄱㄹ: 'a+',\n} as const\n\nclass FileV extends AS.FunctionV {\n  constructor(private file: AS.File, private strict: AS.StrictFn) {\n    super('파일 접근 ')\n  }\n  execute(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkMinArity(metadata, argv, 1)\n    const [command] = checkType(metadata, argv.slice(-1).map(this.strict), [\n      AS.IntegerV,\n    ])\n    const commandStr = encodeNumber(command.value)\n    if (commandStr === 'ㄷ') {\n      return this.close(metadata, argv)\n    } else if (commandStr === 'ㄹ') {\n      return this.read(metadata, argv)\n    } else if (commandStr === 'ㅈㄹ') {\n      return this.write(metadata, argv)\n    } else if (commandStr === 'ㅈ') {\n      return this.seekOrTell(metadata, argv)\n    } else if (commandStr === 'ㄱ') {\n      return this.truncate(metadata, argv)\n    } else {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `${commandStr}은 파일 객체가 인식하지 못하는 명령입니다.`\n      )\n    }\n  }\n  private close(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 1)\n    return new AS.IOV('FileV::close', [this], async (doIO, ioUtils) => {\n      try {\n        this.file.close()\n        return new AS.NilV()\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 닫기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n  private read(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 2)\n    const [count] = checkType(metadata, [this.strict(argv[0])], [AS.IntegerV])\n    return new AS.IOV('FileV::read', [this, count], async (doIO, ioUtils) => {\n      try {\n        const content = await this.file.read(Number(count.value))\n        return new AS.BytesV(content)\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 읽기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n  private write(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 2)\n    const [content] = checkType(metadata, [this.strict(argv[0])], [AS.BytesV])\n    return new AS.IOV(\n      'FileV::write',\n      [this, content],\n      async (doIO, ioUtils) => {\n        try {\n          const count = this.file.write(content.value)\n          return new AS.IntegerV(BigInt(count))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일 쓰기에 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n  private seekOrTell(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkMaxArity(metadata, argv, 3)\n    const _argv = argv.map(this.strict)\n    if (argv.length === 1) {\n      return new AS.IOV('FileV::seekOrTell', [this], async (doIO, ioUtils) => {\n        try {\n          return new AS.IntegerV(BigInt(this.file.tell()))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일의 어디를 읽고 있는지 알아내는 데 실패하였습니다: ${error}`\n          )\n        }\n      })\n    }\n\n    let whence: 'SEEK_SET' | 'SEEK_CUR' = 'SEEK_SET'\n    let offset: AS.IntegerV\n    if (argv.length === 2) {\n      ;[offset] = checkType(metadata, [_argv[0]], [AS.IntegerV])\n    } else {\n      ;[offset] = checkType(metadata, [_argv[1]], [AS.IntegerV])\n      let [_whence] = checkType(metadata, [_argv[0]], [AS.IntegerV])\n      switch (encodeNumber(_whence.value)) {\n        case 'ㅅㅈㅂㄷ':\n          whence = 'SEEK_SET'\n          break\n        case 'ㅈㄱㅂㄷ':\n          whence = 'SEEK_CUR'\n          break\n        default:\n          throw new E.UnsuspectedHangeulValueError(\n            metadata,\n            `파일 객체의 ㅈ 명령에 주는 위치 인수로 ${_whence.value}은 적절하지 않습니다.`\n          )\n      }\n    }\n    return new AS.IOV(\n      'FileV::seekOrTell',\n      [this, ..._argv.slice(0, -1)],\n      async (doIO, ioUtils) => {\n        try {\n          const pos = this.file.seek(Number(offset.value), whence)\n          return new AS.IntegerV(BigInt(pos))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일의 읽는 위치를 수정하는 데 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n  private truncate(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkMaxArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(this.strict), [AS.IntegerV])\n    const size = _argv.length > 1 ? Number(_argv[0].value) : undefined\n    return new AS.IOV(\n      'FileV::truncate',\n      [this, ..._argv.slice(0, -1)],\n      async (doIO, ioUtils) => {\n        try {\n          const newSize = this.file.truncate(size)\n          return new AS.IntegerV(BigInt(newSize))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일 크기를 재조정하는 데 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _input(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.IOV('ㄹ', argv, async function (doIO, ioUtils) {\n      const input = await ioUtils.input()\n      return input == null ? new AS.NilV() : new AS.StringV(input)\n    })\n  }\n  function _print(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const _argv = checkType(metadata, argv.map(strict), [AS.StringV])\n    return new AS.IOV('ㅈㄹ', _argv, async function (doIO, ioUtils) {\n      ioUtils.print(_argv[0].str)\n      return new AS.NilV()\n    })\n  }\n  function _return(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const arg = recursiveMap(argv[0], strict)\n    return new AS.IOV('ㄱㅅ', [arg], async function (doIO, ioUtils) {\n      return arg\n    })\n  }\n  function _bind(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    const [ioToBind] = checkType(metadata, [strict(argv[0])], [AS.IOV])\n    return new AS.IOV('ㄱㄹ', argv, async function (doIO, ioUtils) {\n      let arg: AS.NonIOStrictValue\n      try {\n        arg = await doIO(ioToBind)\n      } catch (error) {\n        if (error instanceof AS.UnsuspectedHangeulError) {\n          if (argv.length < 3) throw error\n          const result = procFunctional(metadata, argv[2])(metadata, [\n            error.err,\n          ])\n          const [_result] = checkType(metadata, [strict(result)], [AS.IOV])\n          return _result\n        }\n        throw error\n      }\n      const result = procFunctional(metadata, argv[1])(metadata, [arg])\n      const [_result] = checkType(metadata, [strict(result)], [AS.IOV])\n\n      return _result\n    })\n  }\n  function _file(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const [path] = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.IntegerV, AS.StringV]\n    )\n    const _path = path instanceof AS.IntegerV ? Number(path.value) : path.str\n\n    const [mode] = checkType(metadata, [strict(argv[1])], [AS.IntegerV])\n    const modeStr = encodeNumber(mode.value)\n    if (!(modeStr in MODE_TABLE)) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `${modeStr}은 기본 제공 함수 ㄱㄴ이 이해하는 파일 열기 방식이 아닙니다.`\n      )\n    }\n    const _mode = MODE_TABLE[modeStr as keyof typeof MODE_TABLE]\n    return new AS.IOV('ㄱㄴ', [path, mode], async function (doIO, ioUtils) {\n      try {\n        return new FileV(loadUtils.open(_path, _mode), strict)\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 열기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n\n  return {\n    ㄹ: _input,\n    ㅈㄹ: _print,\n    ㄱㅅ: _return,\n    ㄱㄹ: _bind,\n    ㄱㄴ: _file,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { arrayToInt, intToArray } from '../numbers'\nimport { checkArity, checkType } from '../utils'\n\nfunction _isBigEndianSystem() {\n  // Copied from:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView#endianness\n  const buffer = new ArrayBuffer(2)\n  new DataView(buffer).setInt16(0, 256, false /* big endian */)\n  // Int16Array uses the platform's endianness.\n  return new Int16Array(buffer)[0] === 256\n}\n\nfunction _write(\n  view: DataView,\n  arr: number[],\n  numBytes: number,\n  bigEndian?: boolean\n) {\n  const _set = {\n    1: view.setUint8.bind(view),\n    2: view.setUint16.bind(view),\n    4: view.setUint32.bind(view),\n  }[numBytes]\n  if (_set == null) throw Error()\n  for (let i = 0; i < arr.length; i++) {\n    _set(i * numBytes, arr[i], !bigEndian)\n  }\n}\n\nfunction _read(view: DataView, numBytes: number, bigEndian?: boolean) {\n  const _get = {\n    1: view.getUint8.bind(view),\n    2: view.getUint16.bind(view),\n    4: view.getUint32.bind(view),\n  }[numBytes]\n  if (_get == null) throw Error()\n  var arr = []\n  for (let i = 0; i < view.byteLength; i += numBytes) {\n    arr.push(_get(i, !bigEndian))\n  }\n  return arr\n}\n\nfunction isExpressible(integer: bigint, numBytes: bigint, signed: boolean) {\n  const bound = 2n << (8n * numBytes)\n  if (signed) return -bound / 2n <= integer && integer < bound / 2n\n  return 0n <= integer && integer < bound\n}\n\nconst CODEC_TBL = ['utf', 'unsigned', 'signed', 'float'] as const\n\nclass Codec extends AS.FunctionV {\n  private scheme: (typeof CODEC_TBL)[number]\n  private numBytes: number\n  private bigEndian?: boolean\n  private endianness: 'big' | 'little' | ''\n  private codec: AS.Evaluation\n  constructor(\n    public strict: AS.StrictFn,\n    metadata: AS.Metadata,\n    scheme: AS.StrictValue,\n    numBytes: AS.StrictValue,\n    bigEndian?: AS.StrictValue\n  ) {\n    super()\n    const [_scheme, _numBytes] = checkType(\n      metadata,\n      [scheme, numBytes],\n      [AS.IntegerV]\n    )\n    this.scheme = CODEC_TBL[Number(_scheme.value)]\n    this.numBytes = Number(_numBytes.value)\n    this.endianness = ''\n    if (bigEndian) {\n      const [_bigEndian] = checkType(metadata, [bigEndian], [AS.BooleanV])\n      this.bigEndian = _bigEndian.value\n      this.endianness = this.bigEndian ? 'big' : 'little'\n    }\n    this.codec = this.getCodec()\n\n    this.str =\n      '<Codec(scheme=' +\n      this.scheme +\n      ', num_bytes=' +\n      this.numBytes +\n      ', big_endian=' +\n      this.bigEndian +\n      ')>'\n  }\n\n  execute(metadata: AS.Metadata, argv: AS.Value[]) {\n    const _argv = argv.map(this.strict)\n    try {\n      return this.codec(metadata, _argv)\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) throw error\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `요청된 변환을 수행하지 못했습니다. 변환기: ${this.str}, 인수: ${_argv}`\n      )\n    }\n  }\n\n  getCodec(): AS.Evaluation {\n    switch (this.scheme) {\n      case 'utf':\n        return this.unicodeCodec\n      case 'signed':\n        return this.integerCodec\n      case 'unsigned':\n        return this.integerCodec\n      case 'float':\n        return this.floatingPointCodec\n    }\n  }\n\n  unicodeCodec(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const [arg] = checkType(metadata, argv.map(this.strict), [\n      AS.StringV,\n      AS.BytesV,\n    ])\n    if (arg instanceof AS.StringV) {\n      if (this.numBytes === 1) {\n        const encoder = new TextEncoder()\n        return new AS.BytesV(encoder.encode(arg.str).buffer)\n      }\n\n      let arr: number[]\n      if (this.numBytes === 2) {\n        arr = arg.str.split('').map((c) => c.charCodeAt(0))\n      } else if (this.numBytes === 4) {\n        arr = arg.value\n          .map((c) => c.codePointAt(0))\n          .filter((x): x is number => x != null)\n      } else {\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `UTF-${this.numBytes * 8} 형식은 존재하지 않습니다.`\n        )\n      }\n\n      if (this.endianness === '') {\n        arr.unshift(0xfeff)\n      }\n      const buf = new ArrayBuffer(arr.length * this.numBytes)\n      _write(new DataView(buf), arr, this.numBytes, this.bigEndian)\n      return new AS.BytesV(buf)\n    } else {\n      const buf = arg.value\n      if (this.numBytes === 1) {\n        const decoder = new TextDecoder()\n        return new AS.StringV(decoder.decode(new Uint8Array(buf)))\n      }\n\n      let view = new DataView(buf)\n      let bigEndian = this.bigEndian ?? _isBigEndianSystem()\n      if (this.endianness === '') {\n        const getter = (\n          this.numBytes > 2 ? view.getUint32 : view.getUint16\n        ).bind(view)\n        const guessBigEndian = getter(0) === 0xfeff\n        if (guessBigEndian || getter(0, true) === 0xfeff) {\n          bigEndian = guessBigEndian\n          view = new DataView(buf, this.numBytes)\n        }\n      }\n      const arr = _read(view, this.numBytes, bigEndian)\n      return new AS.StringV(String.fromCodePoint(...arr))\n    }\n  }\n\n  integerCodec(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const signed = this.scheme === 'signed'\n    const [arg] = checkType(metadata, argv.map(this.strict), [\n      AS.IntegerV,\n      AS.BytesV,\n    ])\n    if (arg instanceof AS.IntegerV) {\n      let num = arg.value\n      const isNegative = num < 0\n\n      if (isNegative && !signed)\n        throw Error('음수는 부호 없는 정수 형식으로 변환할 수 없습니다.')\n      if (!isExpressible(num, BigInt(this.numBytes), signed))\n        throw Error(\n          `${this.numBytes}바이트로 표현할 수 없는 정수를 받았습니다.`\n        )\n\n      if (isNegative) num = ~num\n      const arr = intToArray(num, 256n).map(Number)\n      const buf = new ArrayBuffer(this.numBytes)\n      const u8 = new Uint8Array(buf)\n      u8.set(arr, this.numBytes - arr.length)\n      if (isNegative) u8.forEach((n, i) => (u8[i] = ~n))\n      if (!this.bigEndian) u8.reverse()\n      return new AS.BytesV(buf)\n    } else {\n      const buf = arg.value.slice(0)\n      const u8 = new Uint8Array(buf)\n      if (!this.bigEndian) u8.reverse()\n      const isNegative = signed && u8[0] & 0x80\n      if (isNegative) u8.forEach((n, i) => (u8[i] = ~n))\n      const arr = Array.from(u8)\n      let num = arrayToInt(arr, 256)\n      if (isNegative) num = ~num\n      return new AS.IntegerV(num)\n    }\n  }\n\n  floatingPointCodec(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    throw EvalError('Not yet implemented')\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function codec(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    const _argv = argv.map(strict)\n    const scheme = _argv[0]\n    const numBytes = _argv[1]\n    const bigEndian = _argv.length > 2 ? _argv[2] : undefined\n    return new Codec(strict, metadata, scheme, numBytes, bigEndian)\n  }\n\n  return { ㅂ: codec }\n}\n","import * as AS from '../abstractSyntax'\nimport { wrapNumber } from '../builtins/arithmetics'\nimport { JSNumber, abs, isclose, isinf, isnan, toComplex } from '../numbers'\nimport { checkArity, checkType, isType } from '../utils'\n\nfunction _rountToInf(x: number) {\n  return x > 0 ? Math.ceil(x) : Math.floor(x)\n}\nfunction _rountToEven(x: number) {\n  let rounded = Math.round(x)\n  if (x % 1 === 0.5 || x % 1 === -0.5) {\n    if (rounded % 2 === 1 || rounded % 2 === -1) rounded--\n  }\n  return rounded\n}\nfunction _wrapType<T, V>(type: { new (arg: V): T }) {\n  return (arg: V) => new type(arg)\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n) {\n  function _wrap<\n    ReturnInnerValue,\n    ReturnValue extends AS.StrictValue & { value: ReturnInnerValue },\n    ArgInnerValue extends InstanceType<ArgValue>['value'],\n    ArgValue extends (typeof AS.NumberV)[number]\n  >(\n    _fn: (...args: ArgInnerValue[]) => ReturnInnerValue,\n    arity: number,\n    retWrapper: (inner: ReturnInnerValue) => ReturnValue,\n    argType: readonly ArgValue[]\n  ) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, arity)\n      const _argv = checkType(metadata, argv.map(strict), argType)\n      const values = _argv.map(\n        (arg: InstanceType<ArgValue>) => arg.value as ArgInnerValue\n      )\n      return retWrapper(_fn(...values))\n    }\n  }\n\n  function _wrap2(\n    fnName: 'log' | 'sin' | 'asin' | 'cos' | 'acos' | 'tan' | 'atan'\n  ) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, 1)\n      const _argv = checkType(metadata, [strict(argv[0])], AS.NumberV)\n      if (isType(_argv, AS.RealV)) {\n        const value = Math[fnName](Number(_argv[0].value))\n        if (!isNaN(value)) return new AS.FloatV(value)\n      }\n      return new AS.ComplexV(toComplex(_argv[0].value)[fnName]())\n    }\n  }\n\n  function _wrapRound(_rounder: (x: number) => number) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, 1)\n      const [arg] = checkType(metadata, [strict(argv[0])], AS.RealV)\n      if (arg instanceof AS.IntegerV) return arg\n      const _arg = BigInt(_rounder(arg.value))\n      return new AS.IntegerV(_arg)\n    }\n  }\n  const _atan1 = _wrap2('atan')\n  const _atan2 = _wrap(\n    (y, x) => Math.atan2(Number(y), Number(x)),\n    2,\n    _wrapType(AS.FloatV),\n    AS.RealV\n  )\n  function _atan(metadata: AS.Metadata, argv: AS.Value[]) {\n    return argv.length === 2 ? _atan2(metadata, argv) : _atan1(metadata, argv)\n  }\n  return {\n    ㅅ: {\n      ㅂ: Math.PI,\n      ㅈ: Math.E,\n      ㅁ: Infinity,\n      ㄴ: NaN,\n      ㄱ: _wrap(\n        (a: JSNumber, b: JSNumber) => isclose(a, b),\n        2,\n        _wrapType(AS.BooleanV),\n        AS.NumberV\n      ),\n      ㄴㄴ: _wrap(isnan, 1, _wrapType(AS.BooleanV), AS.NumberV),\n      ㅁㄴ: _wrap(isinf, 1, _wrapType(AS.BooleanV), AS.NumberV),\n      ㅈㄷ: _wrap(abs, 1, wrapNumber, AS.NumberV),\n      ㄹㄱ: _wrap2('log'),\n      ㅅㄴ: _wrap2('sin'),\n      ㄴㅅ: _wrap2('asin'),\n      ㄱㅅ: _wrap2('cos'),\n      ㅅㄱ: _wrap2('acos'),\n      ㄷㄴ: _wrap2('tan'),\n      ㄴㄷ: _atan,\n      ㅂㄹ: {\n        ㄱ: _wrapRound(Math.trunc),\n        ㄴ: _wrapRound(Math.floor),\n        ㄷ: _wrapRound(_rountToEven),\n        ㄹ: _wrapRound(Math.ceil),\n        ㅁ: _wrapRound(_rountToInf),\n      },\n    },\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { encodeNumber, normalize, parse, parseNumber } from '../parse'\nimport { checkArity, checkMinArity, checkType, isLiteralExpr } from '../utils'\n\nimport buildBitwise from '../modules/bitwise'\nimport buildByte from '../modules/byte'\nimport buildMath from '../modules/math'\n\ninterface ModuleTable\n  extends Record<string, number | AS.Evaluation | ModuleTable> {}\nconst BUILDERS: ((\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n) => ModuleTable)[] = [buildBitwise, buildByte, buildMath]\n\nvar MODULE_REGISTRY: Record<string, AS.Value> = {}\nvar BUILTIN_MODULE_REGISTRY = new AS.DictV({})\n\nfunction loadFromPath(path: string, utils: AS.LoadUtils) {\n  path = utils.normalizePath(path)\n  var module = MODULE_REGISTRY[path]\n  if (module) return module\n  const program = utils.load(path)\n  const exprs = parse(path, program)\n  if (exprs.length !== 1) {\n    throw new E.UnsuspectedHangeulValueError(\n      exprs[0].metadata,\n      `모듈에는 표현식이 하나만 있어야 하는데 ${exprs.length}개가 있습니다.`\n    )\n  }\n  const env = new AS.Env([], [], utils)\n  module = new AS.ExprV(exprs[0], env, null)\n  MODULE_REGISTRY[path] = module\n  return module\n}\n\nfunction loadFromLiteral(\n  metadata: AS.Metadata,\n  literals: bigint[],\n  utils: AS.LoadUtils\n) {\n  const name = literals.map(encodeNumber).join(' ')\n  const errMsg = `정수 리터럴열 ${name}에 맞는 모듈을 찾지 못했습니다.`\n  // Search builtins\n  if (literals[0] === 5n) {\n    var module: AS.Value = BUILTIN_MODULE_REGISTRY\n    for (const idx of literals.slice(1)) {\n      if (module instanceof AS.DictV) {\n        module = module.value[idx.toString()]\n      } else throw new E.UnsuspectedHangeulNotFoundError(metadata, errMsg)\n    }\n    return module\n  }\n  const path = searchLiteral(metadata, literals, '.', utils)\n  if (!path) throw new E.UnsuspectedHangeulNotFoundError(metadata, errMsg)\n  return loadFromPath(path, utils)\n}\n\nfunction searchLiteral(\n  metadata: AS.Metadata,\n  literals: bigint[],\n  location: string,\n  utils: AS.LoadUtils\n): string | null {\n  if (literals.length === 0) {\n    return utils.isFile(location) ? location : null\n  }\n  const cur = literals[0]\n  const sub = literals.slice(1)\n\n  const subentries = utils.listdir(location)\n  const found = subentries\n    .map((entry) => {\n      if (!matchesLiteral(entry, cur)) return null\n      const searchPath = utils.joinPath(location, entry)\n      return searchLiteral(metadata, sub, searchPath, utils)\n    })\n    .filter((x) => x)\n\n  if (found.length > 1) {\n    throw new E.UnsuspectedHangeulImportError(\n      metadata,\n      `${location}에 정수 리터럴열 ${literals}에 맞는 모듈이 ` +\n        `${found.length}개 있어 모호합니다.`\n    )\n  }\n  return found.length ? found[0] : null\n}\n\nfunction matchesLiteral(string: string, literal: bigint) {\n  string = normalize(string).join(' ').trim()\n  try {\n    return parseNumber(string) === literal\n  } catch (e) {\n    return false\n  }\n}\n\ntype LeafData = number | AS.Evaluation | ModuleData\ninterface ModuleData extends Record<string, LeafData> {}\nfunction constructBuiltinModule(data: LeafData, keys: string[]) {\n  if (typeof data === 'function') {\n    return new AS.BuiltinModuleV(data, keys.join(' '))\n  } else if (typeof data === 'number') {\n    return new AS.FloatV(data) // ad-hoc\n  }\n  return constructBuiltinModules(data, keys)\n}\nfunction constructBuiltinModules(data: ModuleData, keys: string[]) {\n  let newObj: Record<string, AS.Value> = {}\n  for (const key in data) {\n    newObj[parseNumber(key).toString()] = constructBuiltinModule(\n      data[key],\n      keys.concat([key])\n    )\n  }\n  return new AS.DictV(newObj)\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _registerBuiltinModule(\n    builder: (\n      procFunctional: AS.ProcFunctionalFn,\n      strict: AS.StrictFn,\n      loadUtils: AS.LoadUtils\n    ) => ModuleTable\n  ) {\n    let module = builder(procFunctional, strict, loadUtils)\n    const _module = constructBuiltinModules(module, ['ㅂ'])\n    Object.assign(BUILTIN_MODULE_REGISTRY.value, _module.value)\n  }\n  BUILDERS.forEach(_registerBuiltinModule)\n\n  function _load(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkMinArity(metadata, argv, 1)\n    if (argv.every(isLiteralExpr)) {\n      var literals = argv.map((arg) => arg.expr.value)\n      return loadFromLiteral(metadata, literals, loadUtils)\n    }\n    checkArity(metadata, argv, 1)\n    const [filepath] = checkType(metadata, [strict(argv[0])], [AS.StringV])\n    return loadFromPath(filepath.str, loadUtils)\n  }\n\n  return {\n    ㅂ: _load,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, extractValue } from '../utils'\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n) {\n  function _wrap(\n    op: (...args: bigint[]) => bigint,\n    arity: number\n  ): AS.Evaluation {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, arity)\n      const _argv = checkType(metadata, argv.map(strict), [AS.IntegerV])\n      return new AS.IntegerV(op(..._argv.map(extractValue)))\n    }\n  }\n\n  return {\n    ㅂㄷ: {\n      ㄱ: _wrap((a, b) => a & b, 2),\n      ㄷ: _wrap((a, b) => a | b, 2),\n      ㅁ: _wrap((a) => ~a, 1),\n      ㅂ: _wrap((a, b) => a ^ b, 2),\n      ㅈ: _wrap((a, b) => a << b, 2),\n    },\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport {\n  checkArity,\n  checkType,\n  extractValue,\n  getLength,\n  matchDefaults,\n} from '../utils'\n\nfunction* slice<T>(arr: T[], start: number, end: number, step: number) {\n  const startIdx = start < 0 ? start + arr.length : start\n  const endIdx = end < 0 ? end + arr.length : end\n\n  if (step > 0) {\n    const _startIdx = Math.max(0, startIdx)\n    const _endIdx = Math.min(endIdx, arr.length)\n    for (let i = _startIdx; i < _endIdx; i += step) {\n      yield arr[i]\n    }\n  } else {\n    const _startIdx = Math.min(startIdx, arr.length - 1)\n    const _endIdx = Math.max(-1, endIdx)\n    for (let i = _startIdx; i > _endIdx; i += step) {\n      yield arr[i]\n    }\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _len(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const [seq] = checkType(metadata, argv.map(strict), [\n      ...AS.SequenceV,\n      AS.ErrorV,\n    ])\n    if (seq instanceof AS.BytesV) {\n      return new AS.IntegerV(BigInt(seq.value.byteLength))\n    }\n    return new AS.IntegerV(BigInt(seq.value.length))\n  }\n\n  function _slice(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3, 4])\n    const _argv = argv.map(strict)\n    const [seq] = checkType(metadata, [_argv[0]], AS.SequenceV)\n    const rest = checkType(metadata, _argv.slice(1), [AS.IntegerV])\n    const _rest = rest.map((arg) => Number(arg.value))\n    const [start, end, step] = matchDefaults(metadata, _rest, 3, [\n      getLength(seq.value),\n      1,\n    ])\n    if (step === 0) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        '0은 ㅂㅈ 함수의 네 번째 인수로 적합하지 않습니다.'\n      )\n    }\n\n    if (seq instanceof AS.ListV) {\n      const items = slice(seq.value, start, end, step)\n      return new AS.ListV(Array.from(items))\n    }\n    if (seq instanceof AS.StringV) {\n      const items = slice(seq.value, start, end, step)\n      return new AS.StringV(Array.from(items).join(''))\n    }\n    const _seq = Array.from(new Uint8Array(seq.value))\n    const sliced = slice(_seq, start, end, step)\n    return new AS.BytesV(new Uint8Array(sliced).buffer)\n  }\n\n  function _map(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const [seq] = checkType(metadata, [strict(argv[0])], [AS.ListV])\n    const fn = procFunctional(metadata, argv[1])\n    return new AS.ListV(seq.value.map((a) => fn(metadata, [a])))\n  }\n\n  function _filter(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const [seq] = checkType(metadata, [strict(argv[0])], [AS.ListV])\n    const fn = procFunctional(metadata, argv[1])\n\n    const fitCheck = seq.value.map((a) => fn(metadata, [a])).map(strict)\n    const fit = checkType(metadata, fitCheck, [AS.BooleanV]).map(extractValue)\n    return new AS.ListV(seq.value.filter((_, idx) => fit[idx]))\n  }\n\n  function _fold(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    let init: AS.Value | null = null\n    if (argv.length === 3) {\n      init = argv[1]\n      argv = [argv[0], argv[2]]\n    }\n\n    const first = strict(argv[0])\n    const fromRight = first instanceof AS.ListV\n    function maybeReversed<T>(arr: T[]): T[] {\n      if (!fromRight) return arr\n      return arr.slice().reverse()\n    }\n\n    argv = maybeReversed(argv)\n    const fn = procFunctional(metadata, argv[0])\n    const [seq] = checkType(metadata, [strict(argv[1])], [AS.ListV])\n\n    let feed = maybeReversed(seq.value)\n    if (init == null) {\n      init = feed[0]\n      feed = feed.slice(1)\n    }\n    return feed.reduce(function (acc, item) {\n      const args = maybeReversed([acc, item])\n      return fn(metadata, args)\n    }, init)\n  }\n\n  return {\n    ㅈㄷ: _len,\n    ㅂㅈ: _slice,\n    ㅁㄷ: _map,\n    ㅅㅂ: _filter,\n    ㅅㄹ: _fold,\n  }\n}\n","import * as AS from './abstractSyntax'\nimport * as E from './error'\nimport { encodeNumber } from './parse'\nimport { checkArity, checkType, isLiteralExpr } from './utils'\n\nimport buildArithmetics from './builtins/arithmetics'\nimport buildConstructors from './builtins/constructors'\nimport buildControl from './builtins/control'\nimport buildFunctional from './builtins/functional'\nimport buildIO from './builtins/io'\nimport buildLogic from './builtins/logic'\nimport buildModule from './builtins/module'\nimport buildSequence from './builtins/sequence'\nimport buildString from './builtins/string'\n\ntype BuiltinFunctionMap = Record<string, AS.Evaluation>\nconst BUILTINS: BuiltinFunctionMap = {}\nlet isBuilt = false\n\nconst _builders = [\n  buildArithmetics,\n  buildConstructors,\n  buildControl,\n  buildFunctional,\n  buildIO,\n  buildLogic,\n  buildModule,\n  buildSequence,\n  buildString,\n] as const\nfunction initBuiltins(loadUtils: AS.LoadUtils) {\n  if (isBuilt) return\n  for (const builder of _builders) {\n    Object.assign(BUILTINS, builder(procFunctional, strict, loadUtils))\n  }\n  isBuilt = true\n}\n\n/**\n * Finds the built-in function corresponding to the builtin function id.\n * @param metadata Caller's metadata.\n * @param id Built-in function ID.\n * @returns corresponding function that takes arguments.\n */\nfunction findBuiltin(\n  metadata: AS.Metadata,\n  id: number,\n  loadUtils: AS.LoadUtils\n) {\n  initBuiltins(loadUtils)\n  const inst = encodeNumber(id)\n  const builtinFun = BUILTINS[inst]\n  if (builtinFun) return builtinFun\n  throw new E.UnsuspectedHangeulNotFoundError(\n    metadata,\n    `${inst}이라는 이름의 기본 제공 함수를 찾지 못했습니다.`\n  )\n}\n\n/** Forces strict evaluation of the value */\nexport function strict(value: AS.Value): AS.StrictValue {\n  if (value instanceof AS.ExprV) {\n    if (value.cache) {\n      if (value.cache instanceof AS.UnsuspectedHangeulError) {\n        throw value.cache\n      }\n      return value.cache\n    }\n    try {\n      value.cache = strict(interpret(value.expr, value.env))\n      return value.cache\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) {\n        value.cache = error\n      }\n      throw error\n    }\n  }\n  return value\n}\n\nfunction _accessArray<T>(arr: T[], rel: number): T {\n  const idx = rel < 0 ? rel + arr.length : rel\n  if (idx < 0 || idx >= arr.length)\n    throw Error(`길이 ${arr.length}의 객체의 ${rel}번째 요소를 요청했습니다.`)\n  return arr[idx]\n}\nfunction _accessBuffer(buf: ArrayBuffer, rel: number): ArrayBuffer {\n  const idx = rel < 0 ? rel + buf.byteLength : rel\n  if (idx < 0 || idx >= buf.byteLength)\n    throw Error(\n      `길이 ${buf.byteLength}의 바이트열의 ${rel}번째 요소를 요청했습니다.`\n    )\n  return buf.slice(idx, idx + 1)\n}\n\n/** Evaluates the expression in given environment and returns a value */\nexport function interpret(expr: AS.AST, env: AS.Env) {\n  if (expr instanceof AS.Literal) {\n    return new AS.IntegerV(expr.value)\n  } else if (expr instanceof AS.FunRef) {\n    const fun = _accessArray(env.funs, -expr.rel - 1)\n    if (fun == null) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        '함수 참조의 범위를 벗어났습니다.'\n      )\n    }\n    return fun\n  } else if (expr instanceof AS.ArgRef) {\n    if (env.funs.length !== env.args.length) {\n      throw Error(\n        'Assertion Error: Environment has ' +\n          env.funs.length +\n          ' funs and ' +\n          env.args.length +\n          ' args.'\n      )\n    }\n    const args = _accessArray(env.args, -expr.relF - 1)\n    if (args == null) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        '존재하지 않는 함수에 대한 인수 참조를 시도했습니다.'\n      )\n    }\n    const relA = strict(interpret(expr.relA, env))\n    const [_relA] = checkType(expr.metadata, [relA], [AS.IntegerV])\n    const relAValue = _relA.value\n    if (relAValue < 0 || relAValue > args.length) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        `${relAValue}번째 인수를 참조하는데 ${args.length}개의 인수만 받았습니다.`\n      )\n    } else return args[Number(relAValue)]\n  } else if (expr instanceof AS.FunDef) {\n    var newFuns = env.funs.slice()\n    var newEnv = new AS.Env(newFuns, env.args, env.utils)\n    var closure = new AS.ClosureV(expr.body, newEnv)\n    newEnv.funs.push(closure)\n    return closure\n  } else if (expr instanceof AS.FunCall) {\n    var fun = new AS.ExprV(expr.fun, env, null)\n    var argv = expr.argv.map(function (arg) {\n      return new AS.ExprV(arg, env, null)\n    })\n    var recipe = procFunctional(expr.metadata, fun, true)\n    return recipe(expr.metadata, argv)\n  }\n  throw Error('Unexpected expression: ' + expr)\n}\n\n/**\n * Converts function-like values into functions.\n * @param metadata Caller's metadata.\n * @param fun A maybe-Expr value that may correspond to a function.\n * @param allow A list of types that are allowed for execution.\n * @returns A recipe function that receives argument list and returns the value.\n */\nexport function procFunctional(\n  metadata: AS.Metadata,\n  fun: AS.Value,\n  generalCallable: boolean = false\n): AS.Evaluation {\n  if (isLiteralExpr(fun))\n    return findBuiltin(metadata, Number(fun.expr.value), fun.env.utils)\n\n  const allow = generalCallable ? AS.CallableV : [AS.FunctionV]\n  const [_fun] = checkType(metadata, [strict(fun)], allow)\n\n  if (_fun instanceof AS.FunctionV) {\n    return _fun.execute.bind(_fun)\n  } else if (_fun instanceof AS.BooleanV) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 2)\n      return argv[_fun.value ? 0 : 1]\n    }\n  } else if (_fun instanceof AS.DictV) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 1)\n      const argKey = strict(argv[0]).asKey(strict)\n      const value = _fun.value[argKey]\n      if (value) return value\n      throw new E.UnsuspectedHangeulNotFoundError(\n        metadata,\n        `사전에 다음 표제가 없습니다: ${argKey}`\n      )\n    }\n  } else if (_fun instanceof AS.ComplexV) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 1)\n      const arg = strict(argv[0])\n      const [_arg] = checkType(metadata, [arg], [AS.IntegerV])\n      if (_arg.value === 0n || _arg.value === 1n) {\n        return new AS.FloatV(_fun.value.toVector()[Number(_arg.value)])\n      }\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `복소수 객체의 ${_arg.value}번째 요소를 접근하려고 했습니다.`\n      )\n    }\n  } else {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 1)\n      const arg = strict(argv[0])\n      const [_arg] = checkType(metadata, [arg], [AS.IntegerV])\n      const idx = Number(_arg.value)\n      try {\n        if (_fun instanceof AS.BytesV) {\n          return new AS.BytesV(_accessBuffer(_fun.value, idx))\n        }\n        if (_fun instanceof AS.StringV) {\n          return new AS.StringV(_accessArray(_fun.value, idx))\n        }\n        return _accessArray(_fun.value, idx)\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new E.UnsuspectedHangeulOutOfRangeError(metadata, error.message)\n        }\n        throw error\n      }\n    }\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, recursiveMap } from '../utils'\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _throw(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 1)\n    const [arg] = checkType(metadata, argv.map(strict), [AS.ErrorV])\n    throw new AS.UnsuspectedHangeulError(arg)\n  }\n  function _try(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    try {\n      return recursiveMap(argv[0], strict)\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) {\n        const fun = procFunctional(metadata, argv[1])\n        return fun(metadata, [error.err])\n      }\n      throw error\n    }\n  }\n\n  return {\n    ㄷㅈ: _throw,\n    ㅅㄷ: _try,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { eq, JSNumber } from '../numbers'\nimport { allEqual, checkArity, checkType, extractValue, isType } from '../utils'\n\nfunction _allNumbersEqual(nums: JSNumber[]) {\n  if (nums.length === 0) return true\n  return nums.slice(1).every((x) => eq(x, nums[0]))\n}\n\nfunction _allBytesEqual(buffers: ArrayBuffer[]) {\n  if (buffers.length === 0) return true\n  if (!allEqual(buffers.map((buf) => buf.byteLength))) return false\n  const len = buffers[0].byteLength\n  const views = buffers.map((buf) => new Uint8Array(buf))\n  for (let i = 0; i < len; i++) {\n    if (!allEqual(views.map((view) => view[i]))) return false\n  }\n  return true\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _listedEquals(arrs: AS.Value[][]): boolean {\n    if (arrs.length === 0) return true\n    if (!allEqual(arrs.map((arr) => arr.length))) return false\n    var len = arrs[0].length\n    for (var i = 0; i < len; i++) {\n      // compare among tiers\n      if (!_valueEquals(arrs.map((arr) => arr[i])).value) return false\n    }\n    return true\n  }\n\n  function _dictEquals(dicts: AS.DictV[]): boolean {\n    if (dicts.length === 0) return true\n    const keys = dicts.map((d) => d.keys())\n    if (!_listedEquals(keys.map((ks) => ks.map((k) => new AS.StringV(k)))))\n      return false\n    const values = keys[0].map((k) => dicts.map((d) => d.value[k]))\n    return values.map(_valueEquals).every(extractValue)\n  }\n\n  function _valueEquals(argv: AS.Value[]) {\n    const _argv = argv.map(strict)\n    if (isType(_argv, [AS.FunctionV])) {\n      return new AS.BooleanV(allEqual(_argv))\n    } else if (isType(_argv, [AS.DictV])) {\n      return new AS.BooleanV(_dictEquals(_argv))\n    } else if (isType(_argv, [AS.IOV])) {\n      if (!allEqual(_argv.map((arg) => arg.inst))) return new AS.BooleanV(false)\n      return new AS.BooleanV(_listedEquals(_argv.map((arg) => arg.argv)))\n    } else if (isType(_argv, AS.NumberV)) {\n      return new AS.BooleanV(_allNumbersEqual(_argv.map((arg) => arg.value)))\n    } else if (isType(_argv, [AS.ListV, AS.ErrorV])) {\n      return new AS.BooleanV(_listedEquals(_argv.map(extractValue)))\n    } else if (isType(_argv, [AS.BytesV])) {\n      return new AS.BooleanV(_allBytesEqual(_argv.map(extractValue)))\n    } else if (isType(_argv, [AS.StringV])) {\n      return new AS.BooleanV(allEqual(_argv.map((x) => x.str)))\n    } else if (isType(_argv, [AS.BooleanV])) {\n      return new AS.BooleanV(allEqual(_argv.map(extractValue)))\n    } else if (isType(_argv, [AS.NilV])) {\n      return new AS.BooleanV(true)\n    }\n    return new AS.BooleanV(false)\n  }\n\n  function _equals(metadata: AS.Metadata, argv: AS.Value[]) {\n    return _valueEquals(argv)\n  }\n\n  function _negate(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const _argv = checkType(metadata, argv.map(strict), [AS.BooleanV])\n    return new AS.BooleanV(!_argv[0].value)\n  }\n\n  function _lessThan(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(strict), AS.RealV)\n    return new AS.BooleanV(_argv[0].value < _argv[1].value)\n  }\n\n  function _true(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.BooleanV(true)\n  }\n\n  function _false(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.BooleanV(false)\n  }\n\n  return {\n    ㄴ: _equals,\n    ㅁ: _negate,\n    ㅈ: _lessThan,\n    ㅈㅈ: _true,\n    ㄱㅈ: _false,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, joinArrayBuffer } from '../utils'\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _split(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [AS.StringV, AS.BytesV])\n    if (_argv[0] instanceof AS.StringV) {\n      const __argv = checkType(metadata, _argv, [AS.StringV])\n      const src = __argv[0].str\n      const delimiter = __argv.length > 1 ? __argv[1].str : ''\n      const pieces = src.split(delimiter)\n      return new AS.ListV(pieces.map((piece) => new AS.StringV(piece)))\n    }\n    const __argv = checkType(metadata, _argv, [AS.BytesV])\n    const src = String.fromCharCode(...new Uint8Array(__argv[0].value))\n    const delimiter =\n      __argv.length > 1\n        ? String.fromCharCode(...new Uint8Array(__argv[1].value))\n        : ''\n    const pieces = src.split(delimiter)\n    const buf = pieces.map(\n      (piece) =>\n        new AS.BytesV(\n          new Uint8Array(piece.split('').map((c) => c.charCodeAt(0))).buffer\n        )\n    )\n    return new AS.ListV(buf)\n  }\n\n  function _join(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n\n    const [seq] = checkType(metadata, [strict(argv[0])], [AS.ListV])\n    const pieces = checkType(metadata, seq.value.map(strict), [\n      AS.StringV,\n      AS.BytesV,\n    ])\n\n    if (pieces[0] instanceof AS.StringV) {\n      const _pieces = checkType(metadata, pieces, [AS.StringV])\n      const delimiter = argv.length > 1 ? strict(argv[1]) : new AS.StringV('')\n      const [_delimiter] = checkType(metadata, [delimiter], [AS.StringV])\n      return new AS.StringV(_pieces.map((x) => x.str).join(_delimiter.str))\n    }\n\n    const _pieces = checkType(metadata, pieces, [AS.BytesV])\n    const delimiter =\n      argv.length > 1 ? strict(argv[1]) : new AS.BytesV(new ArrayBuffer(0))\n    const [_delimiter] = checkType(metadata, [delimiter], [AS.BytesV])\n\n    if (_pieces.length === 0) return new AS.BytesV(new ArrayBuffer(0))\n    const buffers = [_pieces[0].value]\n    for (const piece of _pieces.slice(1)) {\n      buffers.push(_delimiter.value)\n      buffers.push(piece.value)\n    }\n    return new AS.BytesV(joinArrayBuffer(buffers))\n  }\n\n  return {\n    ㅂㄹ: _split,\n    ㄱㅁ: _join,\n  }\n}\n","import * as AS from './abstractSyntax'\nimport { interpret, procFunctional, strict } from './interpret'\nimport { parse } from './parse'\nimport { checkType } from './utils'\n\n/** Receives an IOV and produces non-IOV non-ExprV value. */\nasync function doIO(\n  value: AS.StrictValue,\n  ioUtils: AS.IOUtils\n): Promise<AS.NonIOStrictValue> {\n  const _doIO = (value: AS.StrictValue) => doIO(value, ioUtils)\n  while (value instanceof AS.IOV) {\n    value = await value.continuation(_doIO, ioUtils)\n  }\n  return value\n}\n\n/** Converts the value into string for display */\nasync function toString(\n  value: AS.Value,\n  strict: (v: AS.Value) => AS.StrictValue,\n  ioUtils: AS.IOUtils,\n  formatIO: boolean\n): Promise<string> {\n  const _partial = (v: AS.Value) => toString(v, strict, ioUtils, formatIO)\n  value = strict(value)\n  if (value instanceof AS.IOV) {\n    value = await doIO(value, ioUtils)\n    const formatted = await _partial(value)\n    return formatIO ? 'IO(' + formatted + ')' : formatted\n  }\n\n  if (value instanceof AS.ListV) {\n    return '[' + (await Promise.all(value.value.map(_partial))).join(', ') + ']'\n  }\n  if (value instanceof AS.DictV) {\n    const d = value.value\n    const keys = value.keys()\n    const pairs = await Promise.all(\n      keys.map(async (k) => k + ': ' + (await _partial(d[k])))\n    )\n    return '{' + pairs.join(', ') + '}'\n  }\n  if (value instanceof AS.ErrorV) {\n    const argvStr = (await Promise.all(value.value.map(_partial))).join(', ')\n    return '<예외: [' + argvStr + ']>'\n  }\n  return value.format(strict)\n}\n\n/** Main procedure. Parses, evaluates, and converts to str.\n * @param filename File name of the program\n * @param program raw string that encodes a program\n * @returns A string representing the resulting value */\nexport async function main(\n  filename: string,\n  program: string,\n  ioUtils: AS.IOUtils,\n  loadUtils: AS.LoadUtils,\n  formatIO = true\n): Promise<string[]> {\n  const exprs = parse(filename, program)\n  const env = new AS.Env([], [], loadUtils)\n  const values = exprs.map((expr) => interpret(expr, env))\n  return Promise.all(values.map((v) => toString(v, strict, ioUtils, formatIO)))\n}\n\n/** Main procedure. Parses, evaluates, and converts to str.\n * @param filename File name of the program\n * @param program raw string that encodes a program\n * @returns A string representing the resulting value */\nexport async function run(\n  filename: string,\n  program: string,\n  argv: string[],\n  ioUtils: AS.IOUtils,\n  loadUtils: AS.LoadUtils\n): Promise<number> {\n  const metadata = new AS.Metadata('<main>', 0, 0, 0, '')\n  const args = argv.map((arg) => new AS.StringV(arg))\n\n  const exprs = parse(filename, program)\n  if (exprs.length === 0) return 0\n  if (exprs.length > 1) {\n    const error = new AS.ErrorV(\n      exprs.map((expr) => expr.metadata),\n      `모듈에는 표현식이 하나만 있어야 하는데 ${exprs.length}개가 있습니다.`,\n      []\n    )\n    throw new AS.UnsuspectedHangeulError(error)\n  }\n\n  const env = new AS.Env([], [], loadUtils)\n  let value = strict(interpret(exprs[0], env))\n\n  if (value instanceof AS.FunctionV) {\n    const recipe = procFunctional(metadata, value)\n    value = strict(recipe(metadata, args))\n  }\n\n  if (value instanceof AS.IOV) {\n    value = await doIO(value, ioUtils)\n  }\n\n  const [exitCode] = checkType(metadata, [value], [AS.IntegerV, AS.NilV])\n  if (exitCode instanceof AS.NilV) return 0\n  return Number(exitCode.value)\n}\n"],"names":["eaw","stringToArray","string","match","module","exports","eastAsianWidth","character","x","charCodeAt","y","length","codePoint","characterLength","code","this","characters","len","i","slice","text","start","end","textLen","result","eawLen","chars","char","charLen","root","cosh","Math","abs","exp","sinh","parser_exit","SyntaxError","logHypot","a","b","_a","_b","log","LN2","Complex","z","re","im","undefined","Number","isFinite","cos","sin","tokens","plus","minus","c","isNaN","parseFloat","parse","prototype","sign","add","sub","mul","div","t","d","pow","arg","atan2","loh","sqrt","r","tmp","expm1","PI","xx","cosm1","tan","cot","sec","csc","asin","t1","t2","acos","atan","Infinity","acot","asec","acsc","tanh","coth","csch","sech","asinh","res","acosh","atanh","noIM","oneMinus","onePlus","temp","acoth","acsch","asech","inverse","conjugate","neg","ceil","places","floor","round","equals","clone","toString","ret","toVector","valueOf","isZero","isInfinite","E","NaN","Object","defineProperty","value","toComplex","num","arrayToInt","bigEndianArr","radix","TABLE","_radix","BigInt","arr","toLowerCase","split","map","indexOf","invalidIdx","Error","isinf","isnan","isInteger","complexEq","complexValue","numberValue","bigIntEq","bigIntValue","realValue","eq","isclose","rel_tol","abs_tol","RangeError","diff","complexAdd","complexMul","trunc","Metadata","constructor","filename","line_no","start_col","end_col","line","str","repeat","EastAsianWidth","Literal","metadata","FunRef","rel","ArgRef","relA","relF","FunDef","body","FunCall","fun","argv","Env","funs","args","utils","UnsuspectedHangeulError","err","message","metadatas","super","ValueBase","asKey","strict","format","_formatFloat","IntegerV","typeName","FloatV","ComplexV","reStr","BooleanV","ListV","join","StringV","Array","from","BytesV","formatByte","toUpperCase","formatted","Uint8Array","DictV","_keys","_values","keys","sort","values","k","v","IOV","inst","continuation","NilV","FUNCTION_ID_GEN","FunctionV","adj","id","replace","ClosureV","env","execute","newArgs","concat","newEnv","ExprV","BuiltinModuleV","name","ErrorV","expr","cache","RealV","NumberV","SequenceV","CallableV","U1100","JAMO","U3165","UA960","normalizeChar","_get","ref","divisor","idx","normalize","sentence","parseNumber","s","varlen","reverse","encodeNumber","number","isNegative","encoded","parseToken","token","stack","word","arity","_arity","pop","push","AS","splice","trailer","flatMap","j","filter","cur","top","prev","prevMetadata","tokenize","UnsuspectedHangeulBuiltinError","codes","UnsuspectedHangeulOSError","UnsuspectedHangeulArithmeticError","UnsuspectedHangeulSyntaxError","UnsuspectedHangeulTypeError","UnsuspectedHangeulValueError","UnsuspectedHangeulDivisionError","UnsuspectedHangeulNotFoundError","UnsuspectedHangeulImportError","UnsuspectedHangeulOutOfRangeError","isLiteralExpr","extractValue","joinArrayBuffer","bufs","size","byteLength","reduce","newBuf","ArrayBuffer","view","buf","set","recursiveMap","item","fn","_item","forEach","allEqual","every","isType","desiredTypes","some","desiredType","_formatArray","conj","checkType","desiredTypeNames","argTypeNames","content","particleBatchim","particleNoBatchim","lastCode","josa","checkArity","desiredArities","arities","isArray","checkMinArity","minimumArity","checkMaxArity","maximumArity","matchDefaults","defaults","wrapNumber","_parseStrToNumber","_argv","PipeV","f","CollectV","seq","_seq","SpreadV","MODE_TABLE","ㄹ","ㅈㄹ","ㅈㄱ","ㄹㅈㄹ","ㅈㄹㄹ","ㅈㄱㄹ","FileV","file","command","commandStr","close","read","write","seekOrTell","truncate","_this","async","doIO","ioUtils","error","_this2","count","_this3","_this4","tell","offset","whence","_whence","pos","seek","_this5","newSize","CODEC_TBL","Codec","scheme","numBytes","bigEndian","endianness","codec","_scheme","_numBytes","_bigEndian","getCodec","unicodeCodec","integerCodec","floatingPointCodec","encoder","TextEncoder","encode","buffer","codePointAt","unshift","_set","setUint8","bind","setUint16","setUint32","_write","DataView","_this$bigEndian","decoder","TextDecoder","decode","setInt16","Int16Array","_isBigEndianSystem","getter","getUint32","getUint16","guessBigEndian","getUint8","_read","String","fromCodePoint","signed","integer","bound","isExpressible","littleEndianArr","intToArray","u8","n","EvalError","_rountToInf","_rountToEven","rounded","_wrapType","type","BUILDERS","procFunctional","loadUtils","_wrap","op","ㅂㄷ","ㄱ","ㄷ","ㅁ","ㅂ","ㅈ","_fn","retWrapper","argType","_wrap2","fnName","_wrapRound","_rounder","_arg","_atan1","_atan2","ㅅ","ㄴ","ㄴㄴ","ㅁㄴ","ㅈㄷ","ㄹㄱ","ㅅㄴ","ㄴㅅ","ㄱㅅ","ㅅㄱ","ㄷㄴ","ㄴㄷ","ㅂㄹ","MODULE_REGISTRY","BUILTIN_MODULE_REGISTRY","loadFromPath","path","normalizePath","exprs","load","loadFromLiteral","literals","errMsg","searchLiteral","location","isFile","found","listdir","entry","literal","trim","e","matchesLiteral","searchPath","joinPath","constructBuiltinModule","data","constructBuiltinModules","newObj","key","step","startIdx","endIdx","_startIdx","max","_endIdx","min","BUILTINS","isBuilt","_builders","first","assign","base","mod","exponent","modulo","g","_","x_old","y_old","quotient","extendedGcd","modularInverse","modPow","bReal","ㄴㅁ","ㅅㅈ","ㅁㄹ","ㅁㅈ","ㅈㅅ","digits","ㅅㅅ","splitted","significant","_significant","ㅂㅅ","ㅂㄱ","ㄷㅂ","ㄷㅈ","ㅅㄷ","_proc","ㄴㄱ","ㅁㅂ","ㅂㅂ","input","print","ㄱㄹ","ioToBind","_result","ㄱㄴ","_path","mode","modeStr","_mode","open","_listedEquals","arrs","_valueEquals","dicts","ks","_dictEquals","nums","buffers","views","_allBytesEqual","ㅈㅈ","ㄱㅈ","builder","_module","filepath","ㅂㅈ","_rest","items","sliced","ㅁㄷ","ㅅㅂ","fitCheck","fit","ㅅㄹ","init","fromRight","maybeReversed","feed","acc","__argv","pieces","piece","src","fromCharCode","delimiter","ㄱㅁ","_pieces","_delimiter","interpret","_accessArray","_relA","relAValue","newFuns","closure","recipe","generalCallable","initBuiltins","builtinFun","findBuiltin","allow","_fun","argKey","_accessBuffer","_doIO","formatIO","_partial","Promise","all","main","program","run","exitCode"],"mappings":"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KACpC,KAAUA,GAAaA,GAAa,KACpC,KAAUA,GAAaA,GAAa,KACpC,KAAUA,GAAaA,GAAa,KACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,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"}