{"version":3,"file":"pbhhg.cjs","sources":["../../node_modules/eastasianwidth/eastasianwidth.js","../../node_modules/complex.js/complex.js","../src/numbers.ts","../src/abstractSyntax.ts","../src/parse.ts","../src/error.ts","../src/utils.ts","../src/builtins/arithmetics.ts","../src/builtins/constructors.ts","../src/builtins/functional.ts","../src/builtins/io.ts","../src/modules/byte.ts","../src/modules/math.ts","../src/builtins/module.ts","../src/modules/bitwise.ts","../src/builtins/sequence.ts","../src/interpret.ts","../src/builtins/control.ts","../src/builtins/logic.ts","../src/builtins/string.ts","../src/main.ts"],"sourcesContent":["var eaw = {};\n\nif ('undefined' == typeof module) {\n  window.eastasianwidth = eaw;\n} else {\n  module.exports = eaw;\n}\n\neaw.eastAsianWidth = function(character) {\n  var x = character.charCodeAt(0);\n  var y = (character.length == 2) ? character.charCodeAt(1) : 0;\n  var codePoint = x;\n  if ((0xD800 <= x && x <= 0xDBFF) && (0xDC00 <= y && y <= 0xDFFF)) {\n    x &= 0x3FF;\n    y &= 0x3FF;\n    codePoint = (x << 10) | y;\n    codePoint += 0x10000;\n  }\n\n  if ((0x3000 == codePoint) ||\n      (0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n      (0xFFE0 <= codePoint && codePoint <= 0xFFE6)) {\n    return 'F';\n  }\n  if ((0x20A9 == codePoint) ||\n      (0xFF61 <= codePoint && codePoint <= 0xFFBE) ||\n      (0xFFC2 <= codePoint && codePoint <= 0xFFC7) ||\n      (0xFFCA <= codePoint && codePoint <= 0xFFCF) ||\n      (0xFFD2 <= codePoint && codePoint <= 0xFFD7) ||\n      (0xFFDA <= codePoint && codePoint <= 0xFFDC) ||\n      (0xFFE8 <= codePoint && codePoint <= 0xFFEE)) {\n    return 'H';\n  }\n  if ((0x1100 <= codePoint && codePoint <= 0x115F) ||\n      (0x11A3 <= codePoint && codePoint <= 0x11A7) ||\n      (0x11FA <= codePoint && codePoint <= 0x11FF) ||\n      (0x2329 <= codePoint && codePoint <= 0x232A) ||\n      (0x2E80 <= codePoint && codePoint <= 0x2E99) ||\n      (0x2E9B <= codePoint && codePoint <= 0x2EF3) ||\n      (0x2F00 <= codePoint && codePoint <= 0x2FD5) ||\n      (0x2FF0 <= codePoint && codePoint <= 0x2FFB) ||\n      (0x3001 <= codePoint && codePoint <= 0x303E) ||\n      (0x3041 <= codePoint && codePoint <= 0x3096) ||\n      (0x3099 <= codePoint && codePoint <= 0x30FF) ||\n      (0x3105 <= codePoint && codePoint <= 0x312D) ||\n      (0x3131 <= codePoint && codePoint <= 0x318E) ||\n      (0x3190 <= codePoint && codePoint <= 0x31BA) ||\n      (0x31C0 <= codePoint && codePoint <= 0x31E3) ||\n      (0x31F0 <= codePoint && codePoint <= 0x321E) ||\n      (0x3220 <= codePoint && codePoint <= 0x3247) ||\n      (0x3250 <= codePoint && codePoint <= 0x32FE) ||\n      (0x3300 <= codePoint && codePoint <= 0x4DBF) ||\n      (0x4E00 <= codePoint && codePoint <= 0xA48C) ||\n      (0xA490 <= codePoint && codePoint <= 0xA4C6) ||\n      (0xA960 <= codePoint && codePoint <= 0xA97C) ||\n      (0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n      (0xD7B0 <= codePoint && codePoint <= 0xD7C6) ||\n      (0xD7CB <= codePoint && codePoint <= 0xD7FB) ||\n      (0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n      (0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n      (0xFE30 <= codePoint && codePoint <= 0xFE52) ||\n      (0xFE54 <= codePoint && codePoint <= 0xFE66) ||\n      (0xFE68 <= codePoint && codePoint <= 0xFE6B) ||\n      (0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n      (0x1F200 <= codePoint && codePoint <= 0x1F202) ||\n      (0x1F210 <= codePoint && codePoint <= 0x1F23A) ||\n      (0x1F240 <= codePoint && codePoint <= 0x1F248) ||\n      (0x1F250 <= codePoint && codePoint <= 0x1F251) ||\n      (0x20000 <= codePoint && codePoint <= 0x2F73F) ||\n      (0x2B740 <= codePoint && codePoint <= 0x2FFFD) ||\n      (0x30000 <= codePoint && codePoint <= 0x3FFFD)) {\n    return 'W';\n  }\n  if ((0x0020 <= codePoint && codePoint <= 0x007E) ||\n      (0x00A2 <= codePoint && codePoint <= 0x00A3) ||\n      (0x00A5 <= codePoint && codePoint <= 0x00A6) ||\n      (0x00AC == codePoint) ||\n      (0x00AF == codePoint) ||\n      (0x27E6 <= codePoint && codePoint <= 0x27ED) ||\n      (0x2985 <= codePoint && codePoint <= 0x2986)) {\n    return 'Na';\n  }\n  if ((0x00A1 == codePoint) ||\n      (0x00A4 == codePoint) ||\n      (0x00A7 <= codePoint && codePoint <= 0x00A8) ||\n      (0x00AA == codePoint) ||\n      (0x00AD <= codePoint && codePoint <= 0x00AE) ||\n      (0x00B0 <= codePoint && codePoint <= 0x00B4) ||\n      (0x00B6 <= codePoint && codePoint <= 0x00BA) ||\n      (0x00BC <= codePoint && codePoint <= 0x00BF) ||\n      (0x00C6 == codePoint) ||\n      (0x00D0 == codePoint) ||\n      (0x00D7 <= codePoint && codePoint <= 0x00D8) ||\n      (0x00DE <= codePoint && codePoint <= 0x00E1) ||\n      (0x00E6 == codePoint) ||\n      (0x00E8 <= codePoint && codePoint <= 0x00EA) ||\n      (0x00EC <= codePoint && codePoint <= 0x00ED) ||\n      (0x00F0 == codePoint) ||\n      (0x00F2 <= codePoint && codePoint <= 0x00F3) ||\n      (0x00F7 <= codePoint && codePoint <= 0x00FA) ||\n      (0x00FC == codePoint) ||\n      (0x00FE == codePoint) ||\n      (0x0101 == codePoint) ||\n      (0x0111 == codePoint) ||\n      (0x0113 == codePoint) ||\n      (0x011B == codePoint) ||\n      (0x0126 <= codePoint && codePoint <= 0x0127) ||\n      (0x012B == codePoint) ||\n      (0x0131 <= codePoint && codePoint <= 0x0133) ||\n      (0x0138 == codePoint) ||\n      (0x013F <= codePoint && codePoint <= 0x0142) ||\n      (0x0144 == codePoint) ||\n      (0x0148 <= codePoint && codePoint <= 0x014B) ||\n      (0x014D == codePoint) ||\n      (0x0152 <= codePoint && codePoint <= 0x0153) ||\n      (0x0166 <= codePoint && codePoint <= 0x0167) ||\n      (0x016B == codePoint) ||\n      (0x01CE == codePoint) ||\n      (0x01D0 == codePoint) ||\n      (0x01D2 == codePoint) ||\n      (0x01D4 == codePoint) ||\n      (0x01D6 == codePoint) ||\n      (0x01D8 == codePoint) ||\n      (0x01DA == codePoint) ||\n      (0x01DC == codePoint) ||\n      (0x0251 == codePoint) ||\n      (0x0261 == codePoint) ||\n      (0x02C4 == codePoint) ||\n      (0x02C7 == codePoint) ||\n      (0x02C9 <= codePoint && codePoint <= 0x02CB) ||\n      (0x02CD == codePoint) ||\n      (0x02D0 == codePoint) ||\n      (0x02D8 <= codePoint && codePoint <= 0x02DB) ||\n      (0x02DD == codePoint) ||\n      (0x02DF == codePoint) ||\n      (0x0300 <= codePoint && codePoint <= 0x036F) ||\n      (0x0391 <= codePoint && codePoint <= 0x03A1) ||\n      (0x03A3 <= codePoint && codePoint <= 0x03A9) ||\n      (0x03B1 <= codePoint && codePoint <= 0x03C1) ||\n      (0x03C3 <= codePoint && codePoint <= 0x03C9) ||\n      (0x0401 == codePoint) ||\n      (0x0410 <= codePoint && codePoint <= 0x044F) ||\n      (0x0451 == codePoint) ||\n      (0x2010 == codePoint) ||\n      (0x2013 <= codePoint && codePoint <= 0x2016) ||\n      (0x2018 <= codePoint && codePoint <= 0x2019) ||\n      (0x201C <= codePoint && codePoint <= 0x201D) ||\n      (0x2020 <= codePoint && codePoint <= 0x2022) ||\n      (0x2024 <= codePoint && codePoint <= 0x2027) ||\n      (0x2030 == codePoint) ||\n      (0x2032 <= codePoint && codePoint <= 0x2033) ||\n      (0x2035 == codePoint) ||\n      (0x203B == codePoint) ||\n      (0x203E == codePoint) ||\n      (0x2074 == codePoint) ||\n      (0x207F == codePoint) ||\n      (0x2081 <= codePoint && codePoint <= 0x2084) ||\n      (0x20AC == codePoint) ||\n      (0x2103 == codePoint) ||\n      (0x2105 == codePoint) ||\n      (0x2109 == codePoint) ||\n      (0x2113 == codePoint) ||\n      (0x2116 == codePoint) ||\n      (0x2121 <= codePoint && codePoint <= 0x2122) ||\n      (0x2126 == codePoint) ||\n      (0x212B == codePoint) ||\n      (0x2153 <= codePoint && codePoint <= 0x2154) ||\n      (0x215B <= codePoint && codePoint <= 0x215E) ||\n      (0x2160 <= codePoint && codePoint <= 0x216B) ||\n      (0x2170 <= codePoint && codePoint <= 0x2179) ||\n      (0x2189 == codePoint) ||\n      (0x2190 <= codePoint && codePoint <= 0x2199) ||\n      (0x21B8 <= codePoint && codePoint <= 0x21B9) ||\n      (0x21D2 == codePoint) ||\n      (0x21D4 == codePoint) ||\n      (0x21E7 == codePoint) ||\n      (0x2200 == codePoint) ||\n      (0x2202 <= codePoint && codePoint <= 0x2203) ||\n      (0x2207 <= codePoint && codePoint <= 0x2208) ||\n      (0x220B == codePoint) ||\n      (0x220F == codePoint) ||\n      (0x2211 == codePoint) ||\n      (0x2215 == codePoint) ||\n      (0x221A == codePoint) ||\n      (0x221D <= codePoint && codePoint <= 0x2220) ||\n      (0x2223 == codePoint) ||\n      (0x2225 == codePoint) ||\n      (0x2227 <= codePoint && codePoint <= 0x222C) ||\n      (0x222E == codePoint) ||\n      (0x2234 <= codePoint && codePoint <= 0x2237) ||\n      (0x223C <= codePoint && codePoint <= 0x223D) ||\n      (0x2248 == codePoint) ||\n      (0x224C == codePoint) ||\n      (0x2252 == codePoint) ||\n      (0x2260 <= codePoint && codePoint <= 0x2261) ||\n      (0x2264 <= codePoint && codePoint <= 0x2267) ||\n      (0x226A <= codePoint && codePoint <= 0x226B) ||\n      (0x226E <= codePoint && codePoint <= 0x226F) ||\n      (0x2282 <= codePoint && codePoint <= 0x2283) ||\n      (0x2286 <= codePoint && codePoint <= 0x2287) ||\n      (0x2295 == codePoint) ||\n      (0x2299 == codePoint) ||\n      (0x22A5 == codePoint) ||\n      (0x22BF == codePoint) ||\n      (0x2312 == codePoint) ||\n      (0x2460 <= codePoint && codePoint <= 0x24E9) ||\n      (0x24EB <= codePoint && codePoint <= 0x254B) ||\n      (0x2550 <= codePoint && codePoint <= 0x2573) ||\n      (0x2580 <= codePoint && codePoint <= 0x258F) ||\n      (0x2592 <= codePoint && codePoint <= 0x2595) ||\n      (0x25A0 <= codePoint && codePoint <= 0x25A1) ||\n      (0x25A3 <= codePoint && codePoint <= 0x25A9) ||\n      (0x25B2 <= codePoint && codePoint <= 0x25B3) ||\n      (0x25B6 <= codePoint && codePoint <= 0x25B7) ||\n      (0x25BC <= codePoint && codePoint <= 0x25BD) ||\n      (0x25C0 <= codePoint && codePoint <= 0x25C1) ||\n      (0x25C6 <= codePoint && codePoint <= 0x25C8) ||\n      (0x25CB == codePoint) ||\n      (0x25CE <= codePoint && codePoint <= 0x25D1) ||\n      (0x25E2 <= codePoint && codePoint <= 0x25E5) ||\n      (0x25EF == codePoint) ||\n      (0x2605 <= codePoint && codePoint <= 0x2606) ||\n      (0x2609 == codePoint) ||\n      (0x260E <= codePoint && codePoint <= 0x260F) ||\n      (0x2614 <= codePoint && codePoint <= 0x2615) ||\n      (0x261C == codePoint) ||\n      (0x261E == codePoint) ||\n      (0x2640 == codePoint) ||\n      (0x2642 == codePoint) ||\n      (0x2660 <= codePoint && codePoint <= 0x2661) ||\n      (0x2663 <= codePoint && codePoint <= 0x2665) ||\n      (0x2667 <= codePoint && codePoint <= 0x266A) ||\n      (0x266C <= codePoint && codePoint <= 0x266D) ||\n      (0x266F == codePoint) ||\n      (0x269E <= codePoint && codePoint <= 0x269F) ||\n      (0x26BE <= codePoint && codePoint <= 0x26BF) ||\n      (0x26C4 <= codePoint && codePoint <= 0x26CD) ||\n      (0x26CF <= codePoint && codePoint <= 0x26E1) ||\n      (0x26E3 == codePoint) ||\n      (0x26E8 <= codePoint && codePoint <= 0x26FF) ||\n      (0x273D == codePoint) ||\n      (0x2757 == codePoint) ||\n      (0x2776 <= codePoint && codePoint <= 0x277F) ||\n      (0x2B55 <= codePoint && codePoint <= 0x2B59) ||\n      (0x3248 <= codePoint && codePoint <= 0x324F) ||\n      (0xE000 <= codePoint && codePoint <= 0xF8FF) ||\n      (0xFE00 <= codePoint && codePoint <= 0xFE0F) ||\n      (0xFFFD == codePoint) ||\n      (0x1F100 <= codePoint && codePoint <= 0x1F10A) ||\n      (0x1F110 <= codePoint && codePoint <= 0x1F12D) ||\n      (0x1F130 <= codePoint && codePoint <= 0x1F169) ||\n      (0x1F170 <= codePoint && codePoint <= 0x1F19A) ||\n      (0xE0100 <= codePoint && codePoint <= 0xE01EF) ||\n      (0xF0000 <= codePoint && codePoint <= 0xFFFFD) ||\n      (0x100000 <= codePoint && codePoint <= 0x10FFFD)) {\n    return 'A';\n  }\n\n  return 'N';\n};\n\neaw.characterLength = function(character) {\n  var code = this.eastAsianWidth(character);\n  if (code == 'F' || code == 'W' || code == 'A') {\n    return 2;\n  } else {\n    return 1;\n  }\n};\n\n// Split a string considering surrogate-pairs.\nfunction stringToArray(string) {\n  return string.match(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[^\\uD800-\\uDFFF]/g) || [];\n}\n\neaw.length = function(string) {\n  var characters = stringToArray(string);\n  var len = 0;\n  for (var i = 0; i < characters.length; i++) {\n    len = len + this.characterLength(characters[i]);\n  }\n  return len;\n};\n\neaw.slice = function(text, start, end) {\n  textLen = eaw.length(text)\n  start = start ? start : 0;\n  end = end ? end : 1;\n  if (start < 0) {\n      start = textLen + start;\n  }\n  if (end < 0) {\n      end = textLen + end;\n  }\n  var result = '';\n  var eawLen = 0;\n  var chars = stringToArray(text);\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n    var charLen = eaw.length(char);\n    if (eawLen >= start - (charLen == 2 ? 1 : 0)) {\n        if (eawLen + charLen <= end) {\n            result += char;\n        } else {\n            break;\n        }\n    }\n    eawLen += charLen;\n  }\n  return result;\n};\n","/**\n * @license Complex.js v2.1.1 12/05/2020\n *\n * Copyright (c) 2020, Robert Eisele (robert@xarg.org)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n **/\n\n/**\n *\n * This class allows the manipulation of complex numbers.\n * You can pass a complex number in different formats. Either as object, double, string or two integer parameters.\n *\n * Object form\n * { re: <real>, im: <imaginary> }\n * { arg: <angle>, abs: <radius> }\n * { phi: <angle>, r: <radius> }\n *\n * Array / Vector form\n * [ real, imaginary ]\n *\n * Double form\n * 99.3 - Single double value\n *\n * String form\n * '23.1337' - Simple real number\n * '15+3i' - a simple complex number\n * '3-i' - a simple complex number\n *\n * Example:\n *\n * var c = new Complex('99.3+8i');\n * c.mul({r: 3, i: 9}).div(4.9).sub(3, 2);\n *\n */\n\n(function(root) {\n\n  'use strict';\n\n  var cosh = Math.cosh || function(x) {\n    return Math.abs(x) < 1e-9 ? 1 - x : (Math.exp(x) + Math.exp(-x)) * 0.5;\n  };\n\n  var sinh = Math.sinh || function(x) {\n    return Math.abs(x) < 1e-9 ? x : (Math.exp(x) - Math.exp(-x)) * 0.5;\n  };\n\n  /**\n   * Calculates cos(x) - 1 using Taylor series if x is small (-¼π ≤ x ≤ ¼π).\n   *\n   * @param {number} x\n   * @returns {number} cos(x) - 1\n   */\n  var cosm1 = function(x) {\n\n    var b = Math.PI / 4;\n    if (-b > x || x > b) {\n      return Math.cos(x) - 1.0;\n    }\n\n    /* Calculate horner form of polynomial of taylor series in Q\n    var fac = 1, alt = 1, pol = {};\n    for (var i = 0; i <= 16; i++) {\n      fac*= i || 1;\n      if (i % 2 == 0) {\n        pol[i] = new Fraction(1, alt * fac);\n        alt = -alt;\n      }\n    }\n    console.log(new Polynomial(pol).toHorner()); // (((((((1/20922789888000x^2-1/87178291200)x^2+1/479001600)x^2-1/3628800)x^2+1/40320)x^2-1/720)x^2+1/24)x^2-1/2)x^2+1\n    */\n\n    var xx = x * x;\n    return xx * (\n      xx * (\n        xx * (\n          xx * (\n            xx * (\n              xx * (\n                xx * (\n                  xx / 20922789888000\n                  - 1 / 87178291200)\n                + 1 / 479001600)\n              - 1 / 3628800)\n            + 1 / 40320)\n          - 1 / 720)\n        + 1 / 24)\n      - 1 / 2);\n  };\n\n  var hypot = function(x, y) {\n\n    var a = Math.abs(x);\n    var b = Math.abs(y);\n\n    if (a < 3000 && b < 3000) {\n      return Math.sqrt(a * a + b * b);\n    }\n\n    if (a < b) {\n      a = b;\n      b = x / y;\n    } else {\n      b = y / x;\n    }\n    return a * Math.sqrt(1 + b * b);\n  };\n\n  var parser_exit = function() {\n    throw SyntaxError('Invalid Param');\n  };\n\n  /**\n   * Calculates log(sqrt(a^2+b^2)) in a way to avoid overflows\n   *\n   * @param {number} a\n   * @param {number} b\n   * @returns {number}\n   */\n  function logHypot(a, b) {\n\n    var _a = Math.abs(a);\n    var _b = Math.abs(b);\n\n    if (a === 0) {\n      return Math.log(_b);\n    }\n\n    if (b === 0) {\n      return Math.log(_a);\n    }\n\n    if (_a < 3000 && _b < 3000) {\n      return Math.log(a * a + b * b) * 0.5;\n    }\n\n    /* I got 4 ideas to compute this property without overflow:\n     *\n     * Testing 1000000 times with random samples for a,b ∈ [1, 1000000000] against a big decimal library to get an error estimate\n     *\n     * 1. Only eliminate the square root: (OVERALL ERROR: 3.9122483030951116e-11)\n\n     Math.log(a * a + b * b) / 2\n\n     *\n     *\n     * 2. Try to use the non-overflowing pythagoras: (OVERALL ERROR: 8.889760039210159e-10)\n\n     var fn = function(a, b) {\n     a = Math.abs(a);\n     b = Math.abs(b);\n     var t = Math.min(a, b);\n     a = Math.max(a, b);\n     t = t / a;\n\n     return Math.log(a) + Math.log(1 + t * t) / 2;\n     };\n\n     * 3. Abuse the identity cos(atan(y/x) = x / sqrt(x^2+y^2): (OVERALL ERROR: 3.4780178737037204e-10)\n\n     Math.log(a / Math.cos(Math.atan2(b, a)))\n\n     * 4. Use 3. and apply log rules: (OVERALL ERROR: 1.2014087502620896e-9)\n\n     Math.log(a) - Math.log(Math.cos(Math.atan2(b, a)))\n\n     */\n\n     a = a / 2;\n     b = b / 2;\n\n    return 0.5 * Math.log(a * a + b * b) + Math.LN2;\n  }\n\n  var parse = function(a, b) {\n\n    var z = { 're': 0, 'im': 0 };\n\n    if (a === undefined || a === null) {\n      z['re'] =\n      z['im'] = 0;\n    } else if (b !== undefined) {\n      z['re'] = a;\n      z['im'] = b;\n    } else\n      switch (typeof a) {\n\n        case 'object':\n\n          if ('im' in a && 're' in a) {\n            z['re'] = a['re'];\n            z['im'] = a['im'];\n          } else if ('abs' in a && 'arg' in a) {\n            if (!Number.isFinite(a['abs']) && Number.isFinite(a['arg'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['abs'] * Math.cos(a['arg']);\n            z['im'] = a['abs'] * Math.sin(a['arg']);\n          } else if ('r' in a && 'phi' in a) {\n            if (!Number.isFinite(a['r']) && Number.isFinite(a['phi'])) {\n              return Complex['INFINITY'];\n            }\n            z['re'] = a['r'] * Math.cos(a['phi']);\n            z['im'] = a['r'] * Math.sin(a['phi']);\n          } else if (a.length === 2) { // Quick array check\n            z['re'] = a[0];\n            z['im'] = a[1];\n          } else {\n            parser_exit();\n          }\n          break;\n\n        case 'string':\n\n          z['im'] = /* void */\n          z['re'] = 0;\n\n          var tokens = a.match(/\\d+\\.?\\d*e[+-]?\\d+|\\d+\\.?\\d*|\\.\\d+|./g);\n          var plus = 1;\n          var minus = 0;\n\n          if (tokens === null) {\n            parser_exit();\n          }\n\n          for (var i = 0; i < tokens.length; i++) {\n\n            var c = tokens[i];\n\n            if (c === ' ' || c === '\\t' || c === '\\n') {\n              /* void */\n            } else if (c === '+') {\n              plus++;\n            } else if (c === '-') {\n              minus++;\n            } else if (c === 'i' || c === 'I') {\n\n              if (plus + minus === 0) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] !== ' ' && !isNaN(tokens[i + 1])) {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + tokens[i + 1]);\n                i++;\n              } else {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + '1');\n              }\n              plus = minus = 0;\n\n            } else {\n\n              if (plus + minus === 0 || isNaN(c)) {\n                parser_exit();\n              }\n\n              if (tokens[i + 1] === 'i' || tokens[i + 1] === 'I') {\n                z['im'] += parseFloat((minus % 2 ? '-' : '') + c);\n                i++;\n              } else {\n                z['re'] += parseFloat((minus % 2 ? '-' : '') + c);\n              }\n              plus = minus = 0;\n            }\n          }\n\n          // Still something on the stack\n          if (plus + minus > 0) {\n            parser_exit();\n          }\n          break;\n\n        case 'number':\n          z['im'] = 0;\n          z['re'] = a;\n          break;\n\n        default:\n          parser_exit();\n      }\n\n    if (isNaN(z['re']) || isNaN(z['im'])) {\n      // If a calculation is NaN, we treat it as NaN and don't throw\n      //parser_exit();\n    }\n\n    return z;\n  };\n\n  /**\n   * @constructor\n   * @returns {Complex}\n   */\n  function Complex(a, b) {\n\n    if (!(this instanceof Complex)) {\n      return new Complex(a, b);\n    }\n\n    var z = parse(a, b);\n\n    this['re'] = z['re'];\n    this['im'] = z['im'];\n  }\n\n  Complex.prototype = {\n\n    're': 0,\n    'im': 0,\n\n    /**\n     * Calculates the sign of a complex number, which is a normalized complex\n     *\n     * @returns {Complex}\n     */\n    'sign': function() {\n\n      var abs = this['abs']();\n\n      return new Complex(\n        this['re'] / abs,\n        this['im'] / abs);\n    },\n\n    /**\n     * Adds two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'add': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity + Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity + z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n        this['re'] + z['re'],\n        this['im'] + z['im']);\n    },\n\n    /**\n     * Subtracts two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'sub': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity - Infinity = NaN\n      if (this['isInfinite']() && z['isInfinite']()) {\n        return Complex['NAN'];\n      }\n\n      // Infinity - z = Infinity { where z != Infinity }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      return new Complex(\n        this['re'] - z['re'],\n        this['im'] - z['im']);\n    },\n\n    /**\n     * Multiplies two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'mul': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // Infinity * 0 = NaN\n      if ((this['isInfinite']() && z['isZero']()) || (this['isZero']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity * z = Infinity { where z != 0 }\n      if (this['isInfinite']() || z['isInfinite']()) {\n        return Complex['INFINITY'];\n      }\n\n      // Short circuit for real values\n      if (z['im'] === 0 && this['im'] === 0) {\n        return new Complex(this['re'] * z['re'], 0);\n      }\n\n      return new Complex(\n        this['re'] * z['re'] - this['im'] * z['im'],\n        this['re'] * z['im'] + this['im'] * z['re']);\n    },\n\n    /**\n     * Divides two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'div': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      // 0 / 0 = NaN and Infinity / Infinity = NaN\n      if ((this['isZero']() && z['isZero']()) || (this['isInfinite']() && z['isInfinite']())) {\n        return Complex['NAN'];\n      }\n\n      // Infinity / 0 = Infinity\n      if (this['isInfinite']() || z['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      // 0 / Infinity = 0\n      if (this['isZero']() || z['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      a = this['re'];\n      b = this['im'];\n\n      var c = z['re'];\n      var d = z['im'];\n      var t, x;\n\n      if (0 === d) {\n        // Divisor is real\n        return new Complex(a / c, b / c);\n      }\n\n      if (Math.abs(c) < Math.abs(d)) {\n\n        x = c / d;\n        t = c * x + d;\n\n        return new Complex(\n          (a * x + b) / t,\n          (b * x - a) / t);\n\n      } else {\n\n        x = d / c;\n        t = d * x + c;\n\n        return new Complex(\n          (a + b * x) / t,\n          (b - a * x) / t);\n      }\n    },\n\n    /**\n     * Calculate the power of two complex numbers\n     *\n     * @returns {Complex}\n     */\n    'pow': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      a = this['re'];\n      b = this['im'];\n\n      if (z['isZero']()) {\n        return Complex['ONE'];\n      }\n\n      // If the exponent is real\n      if (z['im'] === 0) {\n\n        if (b === 0 && a > 0) {\n\n          return new Complex(Math.pow(a, z['re']), 0);\n\n        } else if (a === 0) { // If base is fully imaginary\n\n          switch ((z['re'] % 4 + 4) % 4) {\n            case 0:\n              return new Complex(Math.pow(b, z['re']), 0);\n            case 1:\n              return new Complex(0, Math.pow(b, z['re']));\n            case 2:\n              return new Complex(-Math.pow(b, z['re']), 0);\n            case 3:\n              return new Complex(0, -Math.pow(b, z['re']));\n          }\n        }\n      }\n\n      /* I couldn't find a good formula, so here is a derivation and optimization\n       *\n       * z_1^z_2 = (a + bi)^(c + di)\n       *         = exp((c + di) * log(a + bi)\n       *         = pow(a^2 + b^2, (c + di) / 2) * exp(i(c + di)atan2(b, a))\n       * =>...\n       * Re = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * cos(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       * Im = (pow(a^2 + b^2, c / 2) * exp(-d * atan2(b, a))) * sin(d * log(a^2 + b^2) / 2 + c * atan2(b, a))\n       *\n       * =>...\n       * Re = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * cos(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       * Im = exp(c * log(sqrt(a^2 + b^2)) - d * atan2(b, a)) * sin(d * log(sqrt(a^2 + b^2)) + c * atan2(b, a))\n       *\n       * =>\n       * Re = exp(c * logsq2 - d * arg(z_1)) * cos(d * logsq2 + c * arg(z_1))\n       * Im = exp(c * logsq2 - d * arg(z_1)) * sin(d * logsq2 + c * arg(z_1))\n       *\n       */\n\n      if (a === 0 && b === 0 && z['re'] > 0 && z['im'] >= 0) {\n        return Complex['ZERO'];\n      }\n\n      var arg = Math.atan2(b, a);\n      var loh = logHypot(a, b);\n\n      a = Math.exp(z['re'] * loh - z['im'] * arg);\n      b = z['im'] * loh + z['re'] * arg;\n      return new Complex(\n        a * Math.cos(b),\n        a * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex square root\n     *\n     * @returns {Complex}\n     */\n    'sqrt': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var r = this['abs']();\n\n      var re, im;\n\n      if (a >= 0) {\n\n        if (b === 0) {\n          return new Complex(Math.sqrt(a), 0);\n        }\n\n        re = 0.5 * Math.sqrt(2.0 * (r + a));\n      } else {\n        re = Math.abs(b) / Math.sqrt(2 * (r - a));\n      }\n\n      if (a <= 0) {\n        im = 0.5 * Math.sqrt(2.0 * (r - a));\n      } else {\n        im = Math.abs(b) / Math.sqrt(2 * (r + a));\n      }\n\n      return new Complex(re, b < 0 ? -im : im);\n    },\n\n    /**\n     * Calculate the complex exponent\n     *\n     * @returns {Complex}\n     */\n    'exp': function() {\n\n      var tmp = Math.exp(this['re']);\n\n      if (this['im'] === 0) {\n        //return new Complex(tmp, 0);\n      }\n      return new Complex(\n        tmp * Math.cos(this['im']),\n        tmp * Math.sin(this['im']));\n    },\n\n    /**\n     * Calculate the complex exponent and subtracts one.\n     *\n     * This may be more accurate than `Complex(x).exp().sub(1)` if\n     * `x` is small.\n     *\n     * @returns {Complex}\n     */\n    'expm1': function() {\n\n      /**\n       * exp(a + i*b) - 1\n       = exp(a) * (cos(b) + j*sin(b)) - 1\n       = expm1(a)*cos(b) + cosm1(b) + j*exp(a)*sin(b)\n       */\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.expm1(a) * Math.cos(b) + cosm1(b),\n        Math.exp(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the natural log\n     *\n     * @returns {Complex}\n     */\n    'log': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0 && a > 0) {\n        //return new Complex(Math.log(a), 0);\n      }\n\n      return new Complex(\n        logHypot(a, b),\n        Math.atan2(b, a));\n    },\n\n    /**\n     * Calculate the magnitude of the complex number\n     *\n     * @returns {number}\n     */\n    'abs': function() {\n\n      return hypot(this['re'], this['im']);\n    },\n\n    /**\n     * Calculate the angle of the complex number\n     *\n     * @returns {number}\n     */\n    'arg': function() {\n\n      return Math.atan2(this['im'], this['re']);\n    },\n\n    /**\n     * Calculate the sine of the complex number\n     *\n     * @returns {Complex}\n     */\n    'sin': function() {\n\n      // sin(z) = ( e^iz - e^-iz ) / 2i \n      //        = sin(a)cosh(b) + i cos(a)sinh(b)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.sin(a) * cosh(b),\n        Math.cos(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the cosine\n     *\n     * @returns {Complex}\n     */\n    'cos': function() {\n\n      // cos(z) = ( e^iz + e^-iz ) / 2 \n      //        = cos(a)cosh(b) - i sin(a)sinh(b)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        Math.cos(a) * cosh(b),\n        -Math.sin(a) * sinh(b));\n    },\n\n    /**\n     * Calculate the tangent\n     *\n     * @returns {Complex}\n     */\n    'tan': function() {\n\n      // tan(z) = sin(z) / cos(z) \n      //        = ( e^iz - e^-iz ) / ( i( e^iz + e^-iz ) )\n      //        = ( e^2iz - 1 ) / i( e^2iz + 1 )\n      //        = ( sin(2a) + i sinh(2b) ) / ( cos(2a) + cosh(2b) )\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) + cosh(b);\n\n      return new Complex(\n        Math.sin(a) / d,\n        sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cotangent\n     *\n     * @returns {Complex}\n     */\n    'cot': function() {\n\n      // cot(c) = i(e^(ci) + e^(-ci)) / (e^(ci) - e^(-ci))\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = Math.cos(a) - cosh(b);\n\n      return new Complex(\n        -Math.sin(a) / d,\n        sinh(b) / d);\n    },\n\n    /**\n     * Calculate the secant\n     *\n     * @returns {Complex}\n     */\n    'sec': function() {\n\n      // sec(c) = 2 / (e^(ci) + e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) + 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n        Math.cos(a) * cosh(b) / d,\n        Math.sin(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the cosecans\n     *\n     * @returns {Complex}\n     */\n    'csc': function() {\n\n      // csc(c) = 2i / (e^(ci) - e^(-ci))\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = 0.5 * cosh(2 * b) - 0.5 * Math.cos(2 * a);\n\n      return new Complex(\n        Math.sin(a) * cosh(b) / d,\n        -Math.cos(a) * sinh(b) / d);\n    },\n\n    /**\n     * Calculate the complex arcus sinus\n     *\n     * @returns {Complex}\n     */\n    'asin': function() {\n\n      // asin(c) = -i * log(ci + sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n        b * b - a * a + 1,\n        -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n        t1['re'] - b,\n        t1['im'] + a)['log']();\n\n      return new Complex(t2['im'], -t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cosinus\n     *\n     * @returns {Complex}\n     */\n    'acos': function() {\n\n      // acos(c) = i * log(c - i * sqrt(1 - c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var t1 = new Complex(\n        b * b - a * a + 1,\n        -2 * a * b)['sqrt']();\n\n      var t2 = new Complex(\n        t1['re'] - b,\n        t1['im'] + a)['log']();\n\n      return new Complex(Math.PI / 2 - t2['im'], t2['re']);\n    },\n\n    /**\n     * Calculate the complex arcus tangent\n     *\n     * @returns {Complex}\n     */\n    'atan': function() {\n\n      // atan(c) = i / 2 log((i + x) / (i - x))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0) {\n\n        if (b === 1) {\n          return new Complex(0, Infinity);\n        }\n\n        if (b === -1) {\n          return new Complex(0, -Infinity);\n        }\n      }\n\n      var d = a * a + (1.0 - b) * (1.0 - b);\n\n      var t1 = new Complex(\n        (1 - b * b - a * a) / d,\n        -2 * a / d).log();\n\n      return new Complex(-0.5 * t1['im'], 0.5 * t1['re']);\n    },\n\n    /**\n     * Calculate the complex arcus cotangent\n     *\n     * @returns {Complex}\n     */\n    'acot': function() {\n\n      // acot(c) = i / 2 log((c - i) / (c + i))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n        return new Complex(Math.atan2(1, a), 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).atan()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).atan();\n    },\n\n    /**\n     * Calculate the complex arcus secant\n     *\n     * @returns {Complex}\n     */\n    'asec': function() {\n\n      // asec(c) = -i * log(1 / c + sqrt(1 - i / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).acos()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).acos();\n    },\n\n    /**\n     * Calculate the complex arcus cosecans\n     *\n     * @returns {Complex}\n     */\n    'acsc': function() {\n\n      // acsc(c) = -i * log(i / c + sqrt(1 - 1 / c^2))\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(Math.PI / 2, Infinity);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).asin()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).asin();\n    },\n\n    /**\n     * Calculate the complex sinh\n     *\n     * @returns {Complex}\n     */\n    'sinh': function() {\n\n      // sinh(c) = (e^c - e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        sinh(a) * Math.cos(b),\n        cosh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex cosh\n     *\n     * @returns {Complex}\n     */\n    'cosh': function() {\n\n      // cosh(c) = (e^c + e^-c) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      return new Complex(\n        cosh(a) * Math.cos(b),\n        sinh(a) * Math.sin(b));\n    },\n\n    /**\n     * Calculate the complex tanh\n     *\n     * @returns {Complex}\n     */\n    'tanh': function() {\n\n      // tanh(c) = (e^c - e^-c) / (e^c + e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) + Math.cos(b);\n\n      return new Complex(\n        sinh(a) / d,\n        Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'coth': function() {\n\n      // coth(c) = (e^c + e^-c) / (e^c - e^-c)\n\n      var a = 2 * this['re'];\n      var b = 2 * this['im'];\n      var d = cosh(a) - Math.cos(b);\n\n      return new Complex(\n        sinh(a) / d,\n        -Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex coth\n     *\n     * @returns {Complex}\n     */\n    'csch': function() {\n\n      // csch(c) = 2 / (e^c - e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) - cosh(2 * a);\n\n      return new Complex(\n        -2 * sinh(a) * Math.cos(b) / d,\n        2 * cosh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex sech\n     *\n     * @returns {Complex}\n     */\n    'sech': function() {\n\n      // sech(c) = 2 / (e^c + e^-c)\n\n      var a = this['re'];\n      var b = this['im'];\n      var d = Math.cos(2 * b) + cosh(2 * a);\n\n      return new Complex(\n        2 * cosh(a) * Math.cos(b) / d,\n        -2 * sinh(a) * Math.sin(b) / d);\n    },\n\n    /**\n     * Calculate the complex asinh\n     *\n     * @returns {Complex}\n     */\n    'asinh': function() {\n\n      // asinh(c) = log(c + sqrt(c^2 + 1))\n\n      var tmp = this['im'];\n      this['im'] = -this['re'];\n      this['re'] = tmp;\n      var res = this['asin']();\n\n      this['re'] = -this['im'];\n      this['im'] = tmp;\n      tmp = res['re'];\n\n      res['re'] = -res['im'];\n      res['im'] = tmp;\n      return res;\n    },\n\n    /**\n     * Calculate the complex acosh\n     *\n     * @returns {Complex}\n     */\n    'acosh': function() {\n\n      // acosh(c) = log(c + sqrt(c^2 - 1))\n\n      var res = this['acos']();\n      if (res['im'] <= 0) {\n        var tmp = res['re'];\n        res['re'] = -res['im'];\n        res['im'] = tmp;\n      } else {\n        var tmp = res['im'];\n        res['im'] = -res['re'];\n        res['re'] = tmp;\n      }\n      return res;\n    },\n\n    /**\n     * Calculate the complex atanh\n     *\n     * @returns {Complex}\n     */\n    'atanh': function() {\n\n      // atanh(c) = log((1+c) / (1-c)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var noIM = a > 1 && b === 0;\n      var oneMinus = 1 - a;\n      var onePlus = 1 + a;\n      var d = oneMinus * oneMinus + b * b;\n\n      var x = (d !== 0)\n        ? new Complex(\n          (onePlus * oneMinus - b * b) / d,\n          (b * oneMinus + onePlus * b) / d)\n        : new Complex(\n          (a !== -1) ? (a / 0) : 0,\n          (b !== 0) ? (b / 0) : 0);\n\n      var temp = x['re'];\n      x['re'] = logHypot(x['re'], x['im']) / 2;\n      x['im'] = Math.atan2(x['im'], temp) / 2;\n      if (noIM) {\n        x['im'] = -x['im'];\n      }\n      return x;\n    },\n\n    /**\n     * Calculate the complex acoth\n     *\n     * @returns {Complex}\n     */\n    'acoth': function() {\n\n      // acoth(c) = log((c+1) / (c-1)) / 2\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (a === 0 && b === 0) {\n        return new Complex(0, Math.PI / 2);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).atanh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).atanh();\n    },\n\n    /**\n     * Calculate the complex acsch\n     *\n     * @returns {Complex}\n     */\n    'acsch': function() {\n\n      // acsch(c) = log((1+sqrt(1+c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (b === 0) {\n\n        return new Complex(\n          (a !== 0)\n            ? Math.log(a + Math.sqrt(a * a + 1))\n            : Infinity, 0);\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).asinh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).asinh();\n    },\n\n    /**\n     * Calculate the complex asech\n     *\n     * @returns {Complex}\n     */\n    'asech': function() {\n\n      // asech(c) = log((1+sqrt(1-c^2))/c)\n\n      var a = this['re'];\n      var b = this['im'];\n\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      var d = a * a + b * b;\n      return (d !== 0)\n        ? new Complex(\n          a / d,\n          -b / d).acosh()\n        : new Complex(\n          (a !== 0) ? a / 0 : 0,\n          (b !== 0) ? -b / 0 : 0).acosh();\n    },\n\n    /**\n     * Calculate the complex inverse 1/z\n     *\n     * @returns {Complex}\n     */\n    'inverse': function() {\n\n      // 1 / 0 = Infinity and 1 / Infinity = 0\n      if (this['isZero']()) {\n        return Complex['INFINITY'];\n      }\n\n      if (this['isInfinite']()) {\n        return Complex['ZERO'];\n      }\n\n      var a = this['re'];\n      var b = this['im'];\n\n      var d = a * a + b * b;\n\n      return new Complex(a / d, -b / d);\n    },\n\n    /**\n     * Returns the complex conjugate\n     *\n     * @returns {Complex}\n     */\n    'conjugate': function() {\n\n      return new Complex(this['re'], -this['im']);\n    },\n\n    /**\n     * Gets the negated complex number\n     *\n     * @returns {Complex}\n     */\n    'neg': function() {\n\n      return new Complex(-this['re'], -this['im']);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'ceil': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.ceil(this['re'] * places) / places,\n        Math.ceil(this['im'] * places) / places);\n    },\n\n    /**\n     * Floors the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'floor': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.floor(this['re'] * places) / places,\n        Math.floor(this['im'] * places) / places);\n    },\n\n    /**\n     * Ceils the actual complex number\n     *\n     * @returns {Complex}\n     */\n    'round': function(places) {\n\n      places = Math.pow(10, places || 0);\n\n      return new Complex(\n        Math.round(this['re'] * places) / places,\n        Math.round(this['im'] * places) / places);\n    },\n\n    /**\n     * Compares two complex numbers\n     *\n     * **Note:** new Complex(Infinity).equals(Infinity) === false\n     *\n     * @returns {boolean}\n     */\n    'equals': function(a, b) {\n\n      var z = new Complex(a, b);\n\n      return Math.abs(z['re'] - this['re']) <= Complex['EPSILON'] &&\n        Math.abs(z['im'] - this['im']) <= Complex['EPSILON'];\n    },\n\n    /**\n     * Clones the actual object\n     *\n     * @returns {Complex}\n     */\n    'clone': function() {\n\n      return new Complex(this['re'], this['im']);\n    },\n\n    /**\n     * Gets a string of the actual complex number\n     *\n     * @returns {string}\n     */\n    'toString': function() {\n\n      var a = this['re'];\n      var b = this['im'];\n      var ret = \"\";\n\n      if (this['isNaN']()) {\n        return 'NaN';\n      }\n\n      if (this['isInfinite']()) {\n        return 'Infinity';\n      }\n\n      if (Math.abs(a) < Complex['EPSILON']) {\n        a = 0;\n      }\n\n      if (Math.abs(b) < Complex['EPSILON']) {\n        b = 0;\n      }\n\n      // If is real number\n      if (b === 0) {\n        return ret + a;\n      }\n\n      if (a !== 0) {\n        ret += a;\n        ret += \" \";\n        if (b < 0) {\n          b = -b;\n          ret += \"-\";\n        } else {\n          ret += \"+\";\n        }\n        ret += \" \";\n      } else if (b < 0) {\n        b = -b;\n        ret += \"-\";\n      }\n\n      if (1 !== b) { // b is the absolute imaginary part\n        ret += b;\n      }\n      return ret + \"i\";\n    },\n\n    /**\n     * Returns the actual number as a vector\n     *\n     * @returns {Array}\n     */\n    'toVector': function() {\n\n      return [this['re'], this['im']];\n    },\n\n    /**\n     * Returns the actual real value of the current object\n     *\n     * @returns {number|null}\n     */\n    'valueOf': function() {\n\n      if (this['im'] === 0) {\n        return this['re'];\n      }\n      return null;\n    },\n\n    /**\n     * Determines whether a complex number is not on the Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isNaN': function() {\n      return isNaN(this['re']) || isNaN(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the zero pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isZero': function() {\n      return this['im'] === 0 && this['re'] === 0;\n    },\n\n    /**\n     * Determines whether a complex number is not at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isFinite': function() {\n      return isFinite(this['re']) && isFinite(this['im']);\n    },\n\n    /**\n     * Determines whether or not a complex number is at the infinity pole of the\n     * Riemann sphere.\n     *\n     * @returns {boolean}\n     */\n    'isInfinite': function() {\n      return !(this['isNaN']() || this['isFinite']());\n    }\n  };\n\n  Complex['ZERO'] = new Complex(0, 0);\n  Complex['ONE'] = new Complex(1, 0);\n  Complex['I'] = new Complex(0, 1);\n  Complex['PI'] = new Complex(Math.PI, 0);\n  Complex['E'] = new Complex(Math.E, 0);\n  Complex['INFINITY'] = new Complex(Infinity, Infinity);\n  Complex['NAN'] = new Complex(NaN, NaN);\n  Complex['EPSILON'] = 1e-15;\n\n  if (typeof define === 'function' && define['amd']) {\n    define([], function() {\n      return Complex;\n    });\n  } else if (typeof exports === 'object') {\n    Object.defineProperty(Complex, \"__esModule\", { 'value': true });\n    Complex['default'] = Complex;\n    Complex['Complex'] = Complex;\n    module['exports'] = Complex;\n  } else {\n    root['Complex'] = Complex;\n  }\n\n})(this);\n","/**\n * Number operations made generic of argument types\n */\n\nimport Complex from 'complex.js'\n\nexport type JSNumber = number | bigint | Complex\n\nMath.trunc =\n  Math.trunc ||\n  function (x) {\n    if (isNaN(x)) {\n      return NaN\n    }\n    if (x > 0) {\n      return Math.floor(x)\n    }\n    return Math.ceil(x)\n  }\n\nexport function toComplex(x: JSNumber | string): Complex {\n  const num = typeof x === 'bigint' ? Number(x) : x\n  return new Complex(num)\n}\nfunction toRealIfPossible(x: JSNumber): JSNumber {\n  if (typeof x === 'bigint' || typeof x === 'number') return x\n  if (isclose(x.im, 0)) return x.re\n  return x\n}\n\nexport function arrayToInt(\n  bigEndianArr: (number | bigint)[] | string,\n  radix: number | bigint = 10n\n) {\n  const TABLE = '0123456789abcdefghijklmnopqrstuvwxyz'.slice(0, Number(radix))\n  const _radix = BigInt(radix)\n  let arr: (number | bigint)[]\n  let sign: 1n | -1n = 1n\n  if (typeof bigEndianArr === 'string') {\n    if (bigEndianArr[0] === '+') {\n      bigEndianArr = bigEndianArr.slice(1)\n    } else if (bigEndianArr[0] === '-') {\n      sign = -1n\n      bigEndianArr = bigEndianArr.slice(1)\n    }\n\n    arr = bigEndianArr\n      .toLowerCase()\n      .split('')\n      .map((c) => TABLE.indexOf(c))\n    const invalidIdx = arr.indexOf(-1)\n    if (invalidIdx !== -1) {\n      throw Error(\n        `다음 글자를 ${radix}진법 숫자로 해석할 수 없습니다: '${bigEndianArr[invalidIdx]}'`\n      )\n    }\n  } else {\n    arr = bigEndianArr\n  }\n  let result = 0n\n  for (let i = 0; i < arr.length; i++) {\n    result *= _radix\n    result += BigInt(arr[i])\n  }\n  return result * sign\n}\nexport function intToArray(num: bigint, radix: number | bigint = 10n) {\n  if (num < 0n)\n    throw Error('Cannot convert a negative integer into array form.')\n  const _radix = BigInt(radix)\n  const littleEndianArr: bigint[] = []\n  while (num > 0n) {\n    littleEndianArr.push(num % _radix)\n    num /= _radix\n  }\n  return littleEndianArr.reverse()\n}\n\n/* Logic */\nexport function isinf(num: JSNumber): boolean {\n  if (typeof num === 'bigint') return false\n  if (num instanceof Complex) return isinf(num.re) || isinf(num.im)\n  return !(isFinite(num) || isNaN(num))\n}\nexport function isnan(num: JSNumber): boolean {\n  if (typeof num === 'bigint') return false\n  if (num instanceof Complex) return num.isNaN()\n  return isNaN(num)\n}\nfunction isInteger(num: bigint | number) {\n  return typeof num === 'bigint' || Number.isInteger(num)\n}\n\nfunction complexEq(complexValue: Complex, numberValue: JSNumber): boolean {\n  if (numberValue instanceof Complex) {\n    return (\n      complexValue.re === numberValue.re && complexValue.im === numberValue.im\n    )\n  }\n  if (complexValue.im !== 0) return false\n  if (typeof numberValue === 'bigint')\n    return bigIntEq(numberValue, complexValue.re)\n  return numberValue === complexValue.re\n}\nfunction bigIntEq(bigIntValue: bigint, realValue: number | bigint): boolean {\n  return isInteger(realValue) && bigIntValue === BigInt(realValue)\n}\nexport function eq(a: JSNumber, b: JSNumber) {\n  if (a instanceof Complex) return complexEq(a, b)\n  if (b instanceof Complex) return complexEq(b, a)\n  if (typeof a === 'bigint') return bigIntEq(a, b)\n  if (typeof b === 'bigint') return bigIntEq(b, a)\n  return a === b\n}\n\nexport function isclose(\n  a: JSNumber,\n  b: JSNumber,\n  rel_tol = 1e-9,\n  abs_tol = 1e-16\n) {\n  if (rel_tol < 0 || abs_tol < 0) {\n    throw RangeError('Tolerances must be non-negative.')\n  }\n  if (eq(a, b)) {\n    return true\n  }\n  if (isinf(a) || isinf(b)) {\n    return false\n  }\n  const _a = typeof a === 'bigint' ? Number(a) : a\n  const _b = typeof b === 'bigint' ? Number(b) : b\n  const diff = abs(sub(_a, _b))\n  return (\n    diff <= rel_tol * abs(_b) || diff <= rel_tol * abs(_a) || diff <= abs_tol\n  )\n}\n\n/* Arithmetics */\nexport function abs(num: bigint): bigint\nexport function abs(num: number | Complex): number\nexport function abs(num: JSNumber): JSNumber\nexport function abs(num: JSNumber) {\n  if (typeof num === 'bigint') {\n    return num >= 0n ? num : -num\n  } else if (num instanceof Complex) {\n    return num.abs()\n  }\n  return Math.abs(num)\n}\n\nfunction complexAdd(a: Complex, b: Complex): Complex {\n  return new Complex(a.re + b.re, a.im + b.im)\n}\nexport function add(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a + b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return complexAdd(toComplex(a), toComplex(b))\n  }\n  return Number(a) + Number(b)\n}\nfunction sub(a: bigint, b: bigint): bigint\nfunction sub(a: bigint | number, b: bigint | number): number\nfunction sub(a: JSNumber, b: JSNumber): Complex\nfunction sub(a: JSNumber, b: JSNumber): JSNumber {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a - b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return toComplex(a).sub(toComplex(b))\n  }\n  return Number(a) - Number(b)\n}\nfunction complexMul(a: Complex, b: Complex): Complex {\n  return new Complex(a.re * b.re - a.im * b.im, a.re * b.im + a.im * b.re)\n}\nexport function mul(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a * b\n  }\n  if (a instanceof Complex || b instanceof Complex) {\n    return complexMul(toComplex(a), toComplex(b))\n  }\n  return Number(a) * Number(b)\n}\nexport function div(a: number | bigint, b: number | bigint) {\n  // integer division\n  if (Number(b) === 0) throw Error('0으로 나눌 수 없습니다.')\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a / b\n  }\n  return Math.trunc(Number(a) / Number(b))\n}\nexport function mod(a: number | bigint, b: number | bigint) {\n  if (Number(b) === 0) throw Error('0으로 나눌 수 없습니다.')\n  if (typeof a === 'bigint' && typeof b === 'bigint') {\n    return a % b\n  }\n  return Number(a) % Number(b)\n}\n\nexport function pow(a: JSNumber, b: JSNumber) {\n  if (typeof a === 'bigint' && typeof b === 'bigint' && b >= 0) {\n    return a ** b\n  }\n\n  const bReal = toRealIfPossible(b)\n  if (!(bReal instanceof Complex) && bReal < 0 && eq(a, 0))\n    throw Error('0의 역수를 구하려고 했습니다.')\n\n  if (\n    a instanceof Complex ||\n    b instanceof Complex ||\n    (a < 0 && !isInteger(b))\n  ) {\n    return toComplex(a).pow(toComplex(b))\n  }\n\n  return Number(a) === 1 ? 1 : Math.pow(Number(a), Number(b))\n}\n","/** Abstract syntax and values. **/\nimport Complex from 'complex.js'\nimport EastAsianWidth from 'eastasianwidth'\nimport { isclose } from './numbers'\n\nexport class Metadata {\n  private str?: string\n\n  constructor(\n    public filename: string,\n    public line_no: number,\n    public start_col: number,\n    public end_col: number,\n    public line: string\n  ) {}\n\n  toString() {\n    if (this.str == null) {\n      this.str =\n        this.line +\n        '\\n' +\n        ' '.repeat(EastAsianWidth.length(this.line.slice(0, this.start_col))) +\n        '^'.repeat(\n          EastAsianWidth.length(this.line.slice(this.start_col, this.end_col))\n        )\n    }\n    return this.str\n  }\n}\n\n/* Parser */\nexport class Literal {\n  constructor(public metadata: Metadata, public value: bigint) {}\n}\nexport class FunRef {\n  constructor(public metadata: Metadata, public rel: number) {}\n}\nexport class ArgRef {\n  constructor(\n    public metadata: Metadata,\n    public relA: AST,\n    public relF: number\n  ) {}\n}\nexport class FunDef {\n  constructor(public metadata: Metadata, public body: AST) {}\n}\nexport class FunCall {\n  constructor(public metadata: Metadata, public fun: AST, public argv: AST[]) {}\n}\nexport type AST = Literal | FunRef | ArgRef | FunDef | FunCall\n\n/* Interpreter */\nexport type IOUtils = {\n  input(): Promise<string | undefined>\n  print(content: string): void\n}\nexport type File = {\n  close(): void\n  read(numBytes: number): Promise<ArrayBuffer>\n  write(bytes: ArrayBuffer): number\n  seek(offset: number, whence: 'SEEK_SET' | 'SEEK_CUR'): number\n  tell(): number\n  truncate(size?: number): number\n}\nexport type LoadUtils = {\n  open(path: string | number, flags: 'a' | 'a+' | 'r' | 'r+' | 'w' | 'w+'): File\n  load(location: string): string\n  isFile(location: string): boolean\n  listdir(location: string): string[]\n  joinPath(...parts: string[]): string\n  normalizePath(path: string): string\n}\nexport class Env {\n  constructor(\n    public funs: ClosureV[],\n    public args: Value[][],\n    public utils: LoadUtils\n  ) {}\n}\n\nexport class UnsuspectedHangeulError extends Error {\n  constructor(public err: ErrorV) {\n    let message = ''\n    for (const metadata of err.metadatas) {\n      message += `${metadata.filename} ${metadata.line_no + 1}번줄 `\n      message += `${metadata.start_col + 1}~${metadata.end_col + 1}번째 글자:\\n`\n      message += metadata.toString() + '\\n'\n    }\n    super(message + '\\n' + err.message)\n  }\n}\n\n/* Values */\nabstract class ValueBase {\n  abstract format(strict: StrictFn): string\n  asKey(strict: StrictFn): string {\n    return this.format(strict)\n  }\n}\n\nfunction _isPossibleInt(num: number) {\n  return isFinite(num) && isclose(num, Math.floor(num))\n}\n\nfunction _formatFloat(num: number) {\n  if (isFinite(num)) return num.toString()\n  if (isNaN(num)) return 'nan'\n  return num > 0 ? 'inf' : '-inf'\n}\n\nexport class IntegerV extends ValueBase {\n  static typeName = '정수'\n  constructor(public value: bigint) {\n    super()\n  }\n  format(strict: StrictFn) {\n    return this.value.toString()\n  }\n}\n\nexport class FloatV extends ValueBase {\n  static typeName = '실수'\n  constructor(public value: number) {\n    super()\n  }\n  format(strict: StrictFn) {\n    const str = _formatFloat(this.value)\n    const trailing = _isPossibleInt(this.value) ? '.0' : ''\n    return str + trailing\n  }\n  asKey(strict: StrictFn) {\n    return _formatFloat(this.value)\n  }\n}\n\nexport class ComplexV extends ValueBase {\n  static typeName = '복소수'\n  constructor(public value: Complex) {\n    super()\n  }\n  format(strict: StrictFn) {\n    const re = this.value.re\n    const im = this.value.im\n    const reStr = _formatFloat(re) + (im < 0 ? '' : '+')\n    const imStr = im == 1 ? '' : im == -1 ? '-' : _formatFloat(im)\n    return (re === 0 ? '' : reStr) + imStr + 'i'\n  }\n  asKey(strict: StrictFn): string {\n    return this.value.im ? this.format(strict) : _formatFloat(this.value.re)\n  }\n}\n\nexport class BooleanV extends ValueBase {\n  static typeName = '논릿값'\n  constructor(public value: boolean) {\n    super()\n  }\n  format(strict: StrictFn) {\n    return this.value ? 'True' : 'False'\n  }\n}\n\nexport class ListV extends ValueBase {\n  static typeName = '목록'\n  constructor(public value: Value[]) {\n    super()\n  }\n  format(strict: StrictFn): string {\n    const children = this.value.map((value) => strict(value).format(strict))\n    return `[${children.join(', ')}]`\n  }\n  asKey(strict: StrictFn): string {\n    const children = this.value.map((value) => strict(value).asKey(strict))\n    return `[${children.join(', ')}]`\n  }\n}\n\nexport class StringV extends ValueBase {\n  static typeName = '문자열'\n  public value: string[]\n  constructor(public str: string) {\n    super()\n    this.value = Array.from(str)\n  }\n  format(strict: StrictFn) {\n    return \"'\" + this.str + \"'\"\n  }\n}\n\nexport class BytesV extends ValueBase {\n  static typeName = '바이트열'\n  private str?: string\n  constructor(public value: ArrayBuffer) {\n    super()\n  }\n  formatByte(c: number) {\n    const s = c.toString(16).toUpperCase()\n    return '\\\\x' + ('0' + s).slice(-2)\n  }\n  format(strict: StrictFn) {\n    if (!this.str) {\n      const arr = Array.from(new Uint8Array(this.value))\n      const formatted = arr.map(this.formatByte)\n      this.str = \"b'\" + formatted.join('') + \"'\"\n    }\n    return this.str\n  }\n}\n\nexport class DictV extends ValueBase {\n  static typeName = '사전'\n  private _keys?: string[]\n  private _values?: Value[]\n  constructor(public value: Record<string, Value>) {\n    super()\n  }\n\n  keys() {\n    if (!this._keys) {\n      this._keys = Object.keys(this.value).sort()\n    }\n    return this._keys\n  }\n  values() {\n    if (!this._values) {\n      this._values = this.keys().map((k) => this.value[k])\n    }\n    return this._values\n  }\n\n  format(strict: StrictFn): string {\n    const values = this.values().map((v) => strict(v).format(strict))\n    const pairs = this.keys().map((k, i) => k + ': ' + values[i])\n    return '{' + pairs.join(', ') + '}'\n  }\n  asKey(strict: StrictFn): string {\n    const values = this.values().map((v) => strict(v).asKey(strict))\n    const pairs = this.keys().map((k, i) => k + ': ' + values[i])\n    return '{' + pairs.join(', ') + '}'\n  }\n}\n\nexport class IOV extends ValueBase {\n  static typeName = '드나듦'\n\n  constructor(\n    public inst: string,\n    public argv: Value[],\n    public continuation: (\n      doIO: (ioValue: IOV) => Promise<NonIOStrictValue>,\n      ioUtils: IOUtils\n    ) => Promise<StrictValue>\n  ) {\n    super()\n  }\n\n  format(strict: StrictFn): string {\n    const formatted = this.argv\n      .map((value) => strict(value).format(strict))\n      .join(', ')\n    return `<드나듦 ${this.inst}: [${formatted}]>`\n  }\n  asKey(strict: StrictFn): string {\n    const formatted = this.argv\n      .map((value) => strict(value).asKey(strict))\n      .join(', ')\n    return `<드나듦 ${this.inst}: [${formatted}]>`\n  }\n}\n\nexport class NilV extends ValueBase {\n  static typeName = '빈값'\n  constructor() {\n    super()\n  }\n  format(strict: StrictFn): string {\n    return 'Nil'\n  }\n}\n\nlet FUNCTION_ID_GEN = 0\nexport abstract class FunctionV extends ValueBase {\n  static typeName = '함수'\n  private id: number\n  protected str: string\n  constructor(adj = '') {\n    super()\n    this.id = FUNCTION_ID_GEN++\n    this.str = '<' + adj + '함수>'\n  }\n  format(strict: StrictFn) {\n    return this.str\n  }\n  asKey(strict: StrictFn): string {\n    return this.str.replace('>', ' #' + this.id + '>')\n  }\n  abstract execute(metadata: Metadata, argv: Value[]): Value\n}\n\nexport class ClosureV extends FunctionV {\n  constructor(public body: AST, public env: Env) {\n    super(`깊이 ${env.args.length}에서 생성된 `)\n  }\n\n  execute(metadata: Metadata, argv: Value[]) {\n    const newArgs = this.env.args.concat([argv])\n    const newEnv = new Env(this.env.funs, newArgs, this.env.utils)\n    return new ExprV(this.body, newEnv, null)\n  }\n}\n\nexport class BuiltinModuleV extends FunctionV {\n  constructor(public module: Evaluation, name: string) {\n    super()\n    this.str = '<기본 제공 모듈 ' + name + '>'\n  }\n\n  execute(metadata: Metadata, argv: Value[]) {\n    return this.module(metadata, argv)\n  }\n}\n\nexport class ErrorV extends ValueBase {\n  static typeName = '예외'\n  constructor(\n    public metadatas: Metadata[],\n    public message: string,\n    public value: StrictValue[]\n  ) {\n    super()\n  }\n  format(strict: StrictFn): string {\n    const formatted = this.value.map((v) => v.format(strict)).join(', ')\n    return `<예외: [${formatted}]>`\n  }\n  asKey(strict: StrictFn): string {\n    const formatted = this.value.map((v) => v.asKey(strict)).join(', ')\n    return `<예외: [${formatted}]>`\n  }\n}\n\nexport class ExprV {\n  constructor(\n    public expr: AST,\n    public env: Env,\n    public cache: StrictValue | UnsuspectedHangeulError | null\n  ) {}\n}\n\nexport const RealV = [IntegerV, FloatV] as const\nexport const NumberV = [...RealV, ComplexV] as const\nexport const SequenceV = [ListV, StringV, BytesV] as const\nexport const CallableV = [\n  FunctionV,\n  BooleanV,\n  DictV,\n  ComplexV,\n  ErrorV,\n  ...SequenceV,\n] as const\nexport const AnyV = [...NumberV, ...CallableV, IOV, NilV] as const\n\nexport type StrictValueType = (typeof AnyV)[number]\n\nexport type NonIOStrictValue =\n  | IntegerV\n  | FloatV\n  | ComplexV\n  | ListV\n  | StringV\n  | BytesV\n  | BooleanV\n  | DictV\n  | ErrorV\n  | FunctionV\n  | NilV\nexport type StrictValue = NonIOStrictValue | IOV\nexport type Value = StrictValue | ExprV\n\nexport type ProcFunctionalFn = (\n  metadata: Metadata,\n  fun: Value,\n  generalCallable?: boolean\n) => Evaluation\nexport type StrictFn = (value: Value) => StrictValue\nexport type Evaluation = (metadata: Metadata, args: Value[]) => Value\n","/* Parser for unsuspected hangeul. */\nimport * as AS from './abstractSyntax'\nimport * as E from './error'\n\n/** Normalizer **/\n\n// TABLES\n// note all ㅇ and ㅎ has a preceding space in following tables\nconst U1100 = (\n  'ㄱ|ㄱ|ㄴ|ㄷ|ㄷ|ㄹ|ㅁ|ㅂ|ㅂ|ㅅ|ㅅ| ㅇ|ㅈ|ㅈ|ㅈ|ㄱ|ㄷ|ㅂ| ㅎ|ㄴㄱ|ㄴ|ㄴㄷ|ㄴㅂ|ㄷㄱ|ㄹㄴ|ㄹ|' +\n  'ㄹ ㅎ|ㄹ|ㅁㅂ|ㅁ|ㅂㄱ|ㅂㄴ|ㅂㄷ|ㅂㅅ|ㅂㅅㄱ|ㅂㅅㄷ|ㅂㅅㅂ|ㅂㅅ|ㅂㅅㅈ|ㅂㅈ|ㅂㅈ|ㅂㄷ|ㅂㅂ|ㅂ|' +\n  'ㅂ|ㅅㄱ|ㅅㄴ|ㅅㄷ|ㅅㄹ|ㅅㅁ|ㅅㅂ|ㅅㅂㄱ|ㅅㅅ|ㅅ ㅇ|ㅅㅈ|ㅅㅈ|ㅅㄱ|ㅅㄷ|ㅅㅂ|ㅅ ㅎ|ㅅ|ㅅ|ㅅ|ㅅ|' +\n  'ㅅ| ㅇㄱ| ㅇㄷ| ㅇㅁ| ㅇㅂ| ㅇㅅ| ㅇㅅ| ㅇ| ㅇㅈ| ㅇㅈ| ㅇㄷ| ㅇㅂ| ㅇ|ㅈ ㅇ|ㅈ|ㅈ|ㅈ|ㅈ|' +\n  'ㅈㄱ|ㅈ ㅎ|ㅈ|ㅈ|ㅂㅂ|ㅂ| ㅎ| ㅎ|ㄱㄷ|ㄴㅅ|ㄴㅈ|ㄴ ㅎ|ㄷㄹ'\n).split('|')\nconst JAMO = (\n  'ㄱ|ㄱ|ㄱㅅ|ㄴ|ㄴㅈ|ㄴ ㅎ|ㄷ|ㄷ|ㄹ|ㄹㄱ|ㄹㅁ|ㄹㅂ|ㄹㅅ|ㄹㄷ|ㄹㅂ|ㄹ ㅎ|ㅁ|ㅂ|ㅂ|ㅂㅅ|ㅅ|ㅅ|' +\n  ' ㅇ|ㅈ|ㅈ|ㅈ|ㄱ|ㄷ|ㅂ| ㅎ'\n).split('|')\nconst U3165 = (\n  'ㄴ|ㄴㄷ|ㄴㅅ|ㄴㅅ|ㄹㄱㅅ|ㄹㄷ|ㄹㅂㅅ|ㅁㅅ|ㅁ|ㅂㄱ|ㅂㄷ|ㅂㅅㄱ|ㅂㅅㄷ|ㅂㅈ|ㅂㄷ|ㅂ|ㅂ|ㅅㄱ|ㅅㄴ|' +\n  ' ㅇ| ㅇ| ㅇㅅ| ㅇㅅ|ㅂ| ㅎ| ㅎ'\n).split('|')\nconst UA960 = (\n  'ㄷㅁ|ㄷㅂ|ㄷㅅ|ㄷㅈ|ㄹㄱ|ㄹㄱ|ㄹㄷ|ㄹㄷ|ㄹㅁ|ㄹㅂ|ㄹㅂ|ㄹㅂ|ㄹㅅ|ㄹㅈ|ㄹㄱ|ㅁㄱ|ㅁㄷ|ㅁㅅ|' +\n  'ㅂㅅㄷ|ㅂㄱ|ㅂ ㅎ|ㅅㅂ| ㅇㄹ| ㅇ ㅎ|ㅈ ㅎ|ㄷ|ㅂ ㅎ| ㅎㅅ| ㅎ'\n).split('|')\n\n/** Normalizes each character into standard form */\nfunction normalizeChar(c: string) {\n  if (c.length !== 1) {\n    throw Error(\n      '[normalizeChar] Length of string should be 1, not ' + c.length + ': ' + c\n    )\n  }\n\n  function _get(arr: string[], ref: string, divisor = 1) {\n    let idx = c.charCodeAt(0) - ref.charCodeAt(0)\n    idx = Math.floor(idx / divisor)\n    if (idx >= 0 && idx < arr.length) {\n      return arr[idx]\n    }\n    return ''\n  }\n\n  if (c >= '\\u1100' && c <= '\\u11FF') {\n    return _get(U1100, '\\u1100')\n  } else if (c >= '\\u302E' && c <= '\\u302F') {\n    return ''\n  } else if (c >= '\\u3131' && c <= '\\u3164') {\n    return _get(JAMO, '\\u3131')\n  } else if (c >= '\\u3165' && c <= '\\u318E') {\n    return _get(U3165, '\\u3165')\n  } else if (c >= '\\uA960' && c <= '\\uA97C') {\n    return _get(UA960, '\\uA960')\n  } else if (c >= '\\uAC00' && c <= '\\uD7AF') {\n    return _get(U1100, '\\uAC00', 588)\n  } else if (c >= '\\uD7B0' && c <= '\\uD7C6') {\n    return ''\n  } else if (c >= '\\uD7CB' && c <= '\\uD7FB') {\n    return ''\n  } else if (c >= '\\uFFA0' && c <= '\\uFFBE') {\n    return _get(JAMO, '\\uFFA1')\n  } else if ('ￂￃￄￅￆￇￊￋￌￍￎￏￒￓￔￕￖￗￚￛￜ'.indexOf(c) >= 0) {\n    return ''\n  } else return ' '\n}\n\nexport function normalize(sentence: string) {\n  const normalized = sentence.split('').map(normalizeChar).join('')\n  return normalized.split(/( )/)\n}\n\nfunction mergeMetadata(a: AS.Metadata, b: AS.Metadata) {\n  return new AS.Metadata(a.filename, a.line_no, a.start_col, b.end_col, a.line)\n}\n\nfunction tokenize(filename: string, sentence: string) {\n  const lines = sentence.split('\\n')\n  const characters = lines.flatMap((line, i) =>\n    (line + '\\n').split('').flatMap((c, j) =>\n      normalize(c)\n        .filter((d) => d !== '')\n        .map((d): [string, AS.Metadata] => [\n          d,\n          new AS.Metadata(filename, i, j, j + 1, line),\n        ])\n    )\n  )\n  if (characters.length === 0) return []\n\n  let tokens = [characters[0]]\n  for (const [cur, metadata] of characters.slice(1)) {\n    const top = tokens.pop()\n    if (top == null) throw Error('Internal::tokenize::EMPTY_STACK')\n    const [prev, prevMetadata] = top\n    if (prev === ' ' && cur === ' ') {\n      tokens.push([prev, prevMetadata])\n    } else if (prev !== ' ' && cur !== ' ') {\n      tokens.push([prev + cur, mergeMetadata(prevMetadata, metadata)])\n    } else {\n      tokens.push([prev, prevMetadata])\n      tokens.push([cur, metadata])\n    }\n  }\n  return tokens.filter(([c, metadata]) => c !== ' ')\n}\n\n/* Parses jamo-encoded variable length integer into JS Number */\nexport function parseNumber(s: string): bigint {\n  const tbl = 'ㄱㄴㄷㄹㅁㅂㅅㅈ'\n  const varlen = s.split('').map(function (c) {\n    return tbl.indexOf(c)\n  })\n  if (varlen.indexOf(-1) !== -1) {\n    throw SyntaxError('Argument ' + s + ' has an unsupported character')\n  }\n  let num = BigInt('0o' + varlen.reverse().join(''))\n  if (s.length % 2 === 0) {\n    num = -num\n  }\n  return num\n}\n\n/* Encodes JS integer to jamo-encoded variable length integer. */\nexport function encodeNumber(number: number | bigint) {\n  const isNegative = number < 0\n  number = number >= 0 ? number : -number\n  const oct = number.toString(8).split('').reverse()\n  const tbl = 'ㄱㄴㄷㄹㅁㅂㅅㅈ'\n  let encoded = oct.map((s) => tbl[+s]).join('')\n  if ((encoded.length % 2 === 0) !== isNegative) {\n    encoded += 'ㄱ'\n  }\n  return encoded\n}\n\n/** Parses concrete syntax to abstract syntax\n * @param token token to parse\n * @param stack list of parsed legal arguments so far that we will modify\n */\nfunction parseToken(token: [string, AS.Metadata], stack: AS.AST[]) {\n  const [word, metadata] = token\n  if (word.indexOf('ㅎ') !== -1) {\n    const arity = word.slice(1)\n\n    if (arity) {\n      // AS.FunCall\n      const _arity = Number(parseNumber(arity))\n      if (_arity < 0) {\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          `함수 호출 시 ${_arity}개의 인수를 요구했습니다.`\n        )\n      }\n\n      const fun = stack.pop()\n      if (fun == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '호출할 함수가 없습니다.'\n        )\n      if (_arity === 0) {\n        stack.push(new AS.FunCall(metadata, fun, []))\n      } else {\n        const argv = stack.splice(-_arity, _arity)\n        if (argv.length < _arity) {\n          throw new E.UnsuspectedHangeulSyntaxError(\n            metadata,\n            `함수 호출 시 ${_arity}개의 인수를 요구했으나 표현식이 ${argv.length}개밖에 없습니다.`\n          )\n        }\n        stack.push(new AS.FunCall(metadata, fun, argv))\n      }\n    } else {\n      // AS.FunDef\n      const body = stack.pop()\n      if (body == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '함수 몸통이 없습니다.'\n        )\n      stack.push(new AS.FunDef(metadata, body))\n    }\n  } else if (word.indexOf('ㅇ') !== -1) {\n    const trailer = word.slice(1)\n    if (trailer !== '') {\n      // AS.ArgRef\n      const relA = stack.pop()\n      if (relA == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '인수 참조 구문이 잘못되었습니다.'\n        )\n      const relF = Number(parseNumber(trailer))\n      stack.push(new AS.ArgRef(metadata, relA, relF))\n    } else {\n      // AS.FunRef\n      const relF = stack.pop()\n      if (relF == null)\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          '함수 참조 구문이 잘못되었습니다.'\n        )\n      if (!(relF instanceof AS.Literal)) {\n        throw new E.UnsuspectedHangeulSyntaxError(\n          metadata,\n          `함수 참조 시에는 정수 리터럴만 허용됩니다.`\n        )\n      }\n      stack.push(new AS.FunRef(metadata, Number(relF.value)))\n    }\n  } else {\n    stack.push(new AS.Literal(metadata, parseNumber(word)))\n  }\n}\n\n/* Parses program into abstract syntax */\nexport function parse(filename: string, sentence: string) {\n  const tokens = tokenize(filename, sentence)\n  const stack: AS.AST[] = []\n  for (const token of tokens) {\n    parseToken(token, stack)\n  }\n  return stack\n}\n","import * as AS from './abstractSyntax'\nimport { parseNumber } from './parse'\n\nexport class UnsuspectedHangeulBuiltinError extends AS.UnsuspectedHangeulError {\n  constructor(metadata: AS.Metadata, message: string, codes: bigint[]) {\n    const _codes = [parseNumber('ㅂ'), ...codes]\n    const argv = _codes.map((code) => new AS.IntegerV(code))\n    const err = new AS.ErrorV([metadata], message, argv)\n    super(err)\n  }\n}\n\nexport class UnsuspectedHangeulOSError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㅈ') // 체제\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulArithmeticError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅅㅅ') // 산술\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulSyntaxError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅁㅂ') // 문법\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulTypeError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㄱ') // 꼴\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulValueError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㅁ') // 잘못\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulDivisionError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㄴㄴ') // 나누기\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulNotFoundError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅁㅈ') // 못찾\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulImportError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅂ') // 불러오기\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulOutOfRangeError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅂㄱ') // 바깥\n    super(metadata, message, [code])\n  }\n}\n\nexport class UnsuspectedHangeulKeyboardInterruptError extends UnsuspectedHangeulBuiltinError {\n  constructor(metadata: AS.Metadata, message: string) {\n    const code = parseNumber('ㅈㄷ') // 중단\n    super(metadata, message, [code])\n  }\n}\n","/** Useful utilities **/\nimport * as AS from './abstractSyntax'\nimport * as E from './error'\n\nexport function isLiteralExpr(\n  expr: AS.Value\n): expr is AS.ExprV & { expr: AS.Literal } {\n  return expr instanceof AS.ExprV && expr.expr instanceof AS.Literal\n}\n\nexport function extractValue<T>(arg: { value: T }): T {\n  return arg.value\n}\n\nexport function getLength(arg: { length: number } | ArrayBuffer) {\n  return 'length' in arg ? arg.length : arg.byteLength\n}\n\nexport function joinArrayBuffer(bufs: ArrayBuffer[]) {\n  const size = bufs.map((a) => a.byteLength).reduce((a, b) => a + b, 0)\n  const newBuf = new ArrayBuffer(size)\n  const view = new Uint8Array(newBuf)\n  bufs.reduce(function (idx, buf) {\n    view.set(new Uint8Array(buf), idx)\n    return idx + buf.byteLength\n  }, 0)\n  return newBuf\n}\n\nexport function recursiveMap(\n  item: AS.Value,\n  fn: (value: AS.Value) => AS.StrictValue\n): AS.StrictValue {\n  const _item = fn(item)\n  if (_item instanceof AS.ListV) {\n    return new AS.ListV(_item.value.map((v) => recursiveMap(v, fn)))\n  }\n  if (_item instanceof AS.DictV) {\n    const d = _item.value\n    const result: Record<string, AS.StrictValue> = {}\n    Object.keys(d).forEach(function (k) {\n      result[k] = recursiveMap(d[k], fn)\n    })\n    return new AS.DictV(result)\n  }\n  if (_item instanceof AS.ErrorV) {\n    return new AS.ErrorV(\n      _item.metadatas,\n      _item.message,\n      _item.value.map((v) => recursiveMap(v, fn))\n    )\n  }\n  return _item\n}\n\nexport function allEqual<T>(arr: T[]): boolean {\n  if (arr.length === 0) return true\n  return arr.every(function (a) {\n    return a === arr[0]\n  })\n}\n\n/* Argument constraint checkers */\nexport function isType<T extends AS.StrictValueType>(\n  argv: AS.StrictValue[],\n  desiredTypes: readonly T[]\n): argv is InstanceType<T>[] {\n  function _matches(arg: AS.StrictValue) {\n    return desiredTypes.some(function (desiredType) {\n      return arg instanceof desiredType\n    })\n  }\n  return argv.every(_matches)\n}\n\nfunction _formatArray(arr: string[], conj = ', ') {\n  return arr.join(conj)\n}\n\nexport function checkType<T extends AS.StrictValueType>(\n  metadata: AS.Metadata,\n  argv: AS.StrictValue[],\n  desiredTypes: readonly T[]\n): InstanceType<T>[] {\n  if (isType(argv, desiredTypes)) return argv\n  const desiredTypeNames = desiredTypes.map((t) => t.typeName)\n  const argTypeNames = argv.map(\n    (a) => (a.constructor as AS.StrictValueType).typeName\n  )\n  throw new E.UnsuspectedHangeulTypeError(\n    metadata,\n    `인수를 ${_formatArray(desiredTypeNames)} 중에서 주어야 하는데 ` +\n      `${josa(_formatArray(argTypeNames), '을', '를')} 주었습니다.`\n  )\n}\n\nexport function checkArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  desiredArities: number | number[]\n) {\n  const arities = Array.isArray(desiredArities)\n    ? desiredArities\n    : [desiredArities]\n  if (arities.indexOf(argv.length) !== -1) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${_formatArray(\n      arities.map((a) => a.toString()),\n      '개나 '\n    )}개를 주어야 하는데 ` + `${argv.length}개의 인수를 주었습니다.`\n  )\n}\n\nexport function checkMinArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  minimumArity: number\n) {\n  if (argv.length >= minimumArity) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${minimumArity}개 이상 주어야 하는데` +\n      `${argv.length}개 주었습니다.`\n  )\n}\n\nexport function checkMaxArity<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  maximumArity: number\n) {\n  if (argv.length <= maximumArity) return\n  throw new E.UnsuspectedHangeulValueError(\n    metadata,\n    `인수를 ${maximumArity}개 이하 주어야 하는데` +\n      `${argv.length}개 주었습니다.`\n  )\n}\n\nexport function matchDefaults<T>(\n  metadata: AS.Metadata,\n  argv: T[],\n  arity: number,\n  defaults?: T[]\n) {\n  if (defaults === undefined) {\n    defaults = []\n  }\n  checkMaxArity(metadata, argv, arity)\n  checkMinArity(metadata, argv, arity - defaults.length)\n  if (argv.length < arity) {\n    let deficiency = arity - argv.length\n    argv = argv.concat(defaults.slice(-deficiency))\n  }\n  return argv\n}\n\nexport function josa(\n  content: string,\n  particleBatchim: string,\n  particleNoBatchim: string\n): string {\n  if (content.length === 0) return content + particleBatchim\n  const lastCode = content.charCodeAt(content.length - 1)\n  if (lastCode < 0xac00 || lastCode > 0xd7a3) return content + particleBatchim\n  const hasBatchim = (lastCode - 0xac00) % 28 !== 0\n  return content + (hasBatchim ? particleBatchim : particleNoBatchim)\n}\n","import Complex from 'complex.js'\n\nimport * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { add, div, mod, mul, pow } from '../numbers'\nimport {\n  checkArity,\n  checkMinArity,\n  checkType,\n  extractValue,\n  isType,\n  joinArrayBuffer,\n} from '../utils'\n\nexport function wrapNumber(num: bigint | number | Complex) {\n  if (typeof num === 'bigint') return new AS.IntegerV(num)\n  if (num instanceof Complex) return new AS.ComplexV(num)\n  return new AS.FloatV(num)\n}\n\n/** Returns (g, x, y) such that a*x + b*y = g = gcd(a, b) */\nfunction extendedGcd(a: bigint, b: bigint): [bigint, bigint, bigint] {\n  let [x, x_old, y, y_old] = [0n, 1n, 1n, 0n]\n  while (a !== 0n) {\n    const quotient = b / a\n    ;[a, b] = [b % a, a]\n    ;[y, y_old] = [y_old, y - quotient * y_old]\n    ;[x, x_old] = [x_old, x - quotient * x_old]\n  }\n  return [b, x, y]\n}\n\nfunction modularInverse(num: bigint, modulo: bigint) {\n  const [g, inverse, _] = extendedGcd(num % modulo, modulo)\n  if (g === 1n) return (inverse + modulo) % modulo\n  throw Error(`법 ${modulo}에 대한 ${num}의 역원이 없습니다.`)\n}\n\nfunction modPow(base: bigint, exponent: bigint, modulo: bigint): bigint {\n  if (modulo === 0n) throw Error(`0을 법으로 할 수 없습니다.`)\n  base = base % modulo\n  let result = 1n\n  if (exponent < 0n) {\n    exponent = -exponent\n    base = modularInverse(base, modulo)\n  }\n  while (exponent > 0n) {\n    if (base === 0n) return 0n\n    if (exponent % 2n === 1n) result = (result * base) % modulo\n    exponent /= 2n\n    base = base ** 2n % modulo\n  }\n  return result\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _multiply(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkMinArity(metadata, argv, 1)\n    const first = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.BooleanV, ...AS.NumberV]\n    )\n    if (isType(first, AS.NumberV)) {\n      const _argv = checkType(metadata, argv.map(strict), AS.NumberV)\n      return wrapNumber(_argv.map((arg) => arg.value).reduce(mul))\n    }\n\n    // short-circuiting\n    for (const arg of argv) {\n      const [_arg] = checkType(metadata, [strict(arg)], [AS.BooleanV])\n      if (!_arg.value) return new AS.BooleanV(false)\n    }\n    return new AS.BooleanV(true)\n  }\n\n  function _add(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkMinArity(metadata, argv, 1)\n    const first = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.BooleanV, AS.DictV, ...AS.NumberV, ...AS.SequenceV]\n    )\n    if (isType(first, [AS.BooleanV])) {\n      // short-circuiting\n      for (const arg of argv) {\n        const [_arg] = checkType(metadata, [strict(arg)], [AS.BooleanV])\n        if (_arg.value) return new AS.BooleanV(true)\n      }\n      return new AS.BooleanV(false)\n    }\n\n    if (isType(first, [AS.StringV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.StringV])\n      return new AS.StringV(_argv.map((arg) => arg.str).join(''))\n    }\n    if (isType(first, [AS.BytesV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.BytesV])\n      return new AS.BytesV(joinArrayBuffer(_argv.map(extractValue)))\n    }\n    if (isType(first, [AS.ListV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.ListV])\n      return new AS.ListV(_argv.map(extractValue).reduce((a, b) => a.concat(b)))\n    }\n    if (isType(first, [AS.DictV])) {\n      const _argv = checkType(metadata, argv.map(strict), [AS.DictV])\n      const result = {}\n      _argv.map(extractValue).forEach((d) => Object.assign(result, d))\n      return new AS.DictV(result)\n    }\n    const _argv = checkType(metadata, argv.map(strict), AS.NumberV)\n    return wrapNumber(_argv.map((arg) => arg.value).reduce(add))\n  }\n\n  function _exponentiate(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    const _argv = checkType(metadata, argv.map(strict), AS.NumberV)\n    if (_argv.length === 3) {\n      const [base, exp, mod] = checkType(metadata, _argv, [AS.IntegerV])\n      try {\n        return new AS.IntegerV(modPow(base.value, exp.value, mod.value))\n      } catch (err) {\n        if (err instanceof Error) {\n          throw new E.UnsuspectedHangeulArithmeticError(metadata, err.message)\n        }\n        throw err\n      }\n    }\n    checkArity(metadata, _argv, 2)\n    try {\n      return wrapNumber(pow(_argv[0].value, _argv[1].value))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulDivisionError(metadata, error.message)\n      }\n      throw error\n    }\n  }\n\n  function _integerDivision(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(strict), AS.RealV)\n    try {\n      return wrapNumber(div(_argv[0].value, _argv[1].value))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulDivisionError(\n          metadata,\n          '0의 역수를 구하려고 했습니다.'\n        )\n      }\n      throw error\n    }\n  }\n\n  function _remainder(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(strict), AS.RealV)\n    try {\n      return wrapNumber(mod(_argv[0].value, _argv[1].value))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulDivisionError(\n          metadata,\n          '0의 역수를 구하려고 했습니다.'\n        )\n      }\n      throw error\n    }\n  }\n\n  return {\n    ㄱ: _multiply,\n    ㄷ: _add,\n    ㅅ: _exponentiate,\n    ㄴㄴ: _integerDivision,\n    ㄴㅁ: _remainder,\n  }\n}\n","import Complex from 'complex.js'\n\nimport * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { arrayToInt, toComplex } from '../numbers'\nimport { checkArity, checkType, isType, matchDefaults } from '../utils'\n\nfunction _parseStrToNumber(\n  metadata: AS.Metadata,\n  argv: AS.StrictValue[]\n): [string, number] {\n  const _argv = matchDefaults(metadata, argv, 2, [new AS.IntegerV(10n)])\n  const [str] = checkType(metadata, [_argv[0]], [AS.StringV])\n  const [num] = checkType(metadata, [_argv[1]], [AS.IntegerV])\n  return [str.str, Number(num.value)]\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _list(metadata: AS.Metadata, argv: AS.Value[]) {\n    return new AS.ListV(argv)\n  }\n  function _dict(metadata: AS.Metadata, argv: AS.Value[]) {\n    const len = argv.length\n    if (len % 2 === 1) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `ㅅㅈ 함수에는 인수를 짝수 개로 주어야 하는데 ${len}개를 주었습니다.`\n      )\n    }\n    const keys = argv.filter((_, i) => i % 2 === 0)\n    const values = argv.filter((_, i) => i % 2 === 1)\n    const _keys = keys.map(strict).map((key) => key.asKey(strict))\n    const result: Record<string, AS.Value> = {}\n    for (let i = 0; i < len / 2; i++) {\n      result[_keys[i]] = values[i]\n    }\n    return new AS.DictV(result)\n  }\n  function _string(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [0, 1])\n    if (argv.length === 0) return new AS.StringV('')\n    const [arg] = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.StringV, ...AS.NumberV]\n    )\n    if (arg instanceof AS.StringV) return arg\n    return new AS.StringV(arg.format(strict))\n  }\n  function _integer(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [\n      AS.StringV,\n      ...AS.RealV,\n    ])\n    const first = [_argv[0]]\n    if (isType(first, AS.RealV)) {\n      checkArity(metadata, _argv, 1)\n      if (first[0] instanceof AS.IntegerV) return first[0]\n      const value = Math.trunc(first[0].value)\n      return new AS.IntegerV(BigInt(value))\n    }\n    const [digits, radix] = _parseStrToNumber(metadata, _argv)\n    try {\n      return new AS.IntegerV(arrayToInt(digits, radix))\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new E.UnsuspectedHangeulValueError(metadata, error.message)\n      }\n      throw error\n    }\n  }\n  function _float(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [\n      AS.StringV,\n      ...AS.RealV,\n    ])\n    const first = [_argv[0]]\n    if (isType(first, AS.RealV)) {\n      checkArity(metadata, _argv, 1)\n      return new AS.FloatV(Number(first[0].value))\n    }\n    const [digits, radix] = _parseStrToNumber(metadata, _argv)\n    if (radix === 10) {\n      const num = Number(digits)\n      if (isNaN(num))\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `다음 문자열을 실수값으로 변환할 수 없습니다: '${digits}'`\n        )\n      return new AS.FloatV(num)\n    }\n    const splitted = digits.trim().split('.')\n    let significant = splitted.join('')\n    if (significant[0] === '+') significant = significant.slice(1)\n    try {\n      const _significant = Number(arrayToInt(significant, radix))\n      const order = splitted.length > 1 ? splitted[1].length : 0\n      return new AS.FloatV(_significant / radix ** order)\n    } catch (error) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `다음 문자열을 실수값으로 변환할 수 없습니다: '${digits}'`\n      )\n    }\n  }\n  function _complex(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [\n      AS.StringV,\n      ...AS.NumberV,\n    ])\n    if (argv.length === 1) {\n      const arg = _argv[0] instanceof AS.StringV ? _argv[0].str : _argv[0].value\n      try {\n        return new AS.ComplexV(toComplex(arg))\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new E.UnsuspectedHangeulValueError(\n            metadata,\n            `다음 문자열을 복소수값으로 변환할 수 없습니다: ${arg}`\n          )\n        }\n        throw error\n      }\n    }\n    const __argv = checkType(metadata, _argv, AS.NumberV)\n    const values = __argv.map((arg) => toComplex(arg.value))\n    const re = values[0].re - values[1].im\n    const im = values[0].im + values[1].re\n    return new AS.ComplexV(Complex({ re, im }))\n  }\n  function _nil(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.NilV()\n  }\n  function _exception(metadata: AS.Metadata, argv: AS.Value[]) {\n    const _argv = argv.map(strict)\n    const message = `사용자 예외: ${_argv.map((v) => v.format(strict))}`\n    return new AS.ErrorV([metadata], message, _argv)\n  }\n\n  return {\n    ㅅㅈ: _dict,\n    ㅁㄹ: _list,\n    ㅁㅈ: _string,\n    ㅈㅅ: _integer,\n    ㅅㅅ: _float,\n    ㅂㅅ: _complex,\n    ㅂㄱ: _nil,\n    ㄷㅂ: _exception,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType } from '../utils'\n\nclass PipeV extends AS.FunctionV {\n  constructor(private funs: AS.Evaluation[]) {\n    super('연결된 ')\n  }\n\n  execute(metadata: AS.Metadata, args: AS.Value[]) {\n    const result = this.funs.reduce((argv, f) => [f(metadata, argv)], args)\n    return result[0]\n  }\n}\nclass CollectV extends AS.FunctionV {\n  constructor(private fn: AS.Evaluation, private strict: AS.StrictFn) {\n    super('모아 받는 ')\n  }\n\n  execute(metadata: AS.Metadata, args: AS.Value[]) {\n    checkArity(metadata, args, 1)\n    const seq = this.strict(args[0])\n    const [_seq] = checkType(metadata, [seq], [AS.ListV, AS.ErrorV])\n    return this.fn(metadata, _seq.value)\n  }\n}\nclass SpreadV extends AS.FunctionV {\n  constructor(private fn: AS.Evaluation) {\n    super('펼쳐 받는 ')\n  }\n\n  execute(metadata: AS.Metadata, args: AS.Value[]) {\n    return this.fn(metadata, [new AS.ListV(args)])\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _proc(metadata: AS.Metadata) {\n    return (fun: AS.Value) => procFunctional(metadata, fun, true)\n  }\n  function _pipe(metadata: AS.Metadata, argv: AS.Value[]) {\n    return new PipeV(argv.map(_proc(metadata)))\n  }\n  function _collect(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    return new CollectV(_proc(metadata)(argv[0]), strict)\n  }\n  function _spread(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    return new SpreadV(_proc(metadata)(argv[0]))\n  }\n  return {\n    ㄴㄱ: _pipe,\n    ㅁㅂ: _collect,\n    ㅂㅂ: _spread,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { encodeNumber } from '../parse'\nimport {\n  checkArity,\n  checkMaxArity,\n  checkMinArity,\n  checkType,\n  recursiveMap,\n} from '../utils'\n\nconst MODE_TABLE = {\n  ㄹ: 'r',\n  ㅈㄹ: 'w',\n  ㅈㄱ: 'a',\n  ㄹㅈㄹ: 'r+',\n  ㅈㄹㄹ: 'w+',\n  ㅈㄱㄹ: 'a+',\n} as const\n\nclass FileV extends AS.FunctionV {\n  constructor(private file: AS.File, private strict: AS.StrictFn) {\n    super('파일 접근 ')\n  }\n  execute(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkMinArity(metadata, argv, 1)\n    const [command] = checkType(metadata, argv.slice(-1).map(this.strict), [\n      AS.IntegerV,\n    ])\n    const commandStr = encodeNumber(command.value)\n    if (commandStr === 'ㄷ') {\n      return this.close(metadata, argv)\n    } else if (commandStr === 'ㄹ') {\n      return this.read(metadata, argv)\n    } else if (commandStr === 'ㅈㄹ') {\n      return this.write(metadata, argv)\n    } else if (commandStr === 'ㅈ') {\n      return this.seekOrTell(metadata, argv)\n    } else if (commandStr === 'ㄱ') {\n      return this.truncate(metadata, argv)\n    } else {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `${commandStr}은 파일 객체가 인식하지 못하는 명령입니다.`\n      )\n    }\n  }\n  private close(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 1)\n    return new AS.IOV('FileV::close', [this], async (doIO, ioUtils) => {\n      try {\n        this.file.close()\n        return new AS.NilV()\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 닫기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n  private read(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 2)\n    const [count] = checkType(metadata, [this.strict(argv[0])], [AS.IntegerV])\n    return new AS.IOV('FileV::read', [this, count], async (doIO, ioUtils) => {\n      try {\n        const content = await this.file.read(Number(count.value))\n        return new AS.BytesV(content)\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 읽기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n  private write(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 2)\n    const [content] = checkType(metadata, [this.strict(argv[0])], [AS.BytesV])\n    return new AS.IOV(\n      'FileV::write',\n      [this, content],\n      async (doIO, ioUtils) => {\n        try {\n          const count = this.file.write(content.value)\n          return new AS.IntegerV(BigInt(count))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일 쓰기에 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n  private seekOrTell(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkMaxArity(metadata, argv, 3)\n    const _argv = argv.map(this.strict)\n    if (argv.length === 1) {\n      return new AS.IOV('FileV::seekOrTell', [this], async (doIO, ioUtils) => {\n        try {\n          return new AS.IntegerV(BigInt(this.file.tell()))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일의 어디를 읽고 있는지 알아내는 데 실패하였습니다: ${error}`\n          )\n        }\n      })\n    }\n\n    let whence: 'SEEK_SET' | 'SEEK_CUR' = 'SEEK_SET'\n    let offset: AS.IntegerV\n    if (argv.length === 2) {\n      ;[offset] = checkType(metadata, [_argv[0]], [AS.IntegerV])\n    } else {\n      ;[offset] = checkType(metadata, [_argv[1]], [AS.IntegerV])\n      let [_whence] = checkType(metadata, [_argv[0]], [AS.IntegerV])\n      switch (encodeNumber(_whence.value)) {\n        case 'ㅅㅈㅂㄷ':\n          whence = 'SEEK_SET'\n          break\n        case 'ㅈㄱㅂㄷ':\n          whence = 'SEEK_CUR'\n          break\n        default:\n          throw new E.UnsuspectedHangeulValueError(\n            metadata,\n            `파일 객체의 ㅈ 명령에 주는 위치 인수로 ${_whence.value}은 적절하지 않습니다.`\n          )\n      }\n    }\n    return new AS.IOV(\n      'FileV::seekOrTell',\n      [this, ..._argv.slice(0, -1)],\n      async (doIO, ioUtils) => {\n        try {\n          const pos = this.file.seek(Number(offset.value), whence)\n          return new AS.IntegerV(BigInt(pos))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일의 읽는 위치를 수정하는 데 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n  private truncate(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkMaxArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(this.strict), [AS.IntegerV])\n    const size = _argv.length > 1 ? Number(_argv[0].value) : undefined\n    return new AS.IOV(\n      'FileV::truncate',\n      [this, ..._argv.slice(0, -1)],\n      async (doIO, ioUtils) => {\n        try {\n          const newSize = this.file.truncate(size)\n          return new AS.IntegerV(BigInt(newSize))\n        } catch (error) {\n          throw new E.UnsuspectedHangeulOSError(\n            metadata,\n            `파일 크기를 재조정하는 데 실패하였습니다: ${error}`\n          )\n        }\n      }\n    )\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _input(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.IOV('ㄹ', argv, async function (doIO, ioUtils) {\n      const input = await ioUtils.input()\n      return input == null ? new AS.NilV() : new AS.StringV(input)\n    })\n  }\n  function _print(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const _argv = checkType(metadata, argv.map(strict), [AS.StringV])\n    return new AS.IOV('ㅈㄹ', _argv, async function (doIO, ioUtils) {\n      ioUtils.print(_argv[0].str)\n      return new AS.NilV()\n    })\n  }\n  function _return(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const arg = recursiveMap(argv[0], strict)\n    return new AS.IOV('ㄱㅅ', [arg], async function (doIO, ioUtils) {\n      return arg\n    })\n  }\n  function _bind(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    const [ioToBind] = checkType(metadata, [strict(argv[0])], [AS.IOV])\n    return new AS.IOV('ㄱㄹ', argv, async function (doIO, ioUtils) {\n      let arg: AS.NonIOStrictValue\n      try {\n        arg = await doIO(ioToBind)\n      } catch (error) {\n        if (error instanceof AS.UnsuspectedHangeulError) {\n          if (argv.length < 3) throw error\n          const result = procFunctional(metadata, argv[2])(metadata, [\n            error.err,\n          ])\n          const [_result] = checkType(metadata, [strict(result)], [AS.IOV])\n          return _result\n        }\n        throw error\n      }\n      const result = procFunctional(metadata, argv[1])(metadata, [arg])\n      const [_result] = checkType(metadata, [strict(result)], [AS.IOV])\n\n      return _result\n    })\n  }\n  function _file(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const [path] = checkType(\n      metadata,\n      [strict(argv[0])],\n      [AS.IntegerV, AS.StringV]\n    )\n    const _path = path instanceof AS.IntegerV ? Number(path.value) : path.str\n\n    const [mode] = checkType(metadata, [strict(argv[1])], [AS.IntegerV])\n    const modeStr = encodeNumber(mode.value)\n    if (!(modeStr in MODE_TABLE)) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `${modeStr}은 기본 제공 함수 ㄱㄴ이 이해하는 파일 열기 방식이 아닙니다.`\n      )\n    }\n    const _mode = MODE_TABLE[modeStr as keyof typeof MODE_TABLE]\n    return new AS.IOV('ㄱㄴ', [path, mode], async function (doIO, ioUtils) {\n      try {\n        return new FileV(loadUtils.open(_path, _mode), strict)\n      } catch (error) {\n        throw new E.UnsuspectedHangeulOSError(\n          metadata,\n          `파일 열기에 실패하였습니다: ${error}`\n        )\n      }\n    })\n  }\n\n  return {\n    ㄹ: _input,\n    ㅈㄹ: _print,\n    ㄱㅅ: _return,\n    ㄱㄹ: _bind,\n    ㄱㄴ: _file,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { arrayToInt, intToArray } from '../numbers'\nimport { checkArity, checkType } from '../utils'\n\nfunction _isBigEndianSystem() {\n  // Copied from:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView#endianness\n  const buffer = new ArrayBuffer(2)\n  new DataView(buffer).setInt16(0, 256, false /* big endian */)\n  // Int16Array uses the platform's endianness.\n  return new Int16Array(buffer)[0] === 256\n}\n\nfunction _write(\n  view: DataView,\n  arr: number[],\n  numBytes: number,\n  bigEndian?: boolean\n) {\n  const _set = {\n    1: view.setUint8.bind(view),\n    2: view.setUint16.bind(view),\n    4: view.setUint32.bind(view),\n  }[numBytes]\n  if (_set == null) throw Error()\n  for (let i = 0; i < arr.length; i++) {\n    _set(i * numBytes, arr[i], !bigEndian)\n  }\n}\n\nfunction _read(view: DataView, numBytes: number, bigEndian?: boolean) {\n  const _get = {\n    1: view.getUint8.bind(view),\n    2: view.getUint16.bind(view),\n    4: view.getUint32.bind(view),\n  }[numBytes]\n  if (_get == null) throw Error()\n  var arr = []\n  for (let i = 0; i < view.byteLength; i += numBytes) {\n    arr.push(_get(i, !bigEndian))\n  }\n  return arr\n}\n\nfunction isExpressible(integer: bigint, numBytes: bigint, signed: boolean) {\n  const bound = 2n << (8n * numBytes)\n  if (signed) return -bound / 2n <= integer && integer < bound / 2n\n  return 0n <= integer && integer < bound\n}\n\nconst CODEC_TBL = ['utf', 'unsigned', 'signed', 'float'] as const\n\nclass Codec extends AS.FunctionV {\n  private scheme: (typeof CODEC_TBL)[number]\n  private numBytes: number\n  private bigEndian?: boolean\n  private endianness: 'big' | 'little' | ''\n  private codec: AS.Evaluation\n  constructor(\n    public strict: AS.StrictFn,\n    metadata: AS.Metadata,\n    scheme: AS.StrictValue,\n    numBytes: AS.StrictValue,\n    bigEndian?: AS.StrictValue\n  ) {\n    super()\n    const [_scheme, _numBytes] = checkType(\n      metadata,\n      [scheme, numBytes],\n      [AS.IntegerV]\n    )\n    this.scheme = CODEC_TBL[Number(_scheme.value)]\n    this.numBytes = Number(_numBytes.value)\n    this.endianness = ''\n    if (bigEndian) {\n      const [_bigEndian] = checkType(metadata, [bigEndian], [AS.BooleanV])\n      this.bigEndian = _bigEndian.value\n      this.endianness = this.bigEndian ? 'big' : 'little'\n    }\n    this.codec = this.getCodec()\n\n    this.str =\n      '<Codec(scheme=' +\n      this.scheme +\n      ', num_bytes=' +\n      this.numBytes +\n      ', big_endian=' +\n      this.bigEndian +\n      ')>'\n  }\n\n  execute(metadata: AS.Metadata, argv: AS.Value[]) {\n    const _argv = argv.map(this.strict)\n    try {\n      return this.codec(metadata, _argv)\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) throw error\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `요청된 변환을 수행하지 못했습니다. 변환기: ${this.str}, 인수: ${_argv}`\n      )\n    }\n  }\n\n  getCodec(): AS.Evaluation {\n    switch (this.scheme) {\n      case 'utf':\n        return this.unicodeCodec\n      case 'signed':\n        return this.integerCodec\n      case 'unsigned':\n        return this.integerCodec\n      case 'float':\n        return this.floatingPointCodec\n    }\n  }\n\n  unicodeCodec(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const [arg] = checkType(metadata, argv.map(this.strict), [\n      AS.StringV,\n      AS.BytesV,\n    ])\n    if (arg instanceof AS.StringV) {\n      if (this.numBytes === 1) {\n        const encoder = new TextEncoder()\n        return new AS.BytesV(encoder.encode(arg.str).buffer)\n      }\n\n      let arr: number[]\n      if (this.numBytes === 2) {\n        arr = arg.str.split('').map((c) => c.charCodeAt(0))\n      } else if (this.numBytes === 4) {\n        arr = arg.value\n          .map((c) => c.codePointAt(0))\n          .filter((x): x is number => x != null)\n      } else {\n        throw new E.UnsuspectedHangeulValueError(\n          metadata,\n          `UTF-${this.numBytes * 8} 형식은 존재하지 않습니다.`\n        )\n      }\n\n      if (this.endianness === '') {\n        arr.unshift(0xfeff)\n      }\n      const buf = new ArrayBuffer(arr.length * this.numBytes)\n      _write(new DataView(buf), arr, this.numBytes, this.bigEndian)\n      return new AS.BytesV(buf)\n    } else {\n      const buf = arg.value\n      if (this.numBytes === 1) {\n        const decoder = new TextDecoder()\n        return new AS.StringV(decoder.decode(new Uint8Array(buf)))\n      }\n\n      let view = new DataView(buf)\n      let bigEndian = this.bigEndian ?? _isBigEndianSystem()\n      if (this.endianness === '') {\n        const getter = (\n          this.numBytes > 2 ? view.getUint32 : view.getUint16\n        ).bind(view)\n        const guessBigEndian = getter(0) === 0xfeff\n        if (guessBigEndian || getter(0, true) === 0xfeff) {\n          bigEndian = guessBigEndian\n          view = new DataView(buf, this.numBytes)\n        }\n      }\n      const arr = _read(view, this.numBytes, bigEndian)\n      return new AS.StringV(String.fromCodePoint(...arr))\n    }\n  }\n\n  integerCodec(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const signed = this.scheme === 'signed'\n    const [arg] = checkType(metadata, argv.map(this.strict), [\n      AS.IntegerV,\n      AS.BytesV,\n    ])\n    if (arg instanceof AS.IntegerV) {\n      let num = arg.value\n      const isNegative = num < 0\n\n      if (isNegative && !signed)\n        throw Error('음수는 부호 없는 정수 형식으로 변환할 수 없습니다.')\n      if (!isExpressible(num, BigInt(this.numBytes), signed))\n        throw Error(\n          `${this.numBytes}바이트로 표현할 수 없는 정수를 받았습니다.`\n        )\n\n      if (isNegative) num = ~num\n      const arr = intToArray(num, 256n).map(Number)\n      const buf = new ArrayBuffer(this.numBytes)\n      const u8 = new Uint8Array(buf)\n      u8.set(arr, this.numBytes - arr.length)\n      if (isNegative) u8.forEach((n, i) => (u8[i] = ~n))\n      if (!this.bigEndian) u8.reverse()\n      return new AS.BytesV(buf)\n    } else {\n      const buf = arg.value.slice(0)\n      const u8 = new Uint8Array(buf)\n      if (!this.bigEndian) u8.reverse()\n      const isNegative = signed && u8[0] & 0x80\n      if (isNegative) u8.forEach((n, i) => (u8[i] = ~n))\n      const arr = Array.from(u8)\n      let num = arrayToInt(arr, 256)\n      if (isNegative) num = ~num\n      return new AS.IntegerV(num)\n    }\n  }\n\n  floatingPointCodec(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    throw EvalError('Not yet implemented')\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function codec(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    const _argv = argv.map(strict)\n    const scheme = _argv[0]\n    const numBytes = _argv[1]\n    const bigEndian = _argv.length > 2 ? _argv[2] : undefined\n    return new Codec(strict, metadata, scheme, numBytes, bigEndian)\n  }\n\n  return { ㅂ: codec }\n}\n","import * as AS from '../abstractSyntax'\nimport { wrapNumber } from '../builtins/arithmetics'\nimport { JSNumber, abs, isclose, isinf, isnan, toComplex } from '../numbers'\nimport { checkArity, checkType, isType } from '../utils'\n\nfunction _rountToInf(x: number) {\n  return x > 0 ? Math.ceil(x) : Math.floor(x)\n}\nfunction _rountToEven(x: number) {\n  let rounded = Math.round(x)\n  if (x % 1 === 0.5 || x % 1 === -0.5) {\n    if (rounded % 2 === 1 || rounded % 2 === -1) rounded--\n  }\n  return rounded\n}\nfunction _wrapType<T, V>(type: { new (arg: V): T }) {\n  return (arg: V) => new type(arg)\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n) {\n  function _wrap<\n    ReturnInnerValue,\n    ReturnValue extends AS.StrictValue & { value: ReturnInnerValue },\n    ArgInnerValue extends InstanceType<ArgValue>['value'],\n    ArgValue extends (typeof AS.NumberV)[number]\n  >(\n    _fn: (...args: ArgInnerValue[]) => ReturnInnerValue,\n    arity: number,\n    retWrapper: (inner: ReturnInnerValue) => ReturnValue,\n    argType: readonly ArgValue[]\n  ) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, arity)\n      const _argv = checkType(metadata, argv.map(strict), argType)\n      const values = _argv.map(\n        (arg: InstanceType<ArgValue>) => arg.value as ArgInnerValue\n      )\n      return retWrapper(_fn(...values))\n    }\n  }\n\n  function _wrap2(\n    fnName: 'log' | 'sin' | 'asin' | 'cos' | 'acos' | 'tan' | 'atan'\n  ) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, 1)\n      const _argv = checkType(metadata, [strict(argv[0])], AS.NumberV)\n      if (isType(_argv, AS.RealV)) {\n        const value = Math[fnName](Number(_argv[0].value))\n        if (!isNaN(value)) return new AS.FloatV(value)\n      }\n      return new AS.ComplexV(toComplex(_argv[0].value)[fnName]())\n    }\n  }\n\n  function _wrapRound(_rounder: (x: number) => number) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, 1)\n      const [arg] = checkType(metadata, [strict(argv[0])], AS.RealV)\n      if (arg instanceof AS.IntegerV) return arg\n      const _arg = BigInt(_rounder(arg.value))\n      return new AS.IntegerV(_arg)\n    }\n  }\n  const _atan1 = _wrap2('atan')\n  const _atan2 = _wrap(\n    (y, x) => Math.atan2(Number(y), Number(x)),\n    2,\n    _wrapType(AS.FloatV),\n    AS.RealV\n  )\n  function _atan(metadata: AS.Metadata, argv: AS.Value[]) {\n    return argv.length === 2 ? _atan2(metadata, argv) : _atan1(metadata, argv)\n  }\n  return {\n    ㅅ: {\n      ㅂ: Math.PI,\n      ㅈ: Math.E,\n      ㅁ: Infinity,\n      ㄴ: NaN,\n      ㄱ: _wrap(\n        (a: JSNumber, b: JSNumber) => isclose(a, b),\n        2,\n        _wrapType(AS.BooleanV),\n        AS.NumberV\n      ),\n      ㄴㄴ: _wrap(isnan, 1, _wrapType(AS.BooleanV), AS.NumberV),\n      ㅁㄴ: _wrap(isinf, 1, _wrapType(AS.BooleanV), AS.NumberV),\n      ㅈㄷ: _wrap(abs, 1, wrapNumber, AS.NumberV),\n      ㄹㄱ: _wrap2('log'),\n      ㅅㄴ: _wrap2('sin'),\n      ㄴㅅ: _wrap2('asin'),\n      ㄱㅅ: _wrap2('cos'),\n      ㅅㄱ: _wrap2('acos'),\n      ㄷㄴ: _wrap2('tan'),\n      ㄴㄷ: _atan,\n      ㅂㄹ: {\n        ㄱ: _wrapRound(Math.trunc),\n        ㄴ: _wrapRound(Math.floor),\n        ㄷ: _wrapRound(_rountToEven),\n        ㄹ: _wrapRound(Math.ceil),\n        ㅁ: _wrapRound(_rountToInf),\n      },\n    },\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport { encodeNumber, normalize, parse, parseNumber } from '../parse'\nimport { checkArity, checkMinArity, checkType, isLiteralExpr } from '../utils'\n\nimport buildBitwise from '../modules/bitwise'\nimport buildByte from '../modules/byte'\nimport buildMath from '../modules/math'\n\ninterface ModuleTable\n  extends Record<string, number | AS.Evaluation | ModuleTable> {}\nconst BUILDERS: ((\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n) => ModuleTable)[] = [buildBitwise, buildByte, buildMath]\n\nvar MODULE_REGISTRY: Record<string, AS.Value> = {}\nvar BUILTIN_MODULE_REGISTRY = new AS.DictV({})\n\nfunction loadFromPath(path: string, utils: AS.LoadUtils) {\n  path = utils.normalizePath(path)\n  var module = MODULE_REGISTRY[path]\n  if (module) return module\n  const program = utils.load(path)\n  const exprs = parse(path, program)\n  if (exprs.length !== 1) {\n    throw new E.UnsuspectedHangeulValueError(\n      exprs[0].metadata,\n      `모듈에는 표현식이 하나만 있어야 하는데 ${exprs.length}개가 있습니다.`\n    )\n  }\n  const env = new AS.Env([], [], utils)\n  module = new AS.ExprV(exprs[0], env, null)\n  MODULE_REGISTRY[path] = module\n  return module\n}\n\nfunction loadFromLiteral(\n  metadata: AS.Metadata,\n  literals: bigint[],\n  utils: AS.LoadUtils\n) {\n  const name = literals.map(encodeNumber).join(' ')\n  const errMsg = `정수 리터럴열 ${name}에 맞는 모듈을 찾지 못했습니다.`\n  // Search builtins\n  if (literals[0] === 5n) {\n    var module: AS.Value = BUILTIN_MODULE_REGISTRY\n    for (const idx of literals.slice(1)) {\n      if (module instanceof AS.DictV) {\n        module = module.value[idx.toString()]\n      } else throw new E.UnsuspectedHangeulNotFoundError(metadata, errMsg)\n    }\n    return module\n  }\n  const path = searchLiteral(metadata, literals, '.', utils)\n  if (!path) throw new E.UnsuspectedHangeulNotFoundError(metadata, errMsg)\n  return loadFromPath(path, utils)\n}\n\nfunction searchLiteral(\n  metadata: AS.Metadata,\n  literals: bigint[],\n  location: string,\n  utils: AS.LoadUtils\n): string | null {\n  if (literals.length === 0) {\n    return utils.isFile(location) ? location : null\n  }\n  const cur = literals[0]\n  const sub = literals.slice(1)\n\n  const subentries = utils.listdir(location)\n  const found = subentries\n    .map((entry) => {\n      if (!matchesLiteral(entry, cur)) return null\n      const searchPath = utils.joinPath(location, entry)\n      return searchLiteral(metadata, sub, searchPath, utils)\n    })\n    .filter((x) => x)\n\n  if (found.length > 1) {\n    throw new E.UnsuspectedHangeulImportError(\n      metadata,\n      `${location}에 정수 리터럴열 ${literals}에 맞는 모듈이 ` +\n        `${found.length}개 있어 모호합니다.`\n    )\n  }\n  return found.length ? found[0] : null\n}\n\nfunction matchesLiteral(string: string, literal: bigint) {\n  string = normalize(string).join(' ').trim()\n  try {\n    return parseNumber(string) === literal\n  } catch (e) {\n    return false\n  }\n}\n\ntype LeafData = number | AS.Evaluation | ModuleData\ninterface ModuleData extends Record<string, LeafData> {}\nfunction constructBuiltinModule(data: LeafData, keys: string[]) {\n  if (typeof data === 'function') {\n    return new AS.BuiltinModuleV(data, keys.join(' '))\n  } else if (typeof data === 'number') {\n    return new AS.FloatV(data) // ad-hoc\n  }\n  return constructBuiltinModules(data, keys)\n}\nfunction constructBuiltinModules(data: ModuleData, keys: string[]) {\n  let newObj: Record<string, AS.Value> = {}\n  for (const key in data) {\n    newObj[parseNumber(key).toString()] = constructBuiltinModule(\n      data[key],\n      keys.concat([key])\n    )\n  }\n  return new AS.DictV(newObj)\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _registerBuiltinModule(\n    builder: (\n      procFunctional: AS.ProcFunctionalFn,\n      strict: AS.StrictFn,\n      loadUtils: AS.LoadUtils\n    ) => ModuleTable\n  ) {\n    let module = builder(procFunctional, strict, loadUtils)\n    const _module = constructBuiltinModules(module, ['ㅂ'])\n    Object.assign(BUILTIN_MODULE_REGISTRY.value, _module.value)\n  }\n  BUILDERS.forEach(_registerBuiltinModule)\n\n  function _load(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkMinArity(metadata, argv, 1)\n    if (argv.every(isLiteralExpr)) {\n      var literals = argv.map((arg) => arg.expr.value)\n      return loadFromLiteral(metadata, literals, loadUtils)\n    }\n    checkArity(metadata, argv, 1)\n    const [filepath] = checkType(metadata, [strict(argv[0])], [AS.StringV])\n    return loadFromPath(filepath.str, loadUtils)\n  }\n\n  return {\n    ㅂ: _load,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, extractValue } from '../utils'\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n) {\n  function _wrap(\n    op: (...args: bigint[]) => bigint,\n    arity: number\n  ): AS.Evaluation {\n    return function (metadata: AS.Metadata, argv: AS.Value[]) {\n      checkArity(metadata, argv, arity)\n      const _argv = checkType(metadata, argv.map(strict), [AS.IntegerV])\n      return new AS.IntegerV(op(..._argv.map(extractValue)))\n    }\n  }\n\n  return {\n    ㅂㄷ: {\n      ㄱ: _wrap((a, b) => a & b, 2),\n      ㄷ: _wrap((a, b) => a | b, 2),\n      ㅁ: _wrap((a) => ~a, 1),\n      ㅂ: _wrap((a, b) => a ^ b, 2),\n      ㅈ: _wrap((a, b) => a << b, 2),\n    },\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport * as E from '../error'\nimport {\n  checkArity,\n  checkType,\n  extractValue,\n  getLength,\n  matchDefaults,\n} from '../utils'\n\nfunction* slice<T>(arr: T[], start: number, end: number, step: number) {\n  const startIdx = start < 0 ? start + arr.length : start\n  const endIdx = end < 0 ? end + arr.length : end\n\n  if (step > 0) {\n    const _startIdx = Math.max(0, startIdx)\n    const _endIdx = Math.min(endIdx, arr.length)\n    for (let i = _startIdx; i < _endIdx; i += step) {\n      yield arr[i]\n    }\n  } else {\n    const _startIdx = Math.min(startIdx, arr.length - 1)\n    const _endIdx = Math.max(-1, endIdx)\n    for (let i = _startIdx; i > _endIdx; i += step) {\n      yield arr[i]\n    }\n  }\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _len(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const [seq] = checkType(metadata, argv.map(strict), [\n      ...AS.SequenceV,\n      AS.ErrorV,\n    ])\n    if (seq instanceof AS.BytesV) {\n      return new AS.IntegerV(BigInt(seq.value.byteLength))\n    }\n    return new AS.IntegerV(BigInt(seq.value.length))\n  }\n\n  function _slice(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3, 4])\n    const _argv = argv.map(strict)\n    const [seq] = checkType(metadata, [_argv[0]], AS.SequenceV)\n    const rest = checkType(metadata, _argv.slice(1), [AS.IntegerV])\n    const _rest = rest.map((arg) => Number(arg.value))\n    const [start, end, step] = matchDefaults(metadata, _rest, 3, [\n      getLength(seq.value),\n      1,\n    ])\n    if (step === 0) {\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        '0은 ㅂㅈ 함수의 네 번째 인수로 적합하지 않습니다.'\n      )\n    }\n\n    if (seq instanceof AS.ListV) {\n      const items = slice(seq.value, start, end, step)\n      return new AS.ListV(Array.from(items))\n    }\n    if (seq instanceof AS.StringV) {\n      const items = slice(seq.value, start, end, step)\n      return new AS.StringV(Array.from(items).join(''))\n    }\n    const _seq = Array.from(new Uint8Array(seq.value))\n    const sliced = slice(_seq, start, end, step)\n    return new AS.BytesV(new Uint8Array(sliced).buffer)\n  }\n\n  function _map(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const [seq] = checkType(metadata, [strict(argv[0])], [AS.ListV])\n    const fn = procFunctional(metadata, argv[1])\n    return new AS.ListV(seq.value.map((a) => fn(metadata, [a])))\n  }\n\n  function _filter(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const [seq] = checkType(metadata, [strict(argv[0])], [AS.ListV])\n    const fn = procFunctional(metadata, argv[1])\n\n    const fitCheck = seq.value.map((a) => fn(metadata, [a])).map(strict)\n    const fit = checkType(metadata, fitCheck, [AS.BooleanV]).map(extractValue)\n    return new AS.ListV(seq.value.filter((_, idx) => fit[idx]))\n  }\n\n  function _fold(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [2, 3])\n    let init: AS.Value | null = null\n    if (argv.length === 3) {\n      init = argv[1]\n      argv = [argv[0], argv[2]]\n    }\n\n    const first = strict(argv[0])\n    const fromRight = first instanceof AS.ListV\n    function maybeReversed<T>(arr: T[]): T[] {\n      if (!fromRight) return arr\n      return arr.slice().reverse()\n    }\n\n    argv = maybeReversed(argv)\n    const fn = procFunctional(metadata, argv[0])\n    const [seq] = checkType(metadata, [strict(argv[1])], [AS.ListV])\n\n    let feed = maybeReversed(seq.value)\n    if (init == null) {\n      init = feed[0]\n      feed = feed.slice(1)\n    }\n    return feed.reduce(function (acc, item) {\n      const args = maybeReversed([acc, item])\n      return fn(metadata, args)\n    }, init)\n  }\n\n  return {\n    ㅈㄷ: _len,\n    ㅂㅈ: _slice,\n    ㅁㄷ: _map,\n    ㅅㅂ: _filter,\n    ㅅㄹ: _fold,\n  }\n}\n","import * as AS from './abstractSyntax'\nimport * as E from './error'\nimport { encodeNumber } from './parse'\nimport { checkArity, checkType, isLiteralExpr } from './utils'\n\nimport buildArithmetics from './builtins/arithmetics'\nimport buildConstructors from './builtins/constructors'\nimport buildControl from './builtins/control'\nimport buildFunctional from './builtins/functional'\nimport buildIO from './builtins/io'\nimport buildLogic from './builtins/logic'\nimport buildModule from './builtins/module'\nimport buildSequence from './builtins/sequence'\nimport buildString from './builtins/string'\n\ntype BuiltinFunctionMap = Record<string, AS.Evaluation>\nconst BUILTINS: BuiltinFunctionMap = {}\nlet isBuilt = false\n\nconst _builders = [\n  buildArithmetics,\n  buildConstructors,\n  buildControl,\n  buildFunctional,\n  buildIO,\n  buildLogic,\n  buildModule,\n  buildSequence,\n  buildString,\n] as const\nfunction initBuiltins(loadUtils: AS.LoadUtils) {\n  if (isBuilt) return\n  for (const builder of _builders) {\n    Object.assign(BUILTINS, builder(procFunctional, strict, loadUtils))\n  }\n  isBuilt = true\n}\n\n/**\n * Finds the built-in function corresponding to the builtin function id.\n * @param metadata Caller's metadata.\n * @param id Built-in function ID.\n * @returns corresponding function that takes arguments.\n */\nfunction findBuiltin(\n  metadata: AS.Metadata,\n  id: number,\n  loadUtils: AS.LoadUtils\n) {\n  initBuiltins(loadUtils)\n  const inst = encodeNumber(id)\n  const builtinFun = BUILTINS[inst]\n  if (builtinFun) return builtinFun\n  throw new E.UnsuspectedHangeulNotFoundError(\n    metadata,\n    `${inst}이라는 이름의 기본 제공 함수를 찾지 못했습니다.`\n  )\n}\n\n/** Forces strict evaluation of the value */\nexport function strict(value: AS.Value): AS.StrictValue {\n  if (value instanceof AS.ExprV) {\n    if (value.cache) {\n      if (value.cache instanceof AS.UnsuspectedHangeulError) {\n        throw value.cache\n      }\n      return value.cache\n    }\n    try {\n      value.cache = strict(interpret(value.expr, value.env))\n      return value.cache\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) {\n        value.cache = error\n      }\n      throw error\n    }\n  }\n  return value\n}\n\nfunction _accessArray<T>(arr: T[], rel: number): T {\n  const idx = rel < 0 ? rel + arr.length : rel\n  if (idx < 0 || idx >= arr.length)\n    throw Error(`길이 ${arr.length}의 객체의 ${rel}번째 요소를 요청했습니다.`)\n  return arr[idx]\n}\nfunction _accessBuffer(buf: ArrayBuffer, rel: number): ArrayBuffer {\n  const idx = rel < 0 ? rel + buf.byteLength : rel\n  if (idx < 0 || idx >= buf.byteLength)\n    throw Error(\n      `길이 ${buf.byteLength}의 바이트열의 ${rel}번째 요소를 요청했습니다.`\n    )\n  return buf.slice(idx, idx + 1)\n}\n\n/** Evaluates the expression in given environment and returns a value */\nexport function interpret(expr: AS.AST, env: AS.Env) {\n  if (expr instanceof AS.Literal) {\n    return new AS.IntegerV(expr.value)\n  } else if (expr instanceof AS.FunRef) {\n    const fun = _accessArray(env.funs, -expr.rel - 1)\n    if (fun == null) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        '함수 참조의 범위를 벗어났습니다.'\n      )\n    }\n    return fun\n  } else if (expr instanceof AS.ArgRef) {\n    if (env.funs.length !== env.args.length) {\n      throw Error(\n        'Assertion Error: Environment has ' +\n          env.funs.length +\n          ' funs and ' +\n          env.args.length +\n          ' args.'\n      )\n    }\n    const args = _accessArray(env.args, -expr.relF - 1)\n    if (args == null) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        '존재하지 않는 함수에 대한 인수 참조를 시도했습니다.'\n      )\n    }\n    const relA = strict(interpret(expr.relA, env))\n    const [_relA] = checkType(expr.metadata, [relA], [AS.IntegerV])\n    const relAValue = _relA.value\n    if (relAValue < 0 || relAValue > args.length) {\n      throw new E.UnsuspectedHangeulOutOfRangeError(\n        expr.metadata,\n        `${relAValue}번째 인수를 참조하는데 ${args.length}개의 인수만 받았습니다.`\n      )\n    } else return args[Number(relAValue)]\n  } else if (expr instanceof AS.FunDef) {\n    var newFuns = env.funs.slice()\n    var newEnv = new AS.Env(newFuns, env.args, env.utils)\n    var closure = new AS.ClosureV(expr.body, newEnv)\n    newEnv.funs.push(closure)\n    return closure\n  } else if (expr instanceof AS.FunCall) {\n    var fun = new AS.ExprV(expr.fun, env, null)\n    var argv = expr.argv.map(function (arg) {\n      return new AS.ExprV(arg, env, null)\n    })\n    var recipe = procFunctional(expr.metadata, fun, true)\n    return recipe(expr.metadata, argv)\n  }\n  throw Error('Unexpected expression: ' + expr)\n}\n\n/**\n * Converts function-like values into functions.\n * @param metadata Caller's metadata.\n * @param fun A maybe-Expr value that may correspond to a function.\n * @param allow A list of types that are allowed for execution.\n * @returns A recipe function that receives argument list and returns the value.\n */\nexport function procFunctional(\n  metadata: AS.Metadata,\n  fun: AS.Value,\n  generalCallable: boolean = false\n): AS.Evaluation {\n  if (isLiteralExpr(fun))\n    return findBuiltin(metadata, Number(fun.expr.value), fun.env.utils)\n\n  const allow = generalCallable ? AS.CallableV : [AS.FunctionV]\n  const [_fun] = checkType(metadata, [strict(fun)], allow)\n\n  if (_fun instanceof AS.FunctionV) {\n    return _fun.execute.bind(_fun)\n  } else if (_fun instanceof AS.BooleanV) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 2)\n      return argv[_fun.value ? 0 : 1]\n    }\n  } else if (_fun instanceof AS.DictV) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 1)\n      const argKey = strict(argv[0]).asKey(strict)\n      const value = _fun.value[argKey]\n      if (value) return value\n      throw new E.UnsuspectedHangeulNotFoundError(\n        metadata,\n        `사전에 다음 표제가 없습니다: ${argKey}`\n      )\n    }\n  } else if (_fun instanceof AS.ComplexV) {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 1)\n      const arg = strict(argv[0])\n      const [_arg] = checkType(metadata, [arg], [AS.IntegerV])\n      if (_arg.value === 0n || _arg.value === 1n) {\n        return new AS.FloatV(_fun.value.toVector()[Number(_arg.value)])\n      }\n      throw new E.UnsuspectedHangeulValueError(\n        metadata,\n        `복소수 객체의 ${_arg.value}번째 요소를 접근하려고 했습니다.`\n      )\n    }\n  } else {\n    return function (metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n      checkArity(metadata, argv, 1)\n      const arg = strict(argv[0])\n      const [_arg] = checkType(metadata, [arg], [AS.IntegerV])\n      const idx = Number(_arg.value)\n      try {\n        if (_fun instanceof AS.BytesV) {\n          return new AS.BytesV(_accessBuffer(_fun.value, idx))\n        }\n        if (_fun instanceof AS.StringV) {\n          return new AS.StringV(_accessArray(_fun.value, idx))\n        }\n        return _accessArray(_fun.value, idx)\n      } catch (error) {\n        if (error instanceof Error) {\n          throw new E.UnsuspectedHangeulOutOfRangeError(metadata, error.message)\n        }\n        throw error\n      }\n    }\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, recursiveMap } from '../utils'\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _throw(metadata: AS.Metadata, argv: AS.Value[]): AS.Value {\n    checkArity(metadata, argv, 1)\n    const [arg] = checkType(metadata, argv.map(strict), [AS.ErrorV])\n    throw new AS.UnsuspectedHangeulError(arg)\n  }\n  function _try(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    try {\n      return recursiveMap(argv[0], strict)\n    } catch (error) {\n      if (error instanceof AS.UnsuspectedHangeulError) {\n        const fun = procFunctional(metadata, argv[1])\n        return fun(metadata, [error.err])\n      }\n      throw error\n    }\n  }\n\n  return {\n    ㄷㅈ: _throw,\n    ㅅㄷ: _try,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { eq, JSNumber } from '../numbers'\nimport { allEqual, checkArity, checkType, extractValue, isType } from '../utils'\n\nfunction _allNumbersEqual(nums: JSNumber[]) {\n  if (nums.length === 0) return true\n  return nums.slice(1).every((x) => eq(x, nums[0]))\n}\n\nfunction _allBytesEqual(buffers: ArrayBuffer[]) {\n  if (buffers.length === 0) return true\n  if (!allEqual(buffers.map((buf) => buf.byteLength))) return false\n  const len = buffers[0].byteLength\n  const views = buffers.map((buf) => new Uint8Array(buf))\n  for (let i = 0; i < len; i++) {\n    if (!allEqual(views.map((view) => view[i]))) return false\n  }\n  return true\n}\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _listedEquals(arrs: AS.Value[][]): boolean {\n    if (arrs.length === 0) return true\n    if (!allEqual(arrs.map((arr) => arr.length))) return false\n    var len = arrs[0].length\n    for (var i = 0; i < len; i++) {\n      // compare among tiers\n      if (!_valueEquals(arrs.map((arr) => arr[i])).value) return false\n    }\n    return true\n  }\n\n  function _dictEquals(dicts: AS.DictV[]): boolean {\n    if (dicts.length === 0) return true\n    const keys = dicts.map((d) => d.keys())\n    if (!_listedEquals(keys.map((ks) => ks.map((k) => new AS.StringV(k)))))\n      return false\n    const values = keys[0].map((k) => dicts.map((d) => d.value[k]))\n    return values.map(_valueEquals).every(extractValue)\n  }\n\n  function _valueEquals(argv: AS.Value[]) {\n    const _argv = argv.map(strict)\n    if (isType(_argv, [AS.FunctionV])) {\n      return new AS.BooleanV(allEqual(_argv))\n    } else if (isType(_argv, [AS.DictV])) {\n      return new AS.BooleanV(_dictEquals(_argv))\n    } else if (isType(_argv, [AS.IOV])) {\n      if (!allEqual(_argv.map((arg) => arg.inst))) return new AS.BooleanV(false)\n      return new AS.BooleanV(_listedEquals(_argv.map((arg) => arg.argv)))\n    } else if (isType(_argv, AS.NumberV)) {\n      return new AS.BooleanV(_allNumbersEqual(_argv.map((arg) => arg.value)))\n    } else if (isType(_argv, [AS.ListV, AS.ErrorV])) {\n      return new AS.BooleanV(_listedEquals(_argv.map(extractValue)))\n    } else if (isType(_argv, [AS.BytesV])) {\n      return new AS.BooleanV(_allBytesEqual(_argv.map(extractValue)))\n    } else if (isType(_argv, [AS.StringV])) {\n      return new AS.BooleanV(allEqual(_argv.map((x) => x.str)))\n    } else if (isType(_argv, [AS.BooleanV])) {\n      return new AS.BooleanV(allEqual(_argv.map(extractValue)))\n    } else if (isType(_argv, [AS.NilV])) {\n      return new AS.BooleanV(true)\n    }\n    return new AS.BooleanV(false)\n  }\n\n  function _equals(metadata: AS.Metadata, argv: AS.Value[]) {\n    return _valueEquals(argv)\n  }\n\n  function _negate(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 1)\n    const _argv = checkType(metadata, argv.map(strict), [AS.BooleanV])\n    return new AS.BooleanV(!_argv[0].value)\n  }\n\n  function _lessThan(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 2)\n    const _argv = checkType(metadata, argv.map(strict), AS.RealV)\n    return new AS.BooleanV(_argv[0].value < _argv[1].value)\n  }\n\n  function _true(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.BooleanV(true)\n  }\n\n  function _false(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, 0)\n    return new AS.BooleanV(false)\n  }\n\n  return {\n    ㄴ: _equals,\n    ㅁ: _negate,\n    ㅈ: _lessThan,\n    ㅈㅈ: _true,\n    ㄱㅈ: _false,\n  }\n}\n","import * as AS from '../abstractSyntax'\nimport { checkArity, checkType, joinArrayBuffer } from '../utils'\n\nexport default function (\n  procFunctional: AS.ProcFunctionalFn,\n  strict: AS.StrictFn,\n  loadUtils: AS.LoadUtils\n): Record<string, AS.Evaluation> {\n  function _split(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n    const _argv = checkType(metadata, argv.map(strict), [AS.StringV, AS.BytesV])\n    if (_argv[0] instanceof AS.StringV) {\n      const __argv = checkType(metadata, _argv, [AS.StringV])\n      const src = __argv[0].str\n      const delimiter = __argv.length > 1 ? __argv[1].str : ''\n      const pieces = src.split(delimiter)\n      return new AS.ListV(pieces.map((piece) => new AS.StringV(piece)))\n    }\n    const __argv = checkType(metadata, _argv, [AS.BytesV])\n    const src = String.fromCharCode(...new Uint8Array(__argv[0].value))\n    const delimiter =\n      __argv.length > 1\n        ? String.fromCharCode(...new Uint8Array(__argv[1].value))\n        : ''\n    const pieces = src.split(delimiter)\n    const buf = pieces.map(\n      (piece) =>\n        new AS.BytesV(\n          new Uint8Array(piece.split('').map((c) => c.charCodeAt(0))).buffer\n        )\n    )\n    return new AS.ListV(buf)\n  }\n\n  function _join(metadata: AS.Metadata, argv: AS.Value[]) {\n    checkArity(metadata, argv, [1, 2])\n\n    const [seq] = checkType(metadata, [strict(argv[0])], [AS.ListV])\n    const pieces = checkType(metadata, seq.value.map(strict), [\n      AS.StringV,\n      AS.BytesV,\n    ])\n\n    if (pieces[0] instanceof AS.StringV) {\n      const _pieces = checkType(metadata, pieces, [AS.StringV])\n      const delimiter = argv.length > 1 ? strict(argv[1]) : new AS.StringV('')\n      const [_delimiter] = checkType(metadata, [delimiter], [AS.StringV])\n      return new AS.StringV(_pieces.map((x) => x.str).join(_delimiter.str))\n    }\n\n    const _pieces = checkType(metadata, pieces, [AS.BytesV])\n    const delimiter =\n      argv.length > 1 ? strict(argv[1]) : new AS.BytesV(new ArrayBuffer(0))\n    const [_delimiter] = checkType(metadata, [delimiter], [AS.BytesV])\n\n    if (_pieces.length === 0) return new AS.BytesV(new ArrayBuffer(0))\n    const buffers = [_pieces[0].value]\n    for (const piece of _pieces.slice(1)) {\n      buffers.push(_delimiter.value)\n      buffers.push(piece.value)\n    }\n    return new AS.BytesV(joinArrayBuffer(buffers))\n  }\n\n  return {\n    ㅂㄹ: _split,\n    ㄱㅁ: _join,\n  }\n}\n","import * as AS from './abstractSyntax'\nimport { interpret, procFunctional, strict } from './interpret'\nimport { parse } from './parse'\nimport { checkType } from './utils'\n\n/** Receives an IOV and produces non-IOV non-ExprV value. */\nasync function doIO(\n  value: AS.StrictValue,\n  ioUtils: AS.IOUtils\n): Promise<AS.NonIOStrictValue> {\n  const _doIO = (value: AS.StrictValue) => doIO(value, ioUtils)\n  while (value instanceof AS.IOV) {\n    value = await value.continuation(_doIO, ioUtils)\n  }\n  return value\n}\n\n/** Converts the value into string for display */\nasync function toString(\n  value: AS.Value,\n  strict: (v: AS.Value) => AS.StrictValue,\n  ioUtils: AS.IOUtils,\n  formatIO: boolean\n): Promise<string> {\n  const _partial = (v: AS.Value) => toString(v, strict, ioUtils, formatIO)\n  value = strict(value)\n  if (value instanceof AS.IOV) {\n    value = await doIO(value, ioUtils)\n    const formatted = await _partial(value)\n    return formatIO ? 'IO(' + formatted + ')' : formatted\n  }\n\n  if (value instanceof AS.ListV) {\n    return '[' + (await Promise.all(value.value.map(_partial))).join(', ') + ']'\n  }\n  if (value instanceof AS.DictV) {\n    const d = value.value\n    const keys = value.keys()\n    const pairs = await Promise.all(\n      keys.map(async (k) => k + ': ' + (await _partial(d[k])))\n    )\n    return '{' + pairs.join(', ') + '}'\n  }\n  if (value instanceof AS.ErrorV) {\n    const argvStr = (await Promise.all(value.value.map(_partial))).join(', ')\n    return '<예외: [' + argvStr + ']>'\n  }\n  return value.format(strict)\n}\n\n/** Main procedure. Parses, evaluates, and converts to str.\n * @param filename File name of the program\n * @param program raw string that encodes a program\n * @returns A string representing the resulting value */\nexport async function main(\n  filename: string,\n  program: string,\n  ioUtils: AS.IOUtils,\n  loadUtils: AS.LoadUtils,\n  formatIO = true\n): Promise<string[]> {\n  const exprs = parse(filename, program)\n  const env = new AS.Env([], [], loadUtils)\n  const values = exprs.map((expr) => interpret(expr, env))\n  return Promise.all(values.map((v) => toString(v, strict, ioUtils, formatIO)))\n}\n\n/** Main procedure. Parses, evaluates, and converts to str.\n * @param filename File name of the program\n * @param program raw string that encodes a program\n * @returns A string representing the resulting value */\nexport async function run(\n  filename: string,\n  program: string,\n  argv: string[],\n  ioUtils: AS.IOUtils,\n  loadUtils: AS.LoadUtils\n): Promise<number> {\n  const metadata = new AS.Metadata('<main>', 0, 0, 0, '')\n  const args = argv.map((arg) => new AS.StringV(arg))\n\n  const exprs = parse(filename, program)\n  if (exprs.length === 0) return 0\n  if (exprs.length > 1) {\n    const error = new AS.ErrorV(\n      exprs.map((expr) => expr.metadata),\n      `모듈에는 표현식이 하나만 있어야 하는데 ${exprs.length}개가 있습니다.`,\n      []\n    )\n    throw new AS.UnsuspectedHangeulError(error)\n  }\n\n  const env = new AS.Env([], [], loadUtils)\n  let value = strict(interpret(exprs[0], env))\n\n  if (value instanceof AS.FunctionV) {\n    const recipe = procFunctional(metadata, value)\n    value = strict(recipe(metadata, args))\n  }\n\n  if (value instanceof AS.IOV) {\n    value = await doIO(value, ioUtils)\n  }\n\n  const [exitCode] = checkType(metadata, [value], [AS.IntegerV, AS.NilV])\n  if (exitCode instanceof AS.NilV) return 0\n  return Number(exitCode.value)\n}\n"],"names":["eaw","stringToArray","string","match","module","exports","eastAsianWidth","character","x","charCodeAt","y","length","codePoint","characterLength","code","this","characters","len","i","slice","text","start","end","textLen","result","eawLen","chars","char","charLen","root","cosh","Math","abs","exp","sinh","parser_exit","SyntaxError","logHypot","a","b","_a","_b","log","LN2","Complex","z","re","im","undefined","Number","isFinite","cos","sin","tokens","plus","minus","c","isNaN","parseFloat","parse","prototype","sign","add","sub","mul","div","t","d","pow","arg","atan2","loh","sqrt","r","tmp","expm1","PI","xx","cosm1","tan","cot","sec","csc","asin","t1","t2","acos","atan","Infinity","acot","asec","acsc","tanh","coth","csch","sech","asinh","res","acosh","atanh","noIM","oneMinus","onePlus","temp","acoth","acsch","asech","inverse","conjugate","neg","ceil","places","floor","round","equals","clone","toString","ret","toVector","valueOf","isZero","isInfinite","E","NaN","Object","defineProperty","value","toComplex","num","arrayToInt","bigEndianArr","radix","arr","TABLE","_radix","BigInt","invalidIdx","toLowerCase","split","map","indexOf","Error","isinf","isnan","isInteger","complexEq","complexValue","numberValue","bigIntEq","bigIntValue","realValue","eq","isclose","rel_tol","abs_tol","RangeError","diff","complexAdd","complexMul","trunc","Metadata","filename","line_no","start_col","end_col","line","str","repeat","EastAsianWidth","Literal","metadata","FunRef","rel","ArgRef","relA","relF","FunDef","body","FunCall","fun","argv","Env","funs","args","utils","UnsuspectedHangeulError","_Error","err","_this","_step","message","_iterator","_createForOfIteratorHelperLoose","metadatas","done","call","_inheritsLoose","_wrapNativeSuper","ValueBase","asKey","strict","format","_formatFloat","IntegerV","_ValueBase","_this2","typeName","FloatV","_ValueBase2","_this3","_proto4","ComplexV","_ValueBase3","_this4","_proto5","reStr","BooleanV","_ValueBase4","_this5","ListV","_ValueBase5","_this6","_proto7","join","children","StringV","_ValueBase6","_this7","Array","from","BytesV","_ValueBase7","_this8","_proto9","formatByte","toUpperCase","formatted","Uint8Array","DictV","_ValueBase8","_this9","_keys","_values","_proto10","keys","sort","values","_this10","k","v","IOV","_ValueBase9","inst","continuation","_this11","_proto11","NilV","_ValueBase10","FUNCTION_ID_GEN","FunctionV","_ValueBase11","adj","_this12","id","_proto13","replace","ClosureV","_FunctionV","env","_this13","execute","newArgs","concat","newEnv","ExprV","BuiltinModuleV","_FunctionV2","name","_this14","ErrorV","_ValueBase12","_this15","_proto16","expr","cache","RealV","NumberV","SequenceV","CallableV","U1100","JAMO","U3165","UA960","normalizeChar","_get","ref","divisor","idx","normalize","sentence","parseNumber","s","varlen","reverse","encodeNumber","number","isNegative","encoded","parseToken","token","stack","word","arity","_arity","pop","push","AS","splice","trailer","_step2","flatMap","j","filter","_step$value","cur","top","prev","prevMetadata","_ref","tokenize","_iterator2","UnsuspectedHangeulBuiltinError","_AS$UnsuspectedHangeu","codes","UnsuspectedHangeulOSError","_UnsuspectedHangeulBu","UnsuspectedHangeulArithmeticError","_UnsuspectedHangeulBu2","UnsuspectedHangeulSyntaxError","_UnsuspectedHangeulBu3","UnsuspectedHangeulTypeError","_UnsuspectedHangeulBu4","UnsuspectedHangeulValueError","_UnsuspectedHangeulBu5","UnsuspectedHangeulDivisionError","_UnsuspectedHangeulBu6","UnsuspectedHangeulNotFoundError","_UnsuspectedHangeulBu7","UnsuspectedHangeulImportError","_UnsuspectedHangeulBu8","UnsuspectedHangeulOutOfRangeError","_UnsuspectedHangeulBu9","isLiteralExpr","extractValue","joinArrayBuffer","bufs","size","byteLength","reduce","newBuf","ArrayBuffer","view","buf","set","recursiveMap","item","fn","_item","forEach","allEqual","every","isType","desiredTypes","some","desiredType","_formatArray","conj","checkType","desiredTypeNames","argTypeNames","constructor","content","particleBatchim","particleNoBatchim","lastCode","josa","checkArity","desiredArities","arities","isArray","checkMinArity","minimumArity","checkMaxArity","maximumArity","matchDefaults","defaults","wrapNumber","_parseStrToNumber","_argv","_checkType2","PipeV","_AS$FunctionV","f","CollectV","_AS$FunctionV2","_checkType","SpreadV","_AS$FunctionV3","MODE_TABLE","ㄹ","ㅈㄹ","ㅈㄱ","ㄹㅈㄹ","ㅈㄹㄹ","ㅈㄱㄹ","FileV","file","_proto","commandStr","close","read","write","seekOrTell","truncate","doIO","ioUtils","Promise","resolve","error","e","reject","count","_catch","then","tell","offset","whence","_checkType4","_checkType5","_whence","pos","seek","newSize","CODEC_TBL","Codec","scheme","numBytes","bigEndian","endianness","codec","_numBytes","getCodec","unicodeCodec","integerCodec","floatingPointCodec","encoder","TextEncoder","encode","buffer","codePointAt","unshift","_set","setUint8","bind","setUint16","setUint32","_write","DataView","_this$bigEndian","decoder","TextDecoder","decode","setInt16","Int16Array","getter","getUint32","getUint16","guessBigEndian","getUint8","_read","String","fromCodePoint","apply","signed","integer","bound","isExpressible","littleEndianArr","intToArray","u8","n","EvalError","_rountToInf","_rountToEven","rounded","_wrapType","type","BUILDERS","procFunctional","loadUtils","_wrap","op","ㅂㄷ","ㄱ","ㄷ","ㅁ","ㅂ","ㅈ","_fn","retWrapper","argType","_wrap2","fnName","_wrapRound","_rounder","_arg","_atan1","_atan2","ㅅ","ㄴ","ㄴㄴ","ㅁㄴ","ㅈㄷ","ㄹㄱ","ㅅㄴ","ㄴㅅ","ㄱㅅ","ㅅㄱ","ㄷㄴ","ㄴㄷ","ㅂㄹ","MODULE_REGISTRY","BUILTIN_MODULE_REGISTRY","loadFromPath","path","normalizePath","exprs","load","loadFromLiteral","literals","errMsg","searchLiteral","location","isFile","found","listdir","entry","literal","trim","matchesLiteral","searchPath","joinPath","constructBuiltinModule","data","constructBuiltinModules","newObj","key","step","startIdx","endIdx","_startIdx","_endIdx","_startIdx2","_endIdx2","_i","_regeneratorRuntime","wrap","slice$","_context","next","max","min","stop","_marked","BUILTINS","isBuilt","_builders","first","assign","_checkType3","base","mod","exponent","modulo","_extendedGcd","x_old","y_old","quotient","_ref2","_ref3","extendedGcd","modularInverse","modPow","bReal","ㄴㅁ","ㅅㅈ","_","ㅁㄹ","ㅁㅈ","ㅈㅅ","_parseStrToNumber2","digits","ㅅㅅ","_parseStrToNumber3","splitted","significant","_significant","ㅂㅅ","ㅂㄱ","ㄷㅂ","ㄷㅈ","ㅅㄷ","_proc","ㄴㄱ","ㅁㅂ","ㅂㅂ","input","print","ㄱㄹ","ioToBind","_exit","_temp2","_result2","_temp","_doIO","_checkType9","ㄱㄴ","_path","mode","modeStr","_mode","open","_listedEquals","arrs","_valueEquals","nums","dicts","ks","_dictEquals","buffers","views","_loop","_ret","_allBytesEqual","ㅈㅈ","ㄱㅈ","builder","_module","seq","ㅂㅈ","_rest","_matchDefaults","items","sliced","ㅁㄷ","ㅅㅂ","fitCheck","fit","ㅅㄹ","init","fromRight","maybeReversed","feed","acc","__argv","pieces","piece","src","fromCharCode","delimiter","ㄱㅁ","_pieces","_delimiter","interpret","_accessArray","relAValue","newFuns","closure","recipe","generalCallable","initBuiltins","builtinFun","findBuiltin","allow","_fun","argKey","_accessBuffer","_settle","pact","state","_Pact","observer","onRejected","callback","o","onFulfilled","_isSettledPact","thenable","formatIO","_temp15","_result","_exit2","_temp13","_exit3","_temp11","_result3","_exit4","_temp9","_result4","_temp8","all","_partial","_Promise$all2","argvStr","_temp7","_temp10","_partial2","pairs","_temp6","_temp12","_Promise$all","_temp5","_temp14","_doIO3","_temp4","_for","_value$continuation","program","_temp3","exitCode","_doIO2"],"mappings":"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,KACpC,KAAUA,GAAaA,GAAa,KACpC,KAAUA,GAAaA,GAAa,KACpC,KAAUA,GAAaA,GAAa,KACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GACV,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa,MACpC,MAAUA,GAAaA,GAAa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"}