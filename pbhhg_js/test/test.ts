import { describe, it } from '@jest/globals'
import assert from 'assert'
import { loadUtils } from '../cli'
import { IOUtils } from '../src/abstractSyntax'
import { main } from '../src/main'

function makeInput(input: string | undefined) {
  var lines = input ? input.split('\n') : []
  return () => Promise.resolve(lines.shift())
}

function _test(
  program: string,
  value: string,
  input?: string,
  output?: string
) {
  const printed: string[] = []
  const ioUtils: IOUtils = {
    input: makeInput(input),
    print: (s: string) => printed.push(s),
  }
  main('<test>', program, ioUtils, loadUtils, false).then((result) => {
    assert.deepStrictEqual(result, [value])
    if (output) {
      assert.strictEqual(printed.join('\n').trim(), output.trim())
    }
  })
}
describe('TestInterpret', function () {
  it('test_negative_index', function () {
    _test('ㄴ [ㄷ (ㄱㅇㄴㄱ ㄱㅇㄷㄱ ㄷㅎㄷ ㅎ) ㅎㄴ ㅎ] ㅎㄴ', '3')
    _test(
      'ㄴ ㄷㄱ [(ㄱㅇㄱ ㄴㄱ ㅅㅎㄷ ㅎ)(ㄱㅇㄱ ㄱㅇㄴㄱㅎㄴ ㄴㅇㄷㄱ ㄱㅇㄴㅎㄴ ㄷㅎㄷ ㅎ ㅎ) ㅎㄴ] ㅎㄷ',
      '0.5'
    )
    _test(
      'ㄹ [ㄴ: ㄱㅇㄱ ㄱㅇㄱ ㄴㄱ ㄷㅎㄷ ㄴㄱㅇㅎㄴ ㄱㅎㄷ?(ㄱㅇㄱ ㄷ ㅈㅎㄷ)ㅎㄷ ㅎ] ㅎㄴ',
      '6'
    )
  })
  it('test_seq_index', function () {
    _test('ㄱ ㄴ ㄷ ㅁㅀㄷ ㅎㄴ', '1')
    _test('ㄴ ㄴ ㄷ ㅁㅀㄷ ㅎㄴ', '2')
    _test('ㄴㄱ ㄴ ㄷ ㅁㅀㄷ ㅎㄴ', '2')
    _test('ㄷㄱ ㄴ ㄷ ㅁㅀㄷ ㅎㄴ', '1')
    _test('ㄱ ㄷㄴㄱ ㅁㅈㅎㄴ ㅎㄴ', "'1'")
    _test('ㄴ ㄷㄴㄱ ㅁㅈㅎㄴ ㅎㄴ', "'0'")
    _test('ㄴㄱ ㄷㄴㄱ ㅁㅈㅎㄴ ㅎㄴ', "'0'")
    _test('ㄷㄱ ㄷㄴㄱ ㅁㅈㅎㄴ ㅎㄴ', "'1'")
    _test('ㄱ ㄷㄴㄱ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅎㄴ', "b'\\x31'")
    _test('ㄴ ㄷㄴㄱ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅎㄴ', "b'\\x30'")
    _test('ㄴㄱ ㄷㄴㄱ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅎㄴ', "b'\\x30'")
    _test('ㄷㄱ ㄷㄴㄱ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅎㄴ', "b'\\x31'")
  })
})

describe('TestMain', function () {
  it('test_docs_spec', function () {
    _test('ㄱ', '0')
    _test('ㄴ', '1')
    _test('ㄴㄱ', '-1')
    _test('ㄴㄱㄱ', '1')
    _test('ㄱㄴ', '-8')
    _test('ㄱㄴㄱ', '8')
    _test('ㄱㄱㄴ', '64')
    _test('ㄱㄱㄴㄱ', '-64')
    _test('ㄴ ㄴㄱ ㄹ ㅎ ㅎㄷ', '3')
    _test('ㄱ (ㄱ ㅇㄱ ㅎ)ㅎㄴ', '0')
    _test('ㄱㅈㅎㄱ (ㄱ ㅇㄱ ㅎ)ㅎㄴ', 'False')
    _test('ㅂㄱㅎㄱ (ㄱ ㅇㄱ ㅎ)ㅎㄴ', 'Nil')
    _test('ㄴ ㄷ (ㄱ ㅇㄱ ㄴ ㅇㄱ ㄷ ㅎㄷ ㅎ)ㅎㄷ', '3')
    _test('ㄱㅈㅎㄱ ㅈㅈㅎㄱ (ㄱ ㅇㄱ ㄴ ㅇㄱ ㄷ ㅎㄷ ㅎ)ㅎㄷ', 'True')
    _test('ㄴ ㄷ (ㄱ ㅇㄴ ㄱ ㅇㄱ ㄷ ㅎㄷ ㅎ ㅎ)ㅎㄶㄴ', '3')
    _test('ㄱㅈㅎㄱ ㅈㅈㅎㄱ (ㄱ ㅇㄴ ㄱ ㅇㄱ ㄷ ㅎㄷ ㅎ ㅎ)ㅎㄶㄴ', 'True')
    _test('ㄹ ㅁ ㄱ ㅇㄴ ㄱ ㅇㄱ ㄷ ㅎㄷ ㅎ ㅎ ㅎㄴ ㅎㄴ', '7')
    _test('ㄴ ㄴ ㄷ ㄹ (ㄱ ㅇㄱ ㅇㄱ ㅎ)ㅎㅁ', '1')
    _test('ㄷ ㄴ ㄷ (ㄱ ㅇㄱ ㅇㄱ ㅎ)ㅎㄹ', '2')
    _test('ㄱ ㄴ ㄷ ㄹ (ㄱ ㅇㄱ ㄴ ㄷ ㅎㄷ ㅇㄱ ㅎ)ㅎㅁ', '1')
    _test('ㄴ ㄴ ㄷ (ㄱ ㅇㄱ ㄴ ㄷ ㅎㄷ ㅇㄱ ㅎ)ㅎㄹ', '2')
  })
  it('test_docs_builtin', function () {
    _test('ㄱㄴ ㄷㄹ ㅁ ㄱ ㅎㄹ', '832')
    _test('ㄱㄴ ㄷㄹ ㅁ ㄷ ㅎㄹ', '-30')
    _test('ㄷ ㄹ ㅅ ㅎㄷ', '8')
    _test('ㄱ ㄱㄱ ㄴ ㅎㄷ', 'True')
    _test('ㄴㄱ ㄴ ㅈ ㅎㄷ', 'True')
    _test('ㄱ ㄴ ㄴ ㅎㄷ ㅁ ㅎㄴ', 'True')
    _test('ㅈㅈ ㅎㄱ', 'True')
    _test('ㄱㅈ ㅎㄱ', 'False')
    _test('ㄱ ㄴ ㄷ ㄹ ㅈ ㅎㄷ ㅎㄷ', '0')
    _test('ㄱ ㄴ ㄷ ㄹ ㄴ ㅎㄷ ㅎㄷ', '1')
    _test('ㅁㅈ ㅎㄱ', "''")
    _test('ㅁ ㄴㄱ ㅅ ㅎㄷ ㅁㅈ ㅎㄴ', "'0.25'")
    _test('ㄷㄴㄱ ㅁㅈ ㅎㄴ ㅈㅅ ㅎㄴ', '10')
    _test('ㄷㄴㄱ ㅁㅈ ㅎㄴ ㅅㅅ ㅎㄴ', '10.0')
    _test('ㄷㄴㄱ ㅁㅈ ㅎㄴ ㄷ ㅈㅅ ㅎㄷ', '2')
    _test('ㄷㄴㄱ ㅁㅈ ㅎㄴ ㄷ ㅅㅅ ㅎㄷ', '2.0')
    _test(
      'ㅁ ㄷㄱ ㅅ ㅎㄷ ㅁㅈ ㅎㄴ ㅂㄹ ㅎㄴ',
      "['0', '.', '0', '6', '2', '5']"
    )
    _test(
      'ㅁ ㄷㄱ ㅅ ㅎㄷ ㅁㅈ ㅎㄴ ㄱ ㅁㅈ ㅎㄴ ㅂㄹ ㅎㄷ',
      "['', '.', '625']"
    )
    _test('ㅁ ㄴㄱ ㅅ ㅎㄷ ㅁㅈ ㅎㄴ ㅂㄹ ㅎㄴ ㄱㅁ ㅎㄴ', "'0.25'")
    _test(
      'ㅁ ㄴㄱ ㅅ ㅎㄷ ㅁㅈ ㅎㄴ ㅂㄹ ㅎㄴ ㄴ ㅁㅈ ㅎㄴ ㄱㅁ ㅎㄷ',
      "'01.1215'"
    )
    _test('ㄱ ㄷㄴㄱ ㅁㅈ ㅎㄴ ㅎㄴ', "'1'")
    _test(
      'ㄱ ㄱㅈ ㅎㄱ ㄱ ㅁㅈ ㅎㄴ ㄱ ㅁㄹ ㅎㄴ ㅁㄹ ㅎㅁ',
      "[0, False, '0', [0]]"
    )
    _test('ㄱ ㄴ ㄷ ㅁㄹ ㅎㄹ ㅈㄷ ㅎㄴ', '3')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅁㄹ ㅎㅅ ㄴ ㄴㄱ ㄷ ㅂㅈ ㅎㅁ', '[1, 3]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁㄹ ㅎㅁ ㅁㅈ ㅁㄷ ㅎㄷ', "['0', '1', '2', '3']")
    _test(
      'ㄱ ㄴ ㄷ ㄹ ㅁㄹ ㅎㅁ ㄱ ㅇㄱ ㅁㅈ ㅎㄴ ㅎ ㅁㄷ ㅎㄷ',
      "['0', '1', '2', '3']"
    )
    _test(
      'ㄱ ㄴ ㄴㄱ ㄷ ㄷㄱ ㅁㄹ ㅎㅂ ㄱ ㅇㄱ ㄱ ㅈ ㅎㄷ ㅎ ㅅㅂ ㅎㄷ',
      '[-1, -2]'
    )
    _test('ㅁ ㄷ ㄴㄱ ㅁㄹ ㅎㄹ ㅅ ㅅㄹ ㅎㄷ', '2.0')
    _test('ㄹ ㄷ ㄴㄱ ㅁㄹ ㅎㄹ ㅁ ㅅ ㅅㄹ ㅎㄹ', '9')
    _test('ㅅ ㄷ ㄹ ㄷ ㄴㄱ ㅁㄹ ㅎㄹ ㅅㄹ ㅎㄹ', '0.015625')
    _test('ㄹㄱ ㄱ ㄴ ㄷ ㄹ ㅁㄹ ㅎㅁ ㅎㄴ', '1')
    _test('ㄷ ㄴㄱ ㅎㄱ ㅎㄴ', '2')
    _test('ㄷ ㅁㅈ ㅁㄹ ㄴㄱ ㅎㄷ ㅎㄴ', "['2']")
    _test('ㄷ ㄹ ㅁㄹ ㅎㄷ ㅁㅈ ㅁㄷ ㅎㄷ ㄷ ㅁㅂ ㅎㄴ ㅎㄴ', "'23'")
    _test('ㅈㄷ ㅂㅂ ㅎㄴ ㅎㄱ', '0')
    _test('ㄱ ㄴ ㄷ ㅈㄷ ㅂㅂ ㅎㄴ ㅎㄹ', '3')
    _test('ㄷㄴ ㅈ ㅈㄷㄱ ㅂ ㅎㄷ ㅎㄴ', '10')
    _test('ㄷㄴㄱ ㅈ ㅈㄷㄱ ㅂ ㅎㄷ ㅎㄴ', '10')
    _test('ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ', '{0: 1, 2: 3}')
    _test('ㄷ ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ ㅎㄴ', '3')
    _test('ㄴ ㄱㅁㄱ ㅁㅈ ㅎㄴ ㄱ ㄴ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ ㅎㄴ', "b'\\x32'")
  })
  it('test_docs_module', function () {
    _test('ㄱㅁㄱ ㅁㅈ ㅎㄴ ㄱ ㄴ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x33\\x32'")
    _test(
      'ㄱㅁㄱ ㅁㅈ ㅎㄴ ㄱ ㄷ ㅈㅈ ㅎㄱ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x00\\x33\\x00\\x32'"
    )
    _test(
      'ㄱㅁㄱ ㅁㅈ ㅎㄴ ㄱ ㄷ ㄱㅈ ㅎㄱ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x33\\x00\\x32\\x00'"
    )
    _test('ㄱㅁㄱ ㄴ ㄹ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x20\\x00\\x00'")
    _test(
      'ㄱㅁ ㄷ ㅁ ㅈㅈ ㅎㄱ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\xFF\\xFF\\xFF\\xE0'"
    )
    _test(
      'ㄴㄴㅈㄴㅂㄴㅂㅁㅁㅈㄷㅅㅂㄷㅂㅅㄱㅁㄱㄱㄱㄱㅈㄷㅂㄷㄹㄱㄱㅁㄹㅂㄱ ㄴ ㅁㄴㄱ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ ㄱ ㄷ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ',
      "'평범한 한글'"
    )
    _test(
      'ㅅㅂㅁㅈㄷㄱㄹㅈㄴㅁㄷㄱㄹㅂㄷㅈㄱㅅㅅㄱㄱㅂㄷㅈㄱㅈㄷㄱㄱㅈㄹㄴㅁㅂㄹㄱㄷㄴㄷㅁㄹㅂㄹㅅㄱㅈㅁㅁㄷㅂㄹㄱㄹㅂㅁㅁㅅㅂㄱㄷㅈㄱㅅㄹㅁㅅㄴ ㄴ ㄴㄹㄱ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ ㄱ ㄴ ㅂ ㅂ ㅂ ㅎㄷ ㅎㄷ ㅎㄴ',
      "'./조각글/절댓값.txt'"
    )
    _test('ㄴㄱ ㅂ ㅅ ㅈㄷ ㅂㅎㄹ ㅎㄴ', '1')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㄹ ㅎㄴ', '0.5')
    _test('ㅁㄱ ㄹ ㅂㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㄹ ㅎㄴ', '5.0')
    _test('ㅂ ㅅ ㅈ ㅂㅎㄹ ㅂ ㅅ ㄹㄱ ㅂㅎㄹ ㅎㄴ', '1.0')
    _test('ㄴㄱ ㅂ ㅅ ㄹㄱ ㅂㅎㄹ ㅎㄴ', '3.141592653589793i')
    _test('ㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㄹ ㅎㄴ', '0.0')
    _test('ㄴㄱ ㅂ ㅅ ㄴㅅ ㅂㅎㄹ ㅎㄴ', '-1.5707963267948966')
    _test('ㄱ ㅂ ㅅ ㄱㅅ ㅂㅎㄹ ㅎㄴ', '1.0')
    _test('ㄴㄱ ㅂ ㅅ ㅅㄱ ㅂㅎㄹ ㅎㄴ', '3.141592653589793')
    _test('ㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㄹ ㅎㄴ', '0.0')
    _test('ㄴㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄴ', '-0.7853981633974483')
    _test('ㄴㄱ ㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄷ', '-1.5707963267948966')
    _test('ㄱ ㄴㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄷ', '3.141592653589793')
    _test('ㄹ ㅂ (ㅂ ㅂㄷ ㄱ ㅂㅎㄹ) ㅎㄷ', '1')
    _test('ㅂ ㄷㄱ (ㅂ ㅂㄷ ㄱ ㅂㅎㄹ) ㅎㄷ', '4')
    _test('ㄹ ㅂ (ㅂ ㅂㄷ ㄷ ㅂㅎㄹ) ㅎㄷ', '7')
    _test('ㄴ ㅁㄱ (ㅂ ㅂㄷ ㄷ ㅂㅎㄹ) ㅎㄷ', '-3')
    _test('ㄴ (ㅂ ㅂㄷ ㅁ ㅂㅎㄹ) ㅎㄴ', '-2')
    _test('ㄱ (ㅂ ㅂㄷ ㅁ ㅂㅎㄹ) ㅎㄴ', '-1')
    _test('ㄹ ㅂ (ㅂ ㅂㄷ ㅂ ㅂㅎㄹ) ㅎㄷ', '6')
    _test('ㄷ ㄴㄱ (ㅂ ㅂㄷ ㅂ ㅂㅎㄹ) ㅎㄷ', '-3')
    _test('ㅂ ㄷ (ㅂ ㅂㄷ ㅈ ㅂㅎㄹ) ㅎㄷ', '20')
    _test('ㅂㄱ ㄴㄱ (ㅂ ㅂㄷ ㅈ ㅂㅎㄹ) ㅎㄷ', '-3')
    _test('ㅂ ㅅ ㅂ ㅂㅎㄹ', '3.141592653589793')
    _test('ㅂ ㅅ ㅈ ㅂㅎㄹ', '2.718281828459045')
    _test('ㅂ ㅅ ㅂ ㅂㅎㄹ ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ ㅎㄴ', '3')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ ㅎㄴ', '1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹㄱ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ ㅎㄴ', '-1')
    _test('ㅂ ㅅ ㅂ ㅂㅎㄹ ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ ㅎㄴ', '3')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ ㅎㄴ', '1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹㄱ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ ㅎㄴ', '-2')
    _test('ㅂ ㅅ ㅂ ㅂㅎㄹ ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ ㅎㄴ', '3')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ ㅎㄴ', '0')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ ㅎㄴ', '0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ ㅎㄴ', '2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹㄱ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ ㅎㄴ', '-2')
    _test('ㅂ ㅅ ㅂ ㅂㅎㄹ ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ ㅎㄴ', '4')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ ㅎㄴ', '2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹㄱ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ ㅎㄴ', '-1')
    _test('ㅂ ㅅ ㅂ ㅂㅎㄹ ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ ㅎㄴ', '4')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ ㅎㄴ', '2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹㄱ ㄱㅎㄷ ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ ㅎㄴ', '-2')
  })
  it('test_readme_example', function () {
    _test('나 과제 다 했다.', '-55')
    _test('그는 자는 척했다.', 'False')
    _test('날마다 날마다 늘어간 기약과 더하던 후회다.', '322')
    _test('ㄱ [ㄴ, ㄷ, ㄹ] ㄱㅇㄱㅇㄴㅎㅎ ㅎㄹ ㅎㄴ', '1')
    _test('ㄴ [ㄴ, ㄷ, ㄹ] ㄱㅇㄱㅇㄴㅎㅎ ㅎㄹ ㅎㄴ', '2')
    _test(
      '난 지금도 가끔 얘기 해. 누군간 여길 꿈꿨을까,끝없는 헛된 후회 하나 했던걸까...',
      '135'
    )
    _test(
      '난 지금도 늘 얘기 해. 누군간 여길 꿈꿨을까,끝없는 헛된 후회 하나 했던걸까...',
      '1'
    )
    _test('ㄴ ㄴㄱ ㄹ ㅎ ㅎㄷ', '3')
    _test('ㄹ ㅁ ㄱ ㅇㄴ ㄱ ㅇㄱ ㄷ ㅎㄷ ㅎ ㅎ ㅎㄴ ㅎㄴ', '7')
    _test(
      '조각글 문자만드는평범코드드립니다 ㅂㅎㄷ',
      'Nil',
      '하늘과 바람과 별과 詩',
      '(ㅂ ㅂ ㅂㅎㄷ) ㅂㅂㅈㄷㄴㄴㅅㅁㄹㅂㄹㅂㄱㄴㅅㅁㄷㅂㅈㄴㄹㄴㅈㅂㄱㅁㅁㅂㅅㄴㅁㅂㅁㄷㅅㅂㅅㅂㅈㅁㅁㄴㄷㅂㅅㅈㅁㅂㅁㅈㄷㄱㄷㅅㄷㅈㄹㅅㄷㄷㄱㅂㄷㅈㄹㅅㄷㅅㄹㄴㄱㄴㄱㅂㅈㅁㄷㄹㄷㅂㄱ (ㄴ ㅅㄹㄱ ㄱㅇㄱㅎㄷ)ㅎㄴ (ㄱ ㄴ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ'
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅂㅂㅈㄷㄴㄴㅅㅁㄹㅂㄹㅂㄱㄴㅅㅁㄷㅂㅈㄴㄹㄴㅈㅂㄱㅁㅁㅂㅅㄴㅁㅂㅁㄷㅅㅂㅅㅂㅈㅁㅁㄴㄷㅂㅅㅈㅁㅂㅁㅈㄷㄱㄷㅅㄷㅈㄹㅅㄷㄷㄱㅂㄷㅈㄹㅅㄷㅅㄹㄴㄱㄴㄱㅂㅈㅁㄷㄹㄷㅂㄱ (ㄴ ㅅㄹㄱ ㄱㅇㄱㅎㄷ)ㅎㄴ (ㄱ ㄴ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ',
      "'하늘과 바람과 별과 詩'"
    )
    _test(
      'ㄹㅎㄱ ㅈㅅ (조각글 평범숫자 ㅂㅎㄷ) ㅈㄹ ㄴㄱㅎㄹ ㄱㄹㅎㄷ',
      'Nil',
      '19480403',
      'ㄹㄷㅂㅈㄹㄷㄷㄴㄴ'
    )
  })
  it('test_readme_example_recursion', function () {
    _test(
      'ㄱ [ㄴ {ㄱㅇㄱ (ㄱㅇㄱ ㄴㄱ ㄷㅎㄷ ㄱㅇㅎㄴ) ㄱㅎㄷ}(ㄱㅇㄱ ㄷ ㅈㅎㄷ) ㅎㄷ] ㅎ ㅎㄴ',
      '1'
    )
    _test(
      'ㅂ [ㄴ {ㄱㅇㄱ (ㄱㅇㄱ ㄴㄱ ㄷㅎㄷ ㄱㅇㅎㄴ) ㄱㅎㄷ}(ㄱㅇㄱ ㄷ ㅈㅎㄷ) ㅎㄷ] ㅎ ㅎㄴ',
      '120'
    )
    _test(
      'ㄱ [ㄴ {(ㄱㅇㄱ ㄴㄱ ㄷㅎㄷ ㄱㅇㅎㄴ) (ㄱㅇㄱ ㄷㄱ ㄷㅎㄷ ㄱㅇㅎㄴ)ㄷㅎㄷ} (ㄱㅇㄱ ㄷ ㅈㅎㄷ) ㅎㄷ] ㅎ ㅎㄴ',
      '1'
    )
    _test(
      'ㅅ [ㄴ {(ㄱㅇㄱ ㄴㄱ ㄷㅎㄷ ㄱㅇㅎㄴ) (ㄱㅇㄱ ㄷㄱ ㄷㅎㄷ ㄱㅇㅎㄴ)ㄷㅎㄷ} (ㄱㅇㄱ ㄷ ㅈㅎㄷ) ㅎㄷ] ㅎ ㅎㄴ',
      '13'
    )
  })
  it('test_readme_example_io', function () {
    _test('ㄹㅎㄱ {ㄱㅇㄱ ㅅㅅㅎㄴ ㄷ ㅅㅎㄷ ㄱㅅㅎㄴ}ㅎ ㄱㄹㅎㄷ', '0.0', '0')
    _test('ㄹㅎㄱ {ㄱㅇㄱ ㅅㅅㅎㄴ ㄷ ㅅㅎㄷ ㄱㅅㅎㄴ}ㅎ ㄱㄹㅎㄷ', '1.0', '1')
    _test('ㄹㅎㄱ {ㄱㅇㄱ ㅅㅅㅎㄴ ㄷ ㅅㅎㄷ ㄱㅅㅎㄴ}ㅎ ㄱㄹㅎㄷ', '1.0', '-1')
    _test('ㄹㅎㄱ {ㄱㅇㄱ ㅅㅅㅎㄴ ㄷ ㅅㅎㄷ ㄱㅅㅎㄴ}ㅎ ㄱㄹㅎㄷ', '4.0', '2')
    _test(
      'ㄹㅎㄱ {ㄱㅇㄱ ㅅㅅㅎㄴ ㄷ ㅅㅎㄷ ㄱㅅㅎㄴ}ㅎ ㄱㄹㅎㄷ',
      '10000000000.0',
      '1e5'
    )
    _test(
      'ㄱ [(ㄹㅎㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㄹㅎㄷ){(ㄱㅇㄴ ㄱㅅㅎㄴ) (ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㅇㅎㄴ)ㄱㅇㄱ ㄱ ㄴㅎㄷ ㅎㄷ ㅎ} ㄱㄹㅎㄷ ㅎ] ㅎㄴ',
      '0',
      '0'
    )
    _test(
      'ㄱ [(ㄹㅎㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㄹㅎㄷ){(ㄱㅇㄴ ㄱㅅㅎㄴ) (ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㅇㅎㄴ)ㄱㅇㄱ ㄱ ㄴㅎㄷ ㅎㄷ ㅎ} ㄱㄹㅎㄷ ㅎ] ㅎㄴ',
      '1.0',
      '1\n0'
    )
    _test(
      'ㄱ [(ㄹㅎㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㄹㅎㄷ){(ㄱㅇㄴ ㄱㅅㅎㄴ) (ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㅇㅎㄴ)ㄱㅇㄱ ㄱ ㄴㅎㄷ ㅎㄷ ㅎ} ㄱㄹㅎㄷ ㅎ] ㅎㄴ',
      '9999999999.0',
      '1e10\n-1\n0'
    )
    _test(
      'ㅁㅈㅎㄱ [ㄹㅎㄱ {(ㄱㅇㄴ ㄱㅅㅎㄴ) (ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㅇㅎㄴ)(ㄱㅇㄱ ㅈㄷㅎㄴ ㄱ ㄴㅎㄷ) ㅎㄷ ㅎ} ㄱㄹㅎㄷ ㅎ] ㅎㄴ',
      "''",
      '\n'
    )
    _test(
      'ㅁㅈㅎㄱ [ㄹㅎㄱ {(ㄱㅇㄴ ㄱㅅㅎㄴ) (ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㅇㅎㄴ)(ㄱㅇㄱ ㅈㄷㅎㄴ ㄱ ㄴㅎㄷ) ㅎㄷ ㅎ} ㄱㄹㅎㄷ ㅎ] ㅎㄴ',
      "'A'",
      'A\n\n'
    )
    _test(
      'ㅁㅈㅎㄱ [ㄹㅎㄱ {(ㄱㅇㄴ ㄱㅅㅎㄴ) (ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㅇㅎㄴ)(ㄱㅇㄱ ㅈㄷㅎㄴ ㄱ ㄴㅎㄷ) ㅎㄷ ㅎ} ㄱㄹㅎㄷ ㅎ] ㅎㄴ',
      "'AB'",
      'A\nB\n\n'
    )
  })
})

describe('TestParse', function () {
  it('test_unicode', function () {
    _test('나랏〮말〯ᄊᆞ미〮', '19737')
    _test('수〯ᄫᅵ〮니겨〮날〮로〮ᄡᅮ〮메〮', '81105006')
    _test('부ᇙ〮샤ᇰ류ᇢ통', '-1269')
    _test('ᅀᅵᆼ즁부ᇙ〮득〮신끵쪄ᇰ〮쟝〯', '-16541054')
    _test('신졩〮ᅀᅵᆼ〮씹〮바ᇙ〮ᄍᆞᆼ〮', '-253374')
    _test('ᄉᆡ〯미〮기픈〮므〮른〮ᄀᆞ〮ᄆᆞ래〮', '58837542')
    _test('ￓﾩￜﾤￂﾩￂﾡￂﾲￂﾪﾡￌﾡￌﾲﾧￂ', '2818691275')
  })
})

describe('TestArithmetics', function () {
  it('test_multiply', function () {
    _test('ㄱ ㄴ ㄷ ㄹ ㄱㅎㅁ', '0')
    _test('ㄴㄱ ㄴ ㄷ ㄹ ㄱㅎㅁ', '-6')
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄷ ㄱㅎㄷ', '1.0')
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄷ ㅄㅎㄴ ㄱㅎㄷ', '1+0i')
    _test('(ㄷ ㄴㄱ ㅄㅎㄷ) (ㄷ ㄴ ㅄㅎㄷ) ㄱㅎㄷ', '5+0i')
    _test('(ㄱ ㄱ ㅈㅎㄷ) (ㄱ ㄴ ㄴㅎㄷ) ㄱㅎㄷ', 'False')
    _test('(ㄱ ㄱ ㅈㅎㄷ) (ㄱ ㄴ ㅈㅎㄷ) ㄱㅎㄷ', 'False')
    _test('(ㄱ ㄱ ㄴㅎㄷ) (ㄱ ㄴ ㅈㅎㄷ) (ㅈㅈㅎㄱ) ㄱㅎㄹ', 'True')
  })
  it('test_multiply_short_circuit', function () {
    _test(
      '[] 목록ㅎㄱ (ㄱㅇㄱ 재다ㅎㄴ ㄷ ㄴㅎㄷ ㄱ ㄱㅇㄱㅎㄴ ㄱ ㄴㅎㄷ 곱ㅎㄷㅎ)ㅎㄴ',
      'False'
    )
    _test(
      '[ㄱ, ㄴ] 목록ㅎㄷ (ㄱㅇㄱ 재다ㅎㄴ ㄷ ㄴㅎㄷ ㄱ ㄱㅇㄱㅎㄴ ㄱ ㄴㅎㄷ 곱ㅎㄷㅎ)ㅎㄴ',
      'True'
    )
  })
  it('test_add', function () {
    _test('ㄱ ㄴ ㄷ ㄹ ㄷㅎㅁ', '6')
    _test('ㄴㄱ ㄴ ㄷ ㄹㄱ ㄷㅎㅁ', '-1')
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄷ ㄷㅎㄷ', '2.5')
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄷ ㅄㅎㄴ ㄷㅎㄷ', '2.5+0i')
    _test('(ㄷ ㄴㄱ ㅄㅎㄷ) (ㄷ ㄴ ㅄㅎㄷ) ㄷㅎㄷ', '4+0i')
    _test('(ㄱ ㄱ ㅈㅎㄷ) (ㄱ ㄴ ㄴㅎㄷ) ㄷㅎㄷ', 'False')
    _test('(ㄱ ㄱ ㅈㅎㄷ) (ㄱ ㄴ ㅈㅎㄷ) ㄷㅎㄷ', 'True')
    _test('(ㄱ ㄱ ㄴㅎㄷ) (ㄱ ㄴ ㅈㅎㄷ) (ㅈㅈㅎㄱ) ㄷㅎㄹ', 'True')
    _test('ㅁㅀㄱ ㅁㅀㄱ ㄷㅎㄷ', '[]')
    _test('ㄱ ㅁㅀㄴ ㅁㅀㄱ ㄷㅎㄷ', '[0]')
    _test('ㄱ ㅁㅀㄴ ㄴ ㄷ ㅁㅀㄷ ㄷㅎㄷ', '[0, 1, 2]')
    _test('ㄱ ㅁㅀㄴ ㄷㅎㄴ', '[0]')
    _test(
      'ㅀㄱ (ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄳㅎㄶ ㄱㅀㄷㅎ) ㄱㅀㄷ',
      "''",
      '\n\n'
    )
    _test(
      'ㅀㄱ (ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㄷㅎㄷ ㄳㅎㄶ ㄱㅀㄷㅎ) ㄱㅀㄷ',
      "'불꽃'",
      '불\n꽃\n'
    )
    _test('ㅅㅈㅎㄱ ㅅㅈㅎㄱ ㄷㅎㄷ', '{}')
    _test('ㅅㅈㅎㄱ ㅅㅈㅎㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄱ ㄷㅎㅁ', '{1: 2}')
    _test('ㄱ ㄴ ㅅㅈㅎㄷ ㄴ ㄷ ㅅㅈㅎㄷ ㄷㅎㄷ', '{0: 1, 1: 2}')
    _test(
      'ㄱ ㄴ ㅅㅈㅎㄷ ㄷ ㄹ ㅅㅈㅎㄷ ㅁ ㅂ ㅅㅈㅎㄷ ㄷㅎㄹ',
      '{0: 1, 2: 3, 4: 5}'
    )
    _test('ㄱ ㄴ ㅅㅈㅎㄷ ㄷ ㄹ ㅅㅈㅎㄷ ㄷ ㅁ ㅅㅈㅎㄷ ㄷㅎㄹ', '{0: 1, 2: 4}')
    _test('(ㅂ ㅂ ㅂㅎㄷ) (ㅁㅈㅎㄱ ㄱ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) ㄷㅎㄴ ㅎㅎㄴ', "b''")
    _test(
      '(ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ) (ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ) (ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ) ㄷㅎㄷ ㅎㅎㄴ',
      "b''"
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) (ㄳㄱ ㄴ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) (ㅁㅈㅎㄱ ㄱ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) ㄷㅎㄷ ㅎㅎㄴ',
      "b'\\x30'"
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) (ㄳㄱ ㄴ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) (ㄴ ㅁㅈㅎㄴ ㄱ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) ㄷㅎㄷ ㅎㅎㄴ',
      "b'\\x30\\x31'"
    )
  })
  it('test_add_short_circuit', function () {
    _test(
      '[] 목록ㅎㄱ (ㄱㅇㄱ 재다ㅎㄴ ㄱ ㄴㅎㄷ ㄱ ㄱㅇㄱㅎㄴ ㄱ ㄴㅎㄷ 더ㅎㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      '[ㄱ] 목록ㅎㄴ (ㄱㅇㄱ 재다ㅎㄴ ㄱ ㄴㅎㄷ ㄱ ㄱㅇㄱㅎㄴ ㄱ ㄴㅎㄷ 더ㅎㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      '[ㄴ] 목록ㅎㄴ (ㄱㅇㄱ 재다ㅎㄴ ㄱ ㄴㅎㄷ ㄱ ㄱㅇㄱㅎㄴ ㄱ ㄴㅎㄷ 더ㅎㄷㅎ)ㅎㄴ',
      'False'
    )
  })
  it('test_exponentiate', function () {
    _test('ㄱ ㄴ ㅅㅎㄷ', '0')
    _test('ㄴㄱ ㄴ ㅅㅎㄷ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ', '0.5')
    _test('ㄴㄱ ㄴㄱ ㅅㅎㄷ', '-1.0')
    _test('ㄱ ㅄㅎㄴ ㄴ ㅅㅎㄷ', '0i')
    _test('ㄱ ㄴ ㅄㅎㄷ ㄷ ㅅㅎㄷ', '-1+0i')
    _test('ㄴ ㄴ ㅄㅎㄷ ㄷ ㅅㅎㄷ ㄱ ㄷ ㅄㅎㄷ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ', 'True')
    _test(
      '(ㄴ ㄴ ㅄㅎㄷ ㄴㄱ ㅅㅎㄷ ㄷ ㄱㅎㄷ) ㄴ ㄴㄱ ㅄㅎㄷ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
  })
  it('test_floor_div', function () {
    _test('ㄱ ㄴ ㄴㄶㄷ', '0')
    _test('ㄴ ㄴ ㄴㄶㄷ', '1')
    _test('ㄴㄱ ㄴ ㄴㄶㄷ', '-1')
    _test('ㄷ ㄴㄱ ㄴㄶㄷ', '-2')
    _test('ㄹ ㄷ ㄴㄶㄷ', '1')
    _test('ㄺ ㄷ ㄴㄶㄷ', '-1')
    _test('ㄹ ㄷㄱ ㄴㄶㄷ', '-1')
    _test('ㄺ ㄷㄱ ㄴㄶㄷ', '1')
    _test('ㄹ (ㄷ ㄴㄱ ㅅㅎㄷ) ㄴㄶㄷ', '6.0')
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄹ ㄴㄶㄷ', '0.0')
  })
  it('test_modulo', function () {
    _test('ㄱ ㄴ ㄴㅁㅎㄷ', '0')
    _test('ㄴ ㄴ ㄴㅁㅎㄷ', '0')
    _test('ㄴㄱ ㄴ ㄴㅁㅎㄷ', '0')
    _test('ㄷ ㄴㄱ ㄴㅁㅎㄷ', '0')
    _test('ㄹ ㄷ ㄴㅁㅎㄷ', '1')
    _test('ㄺ ㄷ ㄴㅁㅎㄷ', '-1')
    _test('ㄹ ㄷㄱ ㄴㅁㅎㄷ', '1')
    _test('ㄺ ㄷㄱ ㄴㅁㅎㄷ', '-1')
    _test('ㄹ (ㄷ ㄴㄱ ㅅㅎㄷ) ㄴㅁㅎㄷ', '0.0')
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄹ ㄴㅁㅎㄷ', '0.5')
  })
})

describe('TestConstructor', function () {
  it('test_dict_basic', function () {
    _test('ㅅㅈ ㅎㄱ', '{}')
    _test('ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ', '{0: 1, 2: 3}')
    _test('ㄱ {ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ} ㅎㄴ', '1')
    _test('ㄷ {ㄱ ㄴ ㄷ ㄹ ㅅㅈ ㅎㅁ} ㅎㄴ', '3')
  })
  it('test_dict_various_keys', function () {
    _test('ㄱㅈㅎㄱ {ㄱㅈㅎㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㅂ ㅁㅈㅎㄴ {ㅂ ㅁㅈㅎㄴ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㄱ ㄴ ㅅㅈㅎㄷ {ㄱ ㄴ ㅅㅈㅎㄷ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㄱ ㄴ ㅅㅈㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test('ㄱ ㄴ ㅁㄹㅎㄷ {ㄱ ㄴ ㅁㄹㅎㄷ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㄱ ㄴ ㅁㄹㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test(
      '(ㄱ ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷㅎㄴ) (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ',
      '5'
    )
    _test(
      '(ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷ) (ㄱ ㄱㅇㄱㅎㄴ {ㄱ ㄱㅇㄱㅎㄴ ㅂ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ',
      '5'
    )
    _test('ㅀ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test('ㅁㅈ ㄴㄱㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test('ㅁㅈ ㅁㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test('ㅁㅈ ㅂㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test('ㄹㅎㄱ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
    _test('ㅀㄱ {ㅀㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㅂㄱㅎㄱ {ㅂㄱㅎㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㄷㅂㅎㄱ {ㄷㅂㅎㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㄱ ㄷㅂㅎㄴ {ㄱ ㄷㅂㅎㄴ ㅂ ㅅㅈㅎㄷ} ㅎㄴ', '5')
    _test('ㄱ ㄷㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㅂ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', '5')
  })
  it('test_dict_complicated_keys', function () {
    _test('ㄱ ㄴ ㅅㅈㅎㄷ ㄷ ㅅㅈㅎㄷ', '{{0: 1}: 2}')
    _test(
      '(ㄱ ㄴ ㅅㅈㅎㄷ ㄷ ㄹ ㅅㅈㅎㄷ ㄷㅎㄷ) (ㄱ ㄴ ㄷ ㄹ ㅅㅈㅎㅁ ㄷ ㅅㅈㅎㄷ) ㅎㄴ',
      '2'
    )
    _test('ㄱ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㄷ ㅅㅈㅎㄷ', '{[0, {}]: 2}')
    _test(
      '(ㄱ ㅁㅀㄴ ㅅㅈㅎㄱ ㅁㅀㄴ ㄷㅎㄷ) (ㄱ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㄷ ㅅㅈㅎㄷ)ㅎㄴ',
      '2'
    )
  })
  it('test_dict_various_values', function () {
    _test('ㄱㅈㅎㄱ {ㄱㅈㅎㄱ ㅂㄱㅎㄱ ㅅㅈㅎㄷ} ㅎㄴ', 'Nil')
    _test('ㅂ ㅁㅈㅎㄴ {ㅂ ㅁㅈㅎㄴ ㄱ ㅁㅈㅎㄴ ㅅㅈㅎㄷ} ㅎㄴ', "'0'")
    _test('ㄱ ㄴ ㅅㅈㅎㄷ {ㄱ ㄴ ㅅㅈㅎㄷ ㅅㅈㅎㄱ ㅅㅈㅎㄷ} ㅎㄴ', '{}')
    _test(
      'ㄱ ㄴ ㅅㅈㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㄷ ㄹ ㅅㅈㅎㄷ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ',
      '{2: 3}'
    )
    _test('ㄱ ㄴ ㅁㄹㅎㄷ {ㄱ ㄴ ㅁㄹㅎㄷ ㅁㅀㄱ ㅅㅈㅎㄷ} ㅎㄴ', '[]')
    _test(
      'ㄱ ㄴ ㅁㄹㅎㄷ (ㄱㅇㄱ {ㄱㅇㄱ ㄷ ㅁㅀㄴ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ',
      '[2]'
    )
    _test(
      '(ㄱ ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷㅎㄴ) (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ',
      "b'\\x00'"
    )
    _test(
      '(ㄴ ㄴ (ㅂ ㅂ ㅂㅎㄷ)ㅎㄷ) (ㄱ ㄱㅇㄱㅎㄴ {ㄱ ㄱㅇㄱㅎㄴ ㄴ ㄱㅇㄱㅎㄴ ㅅㅈㅎㄷ}ㅎㄴ ㅎ)ㅎㄴ',
      "b'\\x01'"
    )
    _test('ㅀ (ㄱㅇㄱ {ㄱㅇㄱ ㅂㅎ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄱ', '5')
    _test(
      'ㅁㅈ ㄴㄱㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄱ',
      "''"
    )
    _test(
      'ㄷ ㅁㅈ ㅁㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅂㅂㅎㄴ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄴ',
      "'2'"
    )
    _test(
      'ㄷ ㅁㅈㅎㄴ ㄱㅁ ㅂㅂㅎㄴ (ㄱㅇㄱ {ㄱㅇㄱ ㄱㅇㄱ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴㅎㄴ',
      "'2'"
    )
    _test('ㄹㅎㄱ (ㄱㅇㄱ {ㄱㅇㄱ ㅀㄱ ㅅㅈㅎㄷ} ㅎㄴ ㅎ) ㅎㄴ', "'5'", '5', '')
    _test('ㅀㄱ {ㅀㄱ ㅀㄱ ㅅㅈㅎㄷ} ㅎㄴ', "'5'", '5', '')
    _test(
      'ㅂㄱㅎㄱ {ㅂㄱㅎㄱ ㄴ ㅁㅈㅎㄴ ㅈㅀㄴ ㅅㅈㅎㄷ} ㅎㄴ',
      'Nil',
      '',
      '1'
    )
    _test('ㄱ {ㄱ ㄷㅂㅎㄱ ㅅㅈㅎㄷ} ㅎㄴ', '<예외: []>')
  })
  it('test_dict_complicated_values', function () {
    _test('ㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄷ', '{0: {1: 2}}')
    _test('ㄱ (ㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄷ) ㅎㄴ', '{1: 2}')
    _test('ㄴ ㄱ (ㄱ ㄴ ㄷ ㅅㅈㅎㄷ ㅅㅈㅎㄷ) ㅎㄴㅎㄴ', '2')
    _test('ㄱ ㄷ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㅅㅈㅎㄷ', '{0: [2, {}]}')
    _test('ㄱ {ㄱ ㄷ ㅅㅈㅎㄱ ㅁㄹㅎㄷ ㅅㅈㅎㄷ}ㅎㄴ', '[2, {}]')
  })
  it('test_list_basic', function () {
    _test('ㅁㄹ ㅎㄱ', '[]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁㄹ ㅎㅁ', '[0, 1, 2, 3]')
    _test('ㄱ ([ㄱ ㄴ ㄷ] ㅁㄹ ㅎㄹ) ㅎㄴ', '0')
    _test('ㄴ ([ㄱ ㄴ ㄷ] ㅁㄹ ㅎㄹ) ㅎㄴ', '1')
  })
  it('test_list_various', function () {
    _test(
      '목록ㅎㄱ 빈값ㅎㄱ ㄱ ㄱㅅㅎㄴ ㄴㅎ ㅁㄹ ㅎㅁ',
      '[[], Nil, 0, <Closure created at depth 0>]'
    )
    _test(
      'ㄱ 복소ㅎㄴ ㄱ 거짓ㅎㄱ 문자ㅎㄱ 사전ㅎㄱ 뜻밖ㅎㄱ 목록 ㅎㅅ',
      "[0i, 0, False, '', {}, <예외: []>]"
    )
  })
  it('test_string', function () {
    _test('ㅁㅈㅎㄱ', "''")
    _test('ㄱ ㅁㅈㅎㄴ', "'0'")
    _test('ㄱㄴ ㅁㅈㅎㄴ', "'-8'")
    _test('ㄴㄱ ㅁㅈㅎㄴ', "'-1'")
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㅁㅈㅎㄴ', "'0.5'")
    _test('(ㄷ ㄴㄱ ㅅㅎㄷ) ㄷ ㄱㅎㄷ ㅁㅈㅎㄴ', "'1.0'")
    _test('ㄱ ㅁㅈㅎㄴ ㅁㅈㅎㄴ', "'0'")
    _test('ㄱ ㅄㅎㄴ ㅁㅈㅎㄴ', "'0i'")
  })
  it('test_int', function () {
    _test('ㄱ ㅈㅅㅎㄴ', '0')
    _test('ㄱ ㅈㅅㅎㄴ ㅅㅅㅎㄴ ㅈㅅㅎㄴ', '0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅈㅅㅎㄴ', '0')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅈㅅㅎㄴ', '0')
    _test('ㅀㄱ ㄱㅇㄱ ㅈㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0', '0')
    _test('ㅀㄱ ㄱㅇㄱ ㅈㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0', '+0')
    _test('ㅀㄱ ㄱㅇㄱ ㅈㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0', '-0')
    _test('ㅀㄱ ㄱㅇㄱ ㅈㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '123', '123')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅈㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '0', '0')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅈㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '1', '01')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅈㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '-5', '-101')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅈㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '0', '00')
    _test('ㅀㄱ ㄱㅇㄱ ㄱㄷㄱ ㅈㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '12', 'c')
    _test('ㅀㄱ ㄱㅇㄱ ㄱㄷㄱ ㅈㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '28', '1c')
  })
  it('test_float', function () {
    _test('ㄱ ㅅㅅㅎㄴ', '0.0')
    _test('ㄱ ㅅㅅㅎㄴ ㅈㅅㅎㄴ ㅅㅅㅎㄴ', '0.0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅅㅅㅎㄴ', '0.5')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅅㅅㅎㄴ', '-0.5')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0.0', '0.0')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '1.0', '01.')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '-1.0', '-1.')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0.01', '.01')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '10.1', '10.1')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0.0001', '1e-4')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '0.0', '0.0')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '1.0', '01.')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '-0.5', '-.1')
    _test('ㅀㄱ ㄱㅇㄱ ㄷ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '2.5', '10.1')
    _test('ㅀㄱ ㄱㅇㄱ ㄱㄷㄱ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '0.0', '.0')
    _test('ㅀㄱ ㄱㅇㄱ ㄱㄷㄱ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '0.625', '.a')
    _test('ㅀㄱ ㄱㅇㄱ ㄱㄷㄱ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '-12.0', '-c.')
    _test('ㅀㄱ ㄱㅇㄱ ㄱㄷㄱ ㅅㅅㅎㄷ ㄳㅎㄶ ㄱㅀㄷ', '0.875', '+.e')
  })
  it('test_complex', function () {
    _test('ㄱ ㅄㅎㄴ', '0i')
    _test('ㄱ ㄱ ㅄㅎㄷ', '0i')
    _test('ㄴ ㅄㅎㄴ', '1+0i')
    _test('ㄴㄱ ㅄㅎㄴ', '-1+0i')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅄㅎㄴ', '0.5+0i')
    _test('ㄱ ㄴ ㅄㅎㄷ', 'i')
    _test('ㄱ ㄴㄱ ㅄㅎㄷ', '-i')
    _test('ㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㅄㅎㄷ', '0.5i')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄷㄱ ㅄㅎㄷ', '0.5-2i')
    _test('ㄱ (ㄹ ㄷㄱ ㅄㅎㄷ) ㅎㄴ', '3.0')
    _test('ㄴ (ㄹ ㄷㄱ ㅄㅎㄷ) ㅎㄴ', '-2.0')
    _test(
      '(ㄴㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㄱㅇㄱ ㅄㅎㄴ ㄶㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㄴㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ) (ㄱㅇㄱ (ㄱ ㄴ ㅄㅎㄷ) ㄱㅎㄷ ㄱ ㄱㅇㄱ ㅄㅎㄷ ㄶㄷㅎ)ㅎㄴ',
      'True'
    )
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0i', '0')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0i', '0.0')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0i', '0i')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0i', '0i')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0i', '0+0i')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '0i', '0.0+0.0i')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '1+2i', '1+2i')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '3-2.5i', '3-2.5i')
  })
  it('test_dict_key_equality', function () {
    _test('ㄱ ㅄㅎㄴ {ㄱ : ㄴ ㅅㅈㅎㄷ} ㅎㄴ', '1')
    _test('ㄱ {ㄱ : ㄴ, ㄱㅈㅎㄱ : ㄷ ㅅㅈㅎㅁ} ㅎㄴ', '1')
  })
  it('test_exception', function () {
    _test('ㄷㅂㅎㄱ', '<예외: []>')
    _test('ㄱ ㄷㅂㅎㄴ', '<예외: [0]>')
    _test('ㄱ ㄴ ㄷㅂㅎㄷ', '<예외: [0, 1]>')
  })
})

describe('TestFunctional', function () {
  it('test_try_catch', function () {
    _test('(ㄱ 뜻밖ㅎㄴ ㄷㅈㅎㄴ) (ㄴㅎ) ㅅㄷㅎㄷ', '1')
    _test('(ㄱ 뜻밖ㅎㄴ ㄷㅈㅎㄴ) (ㄱ ㄱㅇㄱㅎㄴ ㅎ) ㅅㄷㅎㄷ', '0')
    _test(
      '(ㄴ ㄷ 뜻밖ㅎㄷ ㄷㅈㅎㄴ) (ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ)ㅁㅂㅎㄴ ㅅㄷㅎㄷ',
      '3'
    )
  })
})

describe('TestFunctional', function () {
  it('test_pipe', function () {
    _test('ㄱ ㄴㄱㅎㄱ ㅎㄴ', '0')
    _test('ㄱ ㄴ ㄷ ㅁㅀㄹ ㄴㄱㅎㄱ ㅎㄴ', '[0, 1, 2]')
    _test('ㄱ ㄴ ㅁㅀㄷ ㄱㅈㅎㄱ ㅁㅂㅎㄴ ㅁㅈ ㄴㄱㅎㄷ ㅎㄴ', "'1'")
    _test('ㄷ ㅁㅈ (ㄱㅇㄱ ㄱㅇㄱ ㄷㅎㄷㅎ) ㅈㅅ ㄴㄱㅎㄹ ㅎㄴ', '22')
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㅂㄹㅎㄴ (ㄱㅇㄱ ㄱㅇㄱ ㄷㅎㄷㅎ) ㅈㅅ ㄴㄱㅎㄷ ㅁㄷㅎㄷ',
      '[11, 22, 33, 44, 55]'
    )
    _test(
      'ㅁㅈ (ㄱㅇㄱ ㄱㅇㄱ ㄷㅎㄷㅎ) ㅈㅅ ㄴㄱㅎㄹ (ㄷ ㄱㅇㄱㅎㄴ ㄹ ㄱㅇㄱㅎㄴ ㄷㅎㄷㅎ)ㅎㄴ',
      '55'
    )
  })
  it('test_spread', function () {
    _test('ㄱㅇㄱ ㅈㄷㅎㄶ ㅂㅂㅎㄴ ㅎㄱ', '0')
    _test('ㅁ ㄱㅇㄱ ㅈㄷㅎㄶ ㅂㅂㅎㄴ ㅎㄴ', '1')
    _test('ㅁ ㅁ ㄱㅇㄱ ㅈㄷㅎㄶ ㅂㅂㅎㄴ ㅎㄷ', '2')
    _test(
      'ㄴ ㄴㄱ [ㄱㅇㄱ (ㄱㅇㄱ ㄷ ㄷㅎㄷㅎ) ㅁㄷㅎㄷㅎ] ㅂㅂㅎㄴ ㅎㄷ',
      '[3, 1]'
    )
    _test(
      '[ㄱㅇㄱ (ㄱㅇㄱ ㄷ ㄷㅎㄷㅎ) ㅁㄷㅎㄷㅎ] ㅂㅂㅎㄴ (ㄴ ㄱㅇㄱㅎㄴ ㄷ ㄹ ㄱㅇㄱㅎㄷ ㄷㅎㄷㅎ)ㅎㄴ',
      '[3, 4, 5]'
    )
  })
  it('test_collect', function () {
    _test('ㄱ ㄴ ㄷ ㄹ ㅁㅀㅁ ㄷ ㅁㅂㅎㄴ ㅎㄴ', '6')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁㅀㅁ ㄷ ㅁㅂㅎㄴ ㅁㅈ ㄴㄱㅎㄷ ㅎㄴ', "'6'")
    _test('ㄴㄱ ㄴ ㄷ ㄹ ㅁㅀㅁ ㄱ ㅁㅂㅎㄴ ㅁㅈ ㄴㄱㅎㄷ ㅎㄴ', "'-6'")
    _test('ㄱ ㄴ ㄷ ㄹ ㅁㅀㅁ ㅁㅈ ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄴ ㅎㄴ', "'0123'")
    _test(
      'ㄱ ㄴ ㄷ ㄹ ㅁㅀㅁ ㅁㅈ ㄴㄱㅎㄴ ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄴ ㅎㄴ',
      "'0123'"
    )
    _test(
      'ㄱ ㅁㅂㅎㄴ ㅁㅈ ㄴㄱㅎㄷ (ㄴㄱ ㄴ ㅁㅀㄷ ㄱㅇㄱㅎㄴ ㄷ ㄹ ㅁㅀㄷ ㄱㅇㄱㅎㄴ ㄷㅎㄷㅎ)ㅎㄴ',
      "'-16'"
    )
  })
})

describe('TestIO', function () {
  it('test_input', function () {
    _test('ㅀㄱ', 'Nil', '')
    _test('ㅀㄱ', "''", '\n')
    _test('ㅀㄱ', "'하늘'", '하늘')
    _test('ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄳㅎㄶ ㄱㅀㄷ', '3.141592', '3.141592')
    _test('ㅀㄱ ㅅㅅ ㄳ ㄴㄱㅎㄷ ㄱㅀㄷ', '3.141592', '3.141592')
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ 목록ㅎㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "['', Nil]",
      '\n'
    )
  })
  it('test_print', function () {
    _test('ㅀㄱ ㄱㅇㄱ ㅈㅀㄶ ㄱㅀㄷ', 'Nil', '\n', '')
    _test('ㅀㄱ ㄱㅇㄱ ㅈㅀㄶ ㄱㅀㄷ', 'Nil', '하늘', '하늘')
    _test('ㅀㄱ ㅈㄹ ㄱㅀㄷ', 'Nil', '\n', '')
    _test('ㅀㄱ ㅈㄹ ㄱㅀㄷ', 'Nil', '하늘', '하늘')
    _test(
      'ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄴㄱ ㅅㅎㄷ ㅁㅈㅎㄴ ㅈㅀㄶ ㄱㅀㄷ',
      'Nil',
      '5',
      '0.2'
    )
    _test(
      'ㅀㄱ ㄱㅇㄱ ㅅㅅㅎㄴ ㄴㄱ ㅅㅎㄷ ㅁㅈㅎㄴ ㅈㅀㄶ ㄱㅀㄷ',
      'Nil',
      '-1',
      '-1.0'
    )
  })
  it('test_return', function () {
    _test('ㄴ ㄳㅎㄴ', '1')
    _test('ㄴ ㄱㅇㄱㅎㅎㄴ ㄳㅎㄴ', '1')
  })
  it('test_bind', function () {
    _test('ㄴ ㄳㅎㄴ (ㄱㅇㄱ ㄴ ㄷㅎㄷ ㄳㅎㄶ)ㄱㅀㄷ', '2')
    _test(
      'ㄹㅎㄱ (ㄱㅇㄱ ㅅㅅㅎㄴ ㄴㄱ ㅅㅎㄷ ㄱㅅㅎㄴㅎ) ㄱㄹㅎㄷ (ㄱㅇㄱ ㄱㅅㅎㄴㅎ) (ㄱ ㄱㅅㅎㄴㅎ)ㄱㄹㅎㄹ',
      '0.5',
      '2'
    )
    _test(
      'ㄹㅎㄱ (ㄱㅇㄱ ㅅㅅㅎㄴ ㄴㄱ ㅅㅎㄷ ㄱㅅㅎㄴㅎ) ㄱㄹㅎㄷ (ㄱㅇㄱ ㄱㅅㅎㄴㅎ) (ㄱ ㄱㅅㅎㄴㅎ)ㄱㄹㅎㄹ',
      '0',
      '0'
    )
  })
  it('test_file_descriptor', function () {
    _test('ㄱ ㄹ ㄱㄴㅎㄷ (ㄴ ㄹ ㄱㅇㄱㅎㄷㅎ)ㄱㅀㄷ', "b'\\x61'", 'a')
    _test(
      "ㄴ ㅈㄹ ㄱㄴㅎㄷ (b'ㄴㅁㄴ ㄴ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷㅎㄴ' ㅈㄹ ㄱㅇㄱㅎㄷㅎ)ㄱㅀㄷ",
      '1',
      '',
      'a'
    )
  })
  it('test_file_read_write', function () {
    _test(
      'ㄹㅎㄱ {ㄱㅇㄱ ㅈㄹ ㄱㄴㅎㄷ (ㄱ ㅁㅈ <ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ> ㄴㄱㅎㄷㅎㄴ ㅈㄹ ㄱㅇㄱㅎㄷㅎ)ㄱㅀㄷㅎ}ㄱㅀㄷ',
      '1',
      'test/test_builtins/testdata/test.txt'
    )
    _test(
      'ㄹㅎㄱ {ㄱㅇㄱ ㄹ ㄱㄴㅎㄷ (ㄴㄱ ㄹ ㄱㅇㄱㅎㄷㅎ)ㄱㅀㄷㅎ}ㄱㅀㄷ',
      "b'\\x30'",
      'test/test_builtins/testdata/test.txt'
    )
    _test(
      'ㄹㅎㄱ {ㄱㅇㄱ ㄹ ㄱㄴㅎㄷ (ㄴ ㄹ ㄱㅇㄱㅎㄷㅎ)ㄱㅀㄷㅎ}ㄱㅀㄷ',
      "b'\\x30'",
      'test/test_builtins/testdata/test.txt'
    )
  })
  it('test_file_seek', function () {
    _test(
      'ㄹㅎㄱ {ㄱㅇㄱ ㄹ ㄱㄴㅎㄷ (ㄴ ㄹ ㄱㅇㄱㅎㄷ [ㄱ ㅈ ㄱㅇㄴㅎㄷ {ㄴ ㄹ ㄱㅇㄷㅎㄷ (ㄱㅇㄱ ㄱㅇㄷ ㄷㅎㄷ ㄱㅅㅎㄴㅎ)ㄱㅀㄷㅎ}ㄱㅀㄷㅎ]ㄱㅀㄷㅎ)ㄱㅀㄷㅎ}ㄱㅀㄷ',
      "b'\\x30\\x30'",
      'test/test_builtins/testdata/test.txt'
    )
  })
})

describe('TestLogic', function () {
  it('test_equals_basic', function () {
    _test('ㄶㄱ', 'True')
    _test('ㄴ (ㄴㄱ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ ㄷ ㅅㅎㄷ) ㄶㄹ', 'True')
    _test('ㅈㅈㅎㄱ (ㄱ ㄴ ㅈㅎㄷ) ㄶㄷ', 'True')
    _test('ㄱㅈㅎㄱ (ㄱ ㄴ ㅈㅎㄷ) ㄶㄷ', 'False')
    _test('ㅁㅈㅎㄱ ㅁㅈㅎㄱ ㄶㄷ', 'True')
    _test('ㄱ ㄱ (ㅈ ㄴㄱ ㅅㅎㄷ) ㄱㅎㄷ ㄶㄷ', 'True')
    _test('ㄱ ㄱ ㅄㅎㄴ ㄶㄷ', 'True')
    _test('ㄱ ㅁㅈㅎㄴ ㄱ (ㅈ ㄴㄱ ㅅㅎㄷ) ㄱㅎㄷ ㅁㅈㅎㄴ ㄶㄷ', 'False')
    _test('ㄱ ㅁㅈㅎㄴ ㄱ ㅄㅎㄴ ㅁㅈㅎㄴ ㄶㄷ', 'False')
    _test('ㄱ ㄱㅈㅎㄱ ㄶㄷ', 'False')
  })
  it('test_equals_list', function () {
    _test('(ㄴㄱ ㄱ ㄴ ㅁㅀㄹ) (ㄱㅇㄱ ㄱㅇㄱ ㄶㄷㅎ)ㅎㄴ', 'True')
    _test(
      '(ㄴㄱ ㄱ ㄴ ㅁㅀㄹ) (ㄱㅇㄱ (ㄱㅇㄱ (ㄱㅇㄱㅎ) ㅁㄷㅎㄷ) ㄶㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㄴㄱ ㄱ ㄴ ㅁㅀㄹ) (ㄱㅇㄱ (ㄱㅇㄱ (ㄱㅇㄱ ㄹ ㅅㅎㄷㅎ) ㅁㄷㅎㄷ) ㄶㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㄴㄱ ㄱ ㄴ ㅁㅀㄹ) (ㄱㅇㄱ (ㄱㅇㄱ (ㄱㅇㄱ ㄹ ㅅㅎㄷㅎ) ㅁㄷㅎㄷ) ㄶㄷㅎ)ㅎㄴ',
      'True'
    )
    _test('ㄱ ㄴ ㅁㅀㄷ ㄱ ㅁㅀㄴ ㄶㄷ', 'False')
    _test('ㄱ ㄴ ㅁㅀㄷ ㄱ ㄷ ㅁㅀㄷ ㄶㄷ', 'False')
    _test('ㄱ ㄴ ㅁㅀㄷ ㅂㄱㅎㄱ ㄶㄷ', 'False')
  })
  it('test_equals_dict', function () {
    _test('ㅅㅈㅎㄱ ㅅㅈㅎㄱ ㄶㄷ', 'True')
    _test('{ㄴㄱ ㄱ ㄴ ㄷ ㅅㅈㅎㅁ} {ㄴ ㄷ ㄴㄱ ㄱ ㅅㅈㅎㅁ} ㄶㄷ', 'True')
    _test('{ㄴㄱ ㄱ ㄴ ㄷ ㅅㅈㅎㅁ} {ㄴㄱ ㄱ ㄴ ㄱ ㅅㅈㅎㅁ} ㄶㄷ', 'False')
    _test('ㄱ ㄴ ㅅㅈㅎㄷ ㄱ ㄴ ㄷ ㄹ ㅅㅈㅎㅁ ㄶㄷ', 'False')
    _test('ㄱ ㄴ ㅅㅈㅎㄷ ㅅㅈㅎㄱ ㄶㄷ', 'False')
  })
  it('test_equals_other', function () {
    _test('ㅂㄱㅎㄱ ㅂㄱㅎㄱ ㄶㄷ', 'True')
    _test(
      '(ㄱ ㅁㅈㅎㄴ ㅈㅀㄴ) (ㄱㅇㄱ ㅂㄱㅎㄱ ㄶㄷ ㄳㅎㄶ) ㄱㅀㄷ',
      'True',
      '',
      '0'
    )
    _test('ㄶ (ㄱㅇㄱ ㄱㅇㄱ ㄶㄷㅎ)ㅎㄴ', 'True')
    _test('ㄶ (ㄱㅇㄱ ㄶ ㄶㄷㅎ)ㅎㄴ', 'False')
    _test('ㄶ ㄶ (ㄱㅇㄱ ㄴㅇㄱ ㄶㄷㅎ)ㅎㄷ', 'False')
    _test('ㄷ ㄳㅎㄴ (ㄱㅇㄱ ㄱㅇㄱ ㄶㄷㅎ)ㅎㄴ', 'True')
    _test('ㄷ ㄳㅎㄴ (ㄱㅇㄱ ㄷ ㄳㅎㄴ ㄶㄷㅎ)ㅎㄴ', 'True')
    _test('ㄷ ㄳㅎㄴ ㄷ ㄳㅎㄴ (ㄱㅇㄱ ㄴㅇㄱ ㄶㄷㅎ)ㅎㄷ', 'True')
    _test(
      'ㅁㅈㅎㄱ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄱㅇㄱ ㄱㅇㄱ ㄶㄷ ㅎㅎㄴ',
      'True'
    )
    _test(
      '(ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ) (ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ) ㄶㄷ ㅎㅎㄴ',
      'True'
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) (ㄳㄱ ㄴ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) (ㄱ ㅁㅈㅎㄴ ㄱ ㄴ ㄱㅇㄱㅎㄷㅎㄴ) ㄶㄷ ㅎㅎㄴ',
      'True'
    )
    _test('뜻밖ㅎㄱ ㄴ 뜻밖ㅎㄴ ㄴㅎㄷ', 'False')
    _test('ㄱ 뜻밖ㅎㄴ ㄱ 뜻밖ㅎㄴ ㄴㅎㄷ', 'True')
    _test('ㄱ 뜻밖ㅎㄴ ㄴ 뜻밖ㅎㄴ ㄴㅎㄷ', 'False')
  })
  it('test_negate', function () {
    _test('ㅈㅈㅎㄱ ㅁㅎㄴ', 'False')
    _test('ㄱㅈㅎㄱ ㅁㅎㄴ', 'True')
  })
  it('test_less_than', function () {
    _test('ㄴ ㄷ ㅈㅎㄷ', 'True')
    _test('ㄷ ㄷ ㅈㅎㄷ', 'False')
    _test('ㄹ ㄷ ㅈㅎㄷ', 'False')
  })
  it('test_true', function () {
    _test('ㅈㅈㅎㄱ', 'True')
    _test('ㄱ ㄴ ㅈㅈㅎㄱㅎㄷ', '0')
  })
  it('test_false', function () {
    _test('ㄱㅈㅎㄱ', 'False')
    _test('ㄱ ㄴ ㄱㅈㅎㄱㅎㄷ', '1')
  })
})

describe('TestModule', function () {
  it('test_load_from_path', function () {
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅁㅂㅈㄱㄷㄴㅁㅂㄷㅂㄹㄱㄹㄹㄱㅁㄷㅂㄹㅁㄹㄴㄱㅁㅈㅂㅁㅅㅅㄹㅁㅁㅁㄹㄷㅈㄷㄱㅁㄹㄷㅁㄴㅁㅅㄱㄷㄹㅈㅁㄴ (ㄴ ㄹㄷㄱ ㄱㅇㄱㅎㄷ)ㅎㄴ (ㄱ ㄴ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ ㅂㅎㄴ',
      "'ㄱㄴㄷㄹㅁㅂㅅㅈ'"
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅅㅂㅁㅈㄷㄱㄹㅈㄴㅁㄷㄱㄹㅂㄷㅈㄱㅅㅅㄱㄱㅂㄷㅈㄱㅈㄷㄱㄱㅈㄹㄴㅂㅂㅈㅈㄱㄹㄷㅁㄹㅂㄹㄴㄹㄴㅂㅁㅁㅂㄹㅁㄱㅈㄷㅂㅁㅂㄹㅈㄴㄴㅁㅁㅅㅂㄱㄱㅈㅁㄱㄹㄱㅂㄴㅁㅅㅅㄴㄹㄱ (ㄴ ㅅㄹㄱ ㄱㅇㄱㅎㄷ)ㅎㄴ (ㄱ ㄴ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ ㅂㅎㄴ (ㅂ ㅂ ㅂㅎㄷ) ㅁㅂㅈㄱㄷㄴㅁㅂㄷㅂㄹㄱㄹㄹㄱㅁㄷㅂㄹㅁㄹㄴㄱㅁㅈㅂㅁㅅㅅㅈㄹㅁㄴㄴㅅㅂㅅㅂㅁㅂㅁㄷㄷㅅㅅㄴㄷㅁㄹㅂㄷㅅㅅㅂㅈㅁㄱㄷㄷㅈㄷㄱㅁㄹㄷㅁㄴㅁㅅㄱㄷㄹㅈㅁㄴ (ㄴ ㅁㄹㄱ ㄱㅇㄱㅎㄷ)ㅎㄴ (ㄱ ㄴ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ ㅂㅎㄴ ㄶㄷ',
      'True'
    )
  })
  it('test_load_from_literal', function () {
    _test('조각글 표 ㅂㅎㄷ', "'ㄱㄴㄷㄹㅁㅂㅅㅈ'")
    _test('ㄱ 조각글 평범숫자 ㅂㅎㄷ ㅎㄴ', "'ㄱ'")
    _test('ㄴ 조각글 평범숫자 ㅂㅎㄷ ㅎㄴ', "'ㄴ'")
    _test('ㄴㄱ 조각글 평범숫자 ㅂㅎㄷ ㅎㄴ', "'ㄴㄱ'")
    _test('ㄴㄴ 조각글 평범숫자 ㅂㅎㄷ ㅎㄴ', "'ㄴㄴ'")
    _test('ㄱㄴㄷㄻ 조각글 평범숫자 ㅂㅎㄷ ㅎㄴ', "'ㄱㄴㄷㄹㅁ'")
    _test('조각글 평범숫자 ㅂㅎㄷ 조각글 평범숫자 ㅂㅎㄷ ㄶㄷ', 'True')
  })
})

describe('TestSequence', function () {
  it('test_len', function () {
    _test('ㅁㅀㄱ ㅈㄷㅎㄴ', '0')
    _test('ㄱ ㅁㅀㄴ ㅈㄷㅎㄴ', '1')
    _test('ㄱ ㄴ ㅁㅀㄷ ㅈㄷㅎㄴ', '2')
    _test('ㄱ ㅁㅀㄴ ㄴ ㅁㅀㄴ ㄷㅎㄷ ㅈㄷㅎㄴ', '2')
    _test('ㅁㅈㅎㄱ ㅈㄷㅎㄴ', '0')
    _test('ㄷㄴㄱ ㅁㅈㅎㄴ ㅈㄷㅎㄴ', '2')
    _test('ㅁㅈㅎㄱ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅈㄷㅎㄴ', '0')
    _test('ㄷㄴㄱ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅈㄷㅎㄴ', '2')
    _test('ㄷㄴㄱ ㅁㅈㅎㄴ (ㄱ ㄷ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷㅎㄹ)ㅎㄴ ㅈㄷㅎㄴ', '4')
    _test('뜻밖ㅎㄱ ㅈㄷㅎㄴ', '0')
    _test('ㄱ 뜻밖ㅎㄴ ㅈㄷㅎㄴ', '1')
    _test('ㄱ ㄴ 뜻밖ㅎㄷ ㅈㄷㅎㄴ', '2')
  })
  it('test_slice', function () {
    _test('ㅁㅀㄱ ㄱ ㅂㅈㅎㄷ', '[]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄱ ㅂㅈㅎㄷ', '[0, 1, 2, 3, 4]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄴ ㅂㅈㅎㄷ', '[1, 2, 3, 4]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄹ ㅂㅈㅎㄷ', '[3, 4]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㅂ ㅂㅈㅎㄷ', '[]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄴㄱ ㅂㅈㅎㄷ', '[4]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄱ ㄷ ㅂㅈㅎㄹ', '[0, 1]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄴ ㄴㄱ ㅂㅈㅎㄹ', '[1, 2, 3]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄹ ㄹㄱ ㅂㅈㅎㄹ', '[]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄹ ㅅ ㅂㅈㅎㄹ', '[3, 4]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄱ ㄹ ㄷ ㅂㅈㅎㅁ', '[0, 2]')
    _test('ㄱ ㄴ ㄷ ㄹ ㅁ ㅁㅀㅂ ㄱ ㄴㄱ ㄹ ㅂㅈㅎㅁ', '[0, 3]')
    _test('ㅁㅈㅎㄱ ㄱ ㅂㅈㅎㄷ', "''")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄱ ㅂㅈㅎㄷ', "'12345'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄴ ㅂㅈㅎㄷ', "'2345'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄹ ㅂㅈㅎㄷ', "'45'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㅂ ㅂㅈㅎㄷ', "''")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄴㄱ ㅂㅈㅎㄷ', "'5'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄱ ㄷ ㅂㅈㅎㄹ', "'12'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄴ ㄴㄱ ㅂㅈㅎㄹ', "'234'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄹ ㄹㄱ ㅂㅈㅎㄹ', "''")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄹ ㅅ ㅂㅈㅎㄹ', "'45'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄱ ㄹ ㄷ ㅂㅈㅎㅁ', "'13'")
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ ㄱ ㄴㄱ ㄹ ㅂㅈㅎㅁ', "'14'")
    _test('ㅁㅈㅎㄱ ㄱ ㅂㅈㅎㄷ', "''")
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄱ ㅂㅈㅎㄷ',
      "b'\\x31\\x32\\x33\\x34\\x35'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄴ ㅂㅈㅎㄷ',
      "b'\\x32\\x33\\x34\\x35'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄹ ㅂㅈㅎㄷ',
      "b'\\x34\\x35'"
    )
    _test('ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㅂ ㅂㅈㅎㄷ', "b''")
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄴㄱ ㅂㅈㅎㄷ',
      "b'\\x35'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄱ ㄷ ㅂㅈㅎㄹ',
      "b'\\x31\\x32'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄴ ㄴㄱ ㅂㅈㅎㄹ',
      "b'\\x32\\x33\\x34'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄹ ㄹㄱ ㅂㅈㅎㄹ',
      "b''"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄹ ㅅ ㅂㅈㅎㄹ',
      "b'\\x34\\x35'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄱ ㄹ ㄷ ㅂㅈㅎㅁ',
      "b'\\x31\\x33'"
    )
    _test(
      'ㄵㄱㄱㄹ ㅁㅈㅎㄴ (ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷㅎㄷ)ㅎㄴ ㄱ ㄴㄱ ㄹ ㅂㅈㅎㅁ',
      "b'\\x31\\x34'"
    )
  })
  it('test_map', function () {
    _test('ㅁㅀㄱ ㄱㅇㄱ ㄷ ㅅㅎㄷㅎ ㅁㄷㅎㄷ', '[]')
    _test(
      'ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㄱㅇㄱ ㄷ ㅅㅎㄷㅎ ㅁㄷㅎㄷ',
      '[1, 0, 1, 4, 9]'
    )
    _test(
      'ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㄱㅇㄱ ㅁㅀㄶ ㅁㄷㅎㄷ',
      '[[-1], [0], [1], [2], [3]]'
    )
    _test('ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㅁㄹ ㅁㄷㅎㄷ', '[[-1], [0], [1], [2], [3]]')
    _test('ㅁㅀㄱ ㅁㄹ ㅁㄷㅎㄷ', '[]')
    _test('ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㅁㅈ ㅁㄷㅎㄷ', "['-1', '0', '1', '2', '3']")
  })
  it('test_filter', function () {
    _test('ㅁㅀㄱ ㄱ ㄱㅇㄱ ㅈㅎㄷㅎ ㅅㅂㅎㄷ', '[]')
    _test('ㄴㄱ ㄱ ㄴ ㄷㄱ ㄹ ㅁㅀㅂ ㄱ ㄱㅇㄱ ㅈㅎㄷㅎ ㅅㅂㅎㄷ', '[1, 3]')
    _test('ㄴㄱ ㄱ ㄴ ㄷㄱ ㄹ ㅁㅀㅂ ㄱㅇㄱ ㄱ ㅈㅎㄷㅎ ㅅㅂㅎㄷ', '[-1, -2]')
    _test('ㄴㄱ ㄱ ㄴ ㄷㄱ ㄹ ㅁㅀㅂ ㄱㅇㄱ ㄷㄱ ㅈㅎㄷㅎ ㅅㅂㅎㄷ', '[]')
  })
  it('test_fold', function () {
    _test('ㅁㅀㄱ ㄱ ㅀ ㅅㅀㄹ', '0')
    _test('ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㄷ ㅅㅀㄷ', '5')
    _test('ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ ㅅㅀㄷ', '5')
    _test('ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㅂ ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ ㅅㅀㄹ', '10')
    _test('ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㅅㅀㄷ', '5')
    _test('ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ ㅂ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁㅀㅂ ㅅㅀㄹ', '10')
    _test('ㅁ ㄷ ㄴㄱ ㅁㅀㄹ ㄱㅇㄱ ㄴㅇㄱ ㅅㅎㄷㅎ ㅅㅀㄷ', '2.0')
    _test('ㄱㅇㄱ ㄴㅇㄱ ㅅㅎㄷㅎ ㄷㄱ ㄷ ㄴㄱ ㅁㅀㄹ ㅅㅀㄷ', '0.25')
    _test(
      'ㅁ ㄷ ㄴㄱ ㅁㅀㄹ (ㅁㅈ ㄴㄱㅎㄴ) ㅁㄷㅎㄷ (ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ) ㅅㅀㄷ',
      "'42-1'"
    )
    _test(
      '(ㄱㅇㄱ ㄴㅇㄱ ㄷㅎㄷㅎ) ㅁ ㄷ ㄴㄱ ㅁㅀㄹ (ㅁㅈ ㄴㄱㅎㄴ) ㅁㄷㅎㄷ ㅅㅀㄷ',
      "'42-1'"
    )
  })
})

describe('TestString', function () {
  it('test_split', function () {
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅀㄴ ㄳㅎㄶ ㄱㅀㄷ', "['a', 'b', 'c']", 'abc')
    _test('ㅀㄱ ㄱㅇㄱ ㅂㅀㄴ ㄳㅎㄶ ㄱㅀㄷ', "['가', 'a', '1', ' ']", '가a1 ')
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㅂㅀㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "['a', 'b', 'c']",
      'a b c\n '
    )
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㅂㅀㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "['평범한', '한글']",
      '평범한 한글\n '
    )
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㅂㅀㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "['평', '범', '한', '한', '글']",
      '평범한한글\n\n'
    )
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㅂㅀㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "['']",
      '\n '
    )
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㅂㅀㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "[' ']",
      ' \n\n'
    )
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㄱㅇㄱ ㅂㅀㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "['', '']",
      ' \n '
    )
  })
  it('test_join', function () {
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㅂㅀㄴ ㄱㅇㄱ ㄱㅁㅎㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "'a|b|c'",
      'abc\n|'
    )
    _test(
      'ㅀㄱ ㅀㄱ ㄱㅇㄴ ㅂㅀㄴ ㄱㅇㄱ ㄱㅁㅎㄷ ㄳㅎㄶ ㄱㅀㄷㅎ ㄱㅀㄷ',
      "'산과 들과 강과 별'",
      '산들강별\n과 '
    )
  })
})

describe('TestBitwise', function () {
  it('test_bitwise_basic', function () {
    _test('ㅂ ㅂㄷ ㄱ ㅂㅎㄹ, ㄱ ㅂ ㅂㄷ ㅂㅎㄷㅎㄴ, ㄶㄷ', 'True')
    _test('ㅂ ㅂㄷ ㄷ ㅂㅎㄹ, ㄷ ㅂ ㅂㄷ ㅂㅎㄷㅎㄴ, ㄶㄷ', 'True')
    _test('ㅂ ㅂㄷ ㅁ ㅂㅎㄹ, ㅁ ㅂ ㅂㄷ ㅂㅎㄷㅎㄴ, ㄶㄷ', 'True')
    _test('ㅂ ㅂㄷ ㅂ ㅂㅎㄹ, ㅂ ㅂ ㅂㄷ ㅂㅎㄷㅎㄴ, ㄶㄷ', 'True')
    _test('ㅂ ㅂㄷ ㅈ ㅂㅎㄹ, ㅈ ㅂ ㅂㄷ ㅂㅎㄷㅎㄴ, ㄶㄷ', 'True')
  })
  it('test_bitwise_and', function () {
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄴㄱ ㅂ ㅂㄷ ㄱ ㅂㅎㅀㄷ ㄱㅇㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄱ ㅂ ㅂㄷ ㄱ ㅂㅎㅀㄷ ㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
  })
  it('test_bitwise_or', function () {
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄴㄱ ㅂ ㅂㄷ ㄷ ㅂㅎㅀㄷ ㄴㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄱ ㅂ ㅂㄷ ㄷ ㅂㅎㅀㄷ ㄱㅇㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
  })
  it('test_bitwise_not', function () {
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㅂ ㅂㄷ ㅁ ㅂㅎㅀㄴ ㄱㅇㄱ ㄷㅎㄷ ㄴㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
  })
  it('test_bitwise_xor', function () {
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄱㅇㄱ ㅂ ㅂㄷ ㅂ ㅂㅎㅀㄷ ㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄱ ㅂ ㅂㄷ ㅂ ㅂㅎㅀㄷ ㄱㅇㄱ ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ (ㄱㅇㄱ ㄴㄱ ㅂ ㅂㄷ ㅂ ㅂㅎㅀㄷ (ㄱㅇㄱ ㅂ ㅂㄷ ㅁ ㅂㅎㅀㄴ) ㄶㄷㅎ) ㅁㄷㅎㄷ ㄱ ㅁㅂㅎㄶㄴ',
      'True'
    )
  })
  it('test_bitwise_shift', function () {
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㄱ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㄴ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㄷ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㄹ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅁ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅂ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅅ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅈ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄱㅎㄷ, ㄱㅇㄴ ㄱㅇㄱ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㄱ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㄴ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㄷ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㄹ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㅁ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㅂ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
    _test(
      '[ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㄱㄴㄱ [ㅅ (ㄱㅇㄴ (ㄷ ㄱㅇㄱ ㅅㅎㄷ) ㄴㄶㄷ, ㄱㅇㄴ ㄱㅇㄱ ㄴㄱ ㄱㅎㄷ ㅂ ㅂㄷ ㅈ ㅂㅎㅀㄷ, ㄶㄷㅎㅎ)ㅎㄴ] ㅁㄷㅎㄷ ㄷ ㅁㅂㅎㄶㄴ',
      'True'
    )
  })
})

describe('TestByte', function () {
  it('test_byte_basic', function () {
    _test('ㅂ ㅂ ㅂㅎㄷ', '<Builtin Module ㅂ ㅂ>')
  })
  it('test_utf_8', function () {
    _test('ㅁㅈㅎㄱ ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b''")
    _test('ㅁㄴㄱ ㅁㅈㅎㄴ ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x31\\x32'")
    _test('(ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ) ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ', "''")
    _test(
      '(ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ) ㅁㄴㄱ ㅁㅈㅎㄴ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ',
      "'12'"
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) [ㅁㅀㄱ] (ㄴ ㄴ ㄱㅇㄱㅎㄷ) (ㄱ ㄴ ㄱㅇㄱㅎㄷ) ㄴㄱㅎㄷ ㅁㄷㅎㄷ ㅎㅎㄴ',
      '[]'
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㄱㄴㅂㄷㅅㄱㄹㄹㅁㅂㅂㅈㅅㄱㄹㄴㄱㅁㅁㄹㅈㅅㄹㄹㄷㅅㄴㅅㅅㄱㄴㄹㄴㅁㄱ (ㄴ ㅂㄴㄱ ㄱㅇㄱㅎㄷ) (ㄱ ㄴ ㄱㅇㄱㅎㄷ) ㄴㄱㅎㄷㅎㄴ ㅎㅎㄴ',
      "'Hello, world!'"
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅂㅂㅈㅈㄱㄹㄷㅁㄹㅂㄹㄴㄹㄴㅂㅁㅂㅂㅈㄷㄴㄴㅈㅁㄱㅁㅁㅅㅅㄹㅂㅁㅁㄹㄷㅂㅅㄴㅅㅂㄱㄱㄷ (ㄴ ㄱㄷㄱ ㄱㅇㄱㅎㄷ) (ㄱ ㄴ ㄱㅇㄱㅎㄷ) ㄴㄱㅎㄷㅎㄴ ㅎㅎㄴ',
      "'평범한 한글'"
    )
    _test(
      'ㄹㅎㄱ ㄱ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㄱㅅ ㄴㄱㅎㄷ ㄱㄹㅎㄷ',
      "b'\\xF0\\x9F\\x8F\\xB3\\xEF\\xB8\\x8F\\xE2\\x80\\x8D\\xE2\\x9A\\xA7\\xEF\\xB8\\x8F'",
      '🏳️\u200d⚧️'
    )
  })
  it('test_utf_16', function () {
    _test('ㅁㅈㅎㄱ ㄱ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xFF\\xFE'")
    _test(
      'ㅁㄴㄱ ㅁㅈㅎㄴ ㄱ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ',
      "b'\\xFF\\xFE\\x31\\x00\\x32\\x00'"
    )
    _test('(ㄱ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ) ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ', "''")
    _test(
      '(ㄱ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ) ㅁㄴㄱ ㅁㅈㅎㄴ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ',
      "'12'"
    )
    _test('ㅁㅈㅎㄱ ㄱ ㄷ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b''")
    _test(
      'ㅁㄴㄱ ㅁㅈㅎㄴ ㄱ ㄷ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x31\\x00\\x32\\x00'"
    )
    _test(
      '(ㄱ ㄷ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ) ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ',
      "''"
    )
    _test(
      '(ㄱ ㄷ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ) ㅁㄴㄱ ㅁㅈㅎㄴ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ',
      "'12'"
    )
    _test('ㅁㅈㅎㄱ ㄱ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b''")
    _test(
      'ㅁㄴㄱ ㅁㅈㅎㄴ ㄱ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x00\\x31\\x00\\x32'"
    )
    _test(
      '(ㄱ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ) ㅁㅈㅎㄱ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ',
      "''"
    )
    _test(
      '(ㄱ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ) ㅁㄴㄱ ㅁㅈㅎㄴ ㄱㅇㄱㅎㄴ ㄱㅇㄱㅎㄶㅎㄴ',
      "'12'"
    )
  })
  it('test_utf_32', function () {
    _test('ㅁㅈㅎㄱ ㄱ ㅁ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xFF\\xFE\\x00\\x00'")
    _test(
      'ㄴ ㅁㅈㅎㄴ ㄱ ㅁ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ',
      "b'\\xFF\\xFE\\x00\\x00\\x31\\x00\\x00\\x00'"
    )
    _test('ㅁㅈㅎㄱ ㄱ ㅁ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b''")
    _test(
      'ㅁㄴㄱ ㅁㅈㅎㄴ ㄱ ㅁ ㄱㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x31\\x00\\x00\\x00\\x32\\x00\\x00\\x00'"
    )
    _test('ㅁㅈㅎㄱ ㄱ ㅁ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b''")
    _test(
      'ㅁㄴㄱ ㅁㅈㅎㄴ ㄱ ㅁ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x00\\x00\\x00\\x31\\x00\\x00\\x00\\x32'"
    )
    _test(
      'ㄹㅎㄱ ㄱ ㅁ 진짜ㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㄱㅅ ㄴㄱㅎㄷ ㄱㄹㅎㄷ',
      "b'\\x00\\x01\\xF3\\xF3\\x00\\x00\\xFE\\x0F\\x00\\x00\\x20\\x0D\\x00\\x00\\x26\\xA7\\x00\\x00\\xFE\\x0F'",
      '🏳️\u200d⚧️'
    )
  })
  it('test_unsigned_little', function () {
    _test('ㄱ ㄴ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x00'")
    _test('ㄱㅁㄱ ㄴ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x20'")
    _test('ㄴㅁㄴ ㄴ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x61'")
    _test('ㄴㅁㄴ ㄴ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x61\\x00'")
    _test('ㅈㅈㄴ ㄴ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x7F'")
    _test('ㅂㅄ ㄴ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xAD\\x01'")
  })
  it('test_unsigned_big', function () {
    _test('ㄱ ㄴ ㄴ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x00'")
    _test('ㄱㅁㄱ ㄴ ㄴ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x20'")
    _test('ㄴㅁㄴ ㄴ ㄴ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x61'")
    _test('ㄴㅁㄴ ㄴ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x00\\x61'")
    _test('ㅈㅈㄴ ㄴ ㄴ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x7F'")
    _test('ㅂㅄ ㄴ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x01\\xAD'")
  })
  it('test_signed_little', function () {
    _test('ㄱㅁㄱ ㄷ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x20'")
    _test('ㄴㅁㄴ ㄷ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x61'")
    _test('ㅈㅈㄴ ㄷ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x7F'")
    _test('ㅈㅈㄴ ㄷ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\x7F\\x00'")
    _test('ㄴㄱ ㄷ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xFF'")
    _test('ㄴㄱ ㄷ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xFF\\xFF'")
    _test('ㄱㄱㄴㄱ ㄷ ㄴ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xC0'")
    _test('ㄱㄱㄴㄱ ㄷ ㄷ ㅂ ㅂ ㅂㅎㄷ ㅎㄷ ㅎㄴ', "b'\\xC0\\xFF'")
  })
  it('test_signed_big', function () {
    _test(
      'ㄱㅁㄱ ㄷ ㅁ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ',
      "b'\\x00\\x00\\x00\\x20'"
    )
    _test('ㄴㅁㄴ ㄷ ㄹ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x00\\x00\\x61'")
    _test('ㅈㅈㄴ ㄷ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x00\\x7F'")
    _test('ㅂㅄ ㄷ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\x01\\xAD'")
    _test('ㄴㄱ ㄷ ㄹ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\xFF\\xFF\\xFF'")
    _test('ㄱㄱㄴㄱ ㄷ ㄷ ㅈㅈㅎㄱ ㅂ ㅂ ㅂㅎㄷ ㅎㄹ ㅎㄴ', "b'\\xFF\\xC0'")
  })
  it('test_swap_endian', function () {
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㄱㅁㄱ (ㄴ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ)ㅎㄴ (ㄷ ㄷ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ',
      '8192'
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅈㅈㄴ (ㄴ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ)ㅎㄴ (ㄷ ㄷ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ',
      '32512'
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅅㅈㄹ (ㄴ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ)ㅎㄴ (ㄷ ㄷ ㄱㅇㄱㅎㄷ)ㅎㄴ ㅎㅎㄴ',
      '-512'
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅀㄱ (ㄱ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ) (ㄱ ㄷ ㄱㅈㅎㄱ ㄱㅇㄱㅎㄹ) ㄳ ㄴㄱㅎㄹ ㄱㅀㄷㅎㅎㄴ',
      "''",
      '\n',
      ''
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅀㄱ (ㄱ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ) (ㄱ ㄷ ㄱㅈㅎㄱ ㄱㅇㄱㅎㄹ) ㄳ ㄴㄱㅎㄹ ㄱㅀㄷㅎㅎㄴ',
      "'쮭'",
      '귋',
      ''
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅀㄱ (ㄱ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ) (ㄱ ㄷ ㄱㅈㅎㄱ ㄱㅇㄱㅎㄹ) ㄳ ㄴㄱㅎㄹ ㄱㅀㄷㅎㅎㄴ',
      "'쮭붬'",
      '귋경',
      ''
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅀㄱ (ㄱ ㄷ ㄱㅈㅎㄱ ㄱㅇㄱㅎㄹ) (ㄱ ㄷ ㄱㅇㄱㅎㄷ) ㄳ ㄴㄱㅎㄹ ㄱㅀㄷㅎㅎㄴ',
      "'귋경'",
      '귋경',
      ''
    )
    _test(
      '(ㅂ ㅂ ㅂㅎㄷ) ㅀㄱ (ㄱ ㄷ ㅈㅈㅎㄱ ㄱㅇㄱㅎㄹ) (ㄱ ㄷ ㄱㅇㄱㅎㄷ) ㄳ ㄴㄱㅎㄹ ㄱㅀㄷㅎㅎㄴ',
      "'쮭붬'",
      '귋경',
      ''
    )
  })
})

describe('TestMath', function () {
  it('test_isclose', function () {
    _test(
      'ㄹ (ㄱㅇㄱ ㄱㅇㄱ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      'ㅂ ㅅ ㅂ ㅂㅎㄹ (ㄱㅇㄱ ㄱㅇㄱ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      'ㅂ ㅅ ㅈ ㅂㅎㄹ (ㄱㅇㄱ ㄱㅇㄱ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄴ',
      'True'
    )
    _test(
      'ㅈㅈㅈ ㄴㄱ ㅅㅎㄷ ㅅㅈㅈ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'False'
    )
    _test(
      'ㅈㅈㅈㅈㅈㅈㅈ ㄴㄱ ㅅㅎㄷ ㅅㅈㅈㅈㅈㅈㅈ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'False'
    )
    _test(
      'ㅅㄷㄱ ㅈ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ (ㅂ ㅅ ㅂ ㅂㅎㄹ) (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'False'
    )
    _test(
      'ㄴㅈㄱㄹㄴㄹㄱ ㅅㄴㅂㄱㄱㄴㄱ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ (ㅂ ㅅ ㅂ ㅂㅎㄹ) (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅈ ㅂㅎㄹ) (ㄱ ㅂ ㅅ ㅂ ㅂㅎㄹ ㅄㅎㄷ) ㅅㅎㄷ, ㄴㄱ, (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄱㄴ ㄷ (ㄱㅇㄱ ㄴㅇㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㄴㅇㄱ ㅅㅎㄷ, ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄱㄴ ㄹ (ㄱㅇㄱ ㄴㅇㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㄴㅇㄱ ㅅㅎㄷ, ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄱㄴ ㅁ (ㄱㅇㄱ ㄴㅇㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㄴㅇㄱ ㅅㅎㄷ, ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄴㄱ ㄷ (ㄱㅇㄱ ㄴㅇㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㄴㅇㄱ ㅅㅎㄷ, ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄴㄱ ㄹ (ㄱㅇㄱ ㄴㅇㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㄴㅇㄱ ㅅㅎㄷ, ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄴㄱ ㅁ (ㄱㅇㄱ ㄴㅇㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㄴㅇㄱ ㅅㅎㄷ, ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ)ㅎㄷ',
      'True'
    )
  })
  it('test_isnan', function () {
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄱ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄴ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) ㄴ ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test('ㄱ (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test('ㄴ (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test(
      '(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test('ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) ㄴ ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄴ (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test(
      '(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ',
      'False'
    )
    _test(
      'ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ',
      'False'
    )
    _test(
      'ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ (ㅂ ㅅ ㄴㄴ ㅂㅎㄹ)ㅎㄴ',
      'False'
    )
  })
  it('test_isinf', function () {
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄱ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄴ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) ㄴ ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test(
      '(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㄴ ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test('ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test('ㄴ (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'True')
    _test(
      '(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ',
      'True'
    )
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) ㄴ ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄱ (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test('ㄴ (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ', 'False')
    _test(
      '(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ (ㅂ ㅅ ㅁㄴ ㅂㅎㄹ)ㅎㄴ',
      'False'
    )
  })
  it('test_abs', function () {
    _test('ㄱ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0')
    _test('ㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.0')
    _test('ㄱ ㅄㅎㄴ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.0')
    _test('ㄴ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '1')
    _test('ㄴㄱ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '1')
    _test('ㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '2')
    _test('ㄷㄱ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.5')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.5')
    _test('ㅁ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.25')
    _test('ㅁㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.25')
    _test('ㄴ ㅄㅎㄴ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '1.0')
    _test('ㄴㄱ ㅄㅎㄴ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '1.0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅄㅎㄴ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.5')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅄㅎㄴ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.5')
    _test('ㄱ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '1.0')
    _test('ㄱ ㄴㄱ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '1.0')
    _test('ㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.5')
    _test('ㄱ ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ', '0.5')
    _test('ㄹ ㅁ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ', 'True')
    _test('ㄹㄱ ㅁ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ', 'True')
    _test('ㄹ ㅁㄱ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ', 'True')
    _test('ㄹㄱ ㅁㄱ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ', 'True')
    _test(
      'ㅂ ㅁㄴㄱ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂㄴㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㅂㄱ ㅁㄴㄱ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂㄴㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test('ㅂ ㅁㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂㄴㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ', 'True')
    _test(
      'ㅂㄱ ㅁㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㅂㄴㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㄴㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㄴㄱ ㄹ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㄴㄱ ㅁ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㅁㄱ ㄷ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㄱㄴ ㄹ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
    _test(
      'ㄱㄷ ㅁ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅂ ㅅ ㄱ ㅂㅎㅀㄷ',
      'True'
    )
  })
  it('test_log', function () {
    _test(
      'ㄴ [((ㅂ ㅅ ㅈ ㅂㅎㄹ) (ㄱㅇㄱ ㅂ ㅅ ㄺ ㅂㅎㅀㄴ) ㅅㅎㄷ) ㄱㅇㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ [(ㅂ ㅅ ㅈ ㅂㅎㄹ (ㄱㅇㄱ ㅂ ㅅ ㄺ ㅂㅎㅀㄴ) ㅅㅎㄷ) ㄱㅇㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄷㄱ [(ㅂ ㅅ ㅈ ㅂㅎㄹ (ㄱㅇㄱ ㅂ ㅅ ㄺ ㅂㅎㅀㄴ) ㅅㅎㄷ) ㄱㅇㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄷ [(ㅂ ㅅ ㅈ ㅂㅎㄹ (ㄱㅇㄱ ㅂ ㅅ ㄺ ㅂㅎㅀㄴ) ㅅㅎㄷ) ㄱㅇㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ ㄹ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ [(ㅂ ㅅ ㅈ ㅂㅎㄹ (ㄱㅇㄱ ㅂ ㅅ ㄺ ㅂㅎㅀㄴ) ㅅㅎㄷ) ㄱㅇㄱ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
  })
  it('test_trig', function () {
    _test('ㄱ (ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ', 'True')
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅂ ㅅ ㅂ ㅂㅎㄹ (ㄱㅇㄱ ㄷ ㄱㅎㄷ ㄷ ㄴㄱ ㅅㅎㄷ ㄷㅎㄷ) ㄱㅎㄷ (ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ] ㅁㄷㅎㄷ (ㄱ ㅁㅂㅎㄴ)ㅎㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅂ ㅅ ㅂ ㅂㅎㄹ (ㄱㅇㄱ ㄷ ㄱㅎㄷ ㄷㄱ ㄴㄱ ㅅㅎㄷ ㄷㅎㄷ) ㄱㅎㄷ (ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄴㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ] ㅁㄷㅎㄷ (ㄱ ㅁㅂㅎㄴ)ㅎㄴ',
      'True'
    )
    _test('ㄱ (ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ', 'True')
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅂ ㅅ ㅂ ㅂㅎㄹ (ㄱㅇㄱ ㄷ ㄱㅎㄷ) ㄱㅎㄷ (ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ] ㅁㄷㅎㄷ (ㄱ ㅁㅂㅎㄴ)ㅎㄴ',
      'True'
    )
    _test(
      '[ㅈㄱ ㅅㄱ ㅂㄱ ㅁㄱ ㄺ ㄷㄱ ㄴㄱ ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ ㅅ ㅈ] ㅁㅀㅈㄴㄱ [ㅂ ㅅ ㅂ ㅂㅎㄹ (ㄱㅇㄱ ㄷ ㄱㅎㄷ ㄴ ㄷㅎㄷ) ㄱㅎㄷ (ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄴㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ] ㅁㄷㅎㄷ (ㄱ ㅁㅂㅎㄴ)ㅎㄴ',
      'True'
    )
    _test('ㄱ (ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) ㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ', 'True')
    _test(
      '(ㅂ ㅅ ㅂ ㅂㅎㄹ ㅁ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ) (ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) ㄴ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅂ ㅂㅎㄹ ㅁㄱ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ) (ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) ㄴㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅂ ㅂㅎㄹ ㄹ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ) (ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) (ㄹ ㄷ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ) (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'True'
    )
    _test(
      '(ㅂ ㅅ ㅂ ㅂㅎㄹ ㅅ ㄴㄱ ㅅㅎㄷ ㄱㅎㄷ) (ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) (ㄹ ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅅㅎㄷ) (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷ',
      'True'
    )
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ) ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ) ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ) ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄷ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ) ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄷㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ) ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㅂ ㅅ ㅂ ㅂㅎㄹ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ) ㄴ ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄷㄱ ㅅㅎㄷ) ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄷㄱ ㅅㅎㄷ) ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄷㄱ ㅅㅎㄷ) ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄷ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄷㄱ ㅅㅎㄷ) ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄷㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄷㄱ ㅅㅎㄷ) ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㅂ ㅅ ㅂ ㅂㅎㄹ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㄴ ㅄㅎㄷ ㅂ ㅅ ㅈㄷ ㅂㅎㅀㄴ ㄷ ㅅㅎㄷ) (ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㄷㄱ ㅅㅎㄷ) ㅂ ㅅ ㄱ ㅂㅎㅀㄷㅎ]ㅎㄴ',
      'True'
    )
  })
  it('test_asin', function () {
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ [(ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ [(ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ ㄴ ㅄㅎㄷ [(ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ ㄴ ㅄㅎㄷ [(ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ[(ㄱㅇㄱ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ[(ㄱㅇㄱ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ ㄴ ㅄㅎㄷ[(ㄱㅇㄱ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ ㄴ ㅄㅎㄷ[(ㄱㅇㄱ ㅂ ㅅ ㄴㅅ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
  })
  it('test_acos', function () {
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ ㄴ ㅄㅎㄷ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ ㄴ ㅄㅎㄷ [(ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ[(ㄱㅇㄱ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ[(ㄱㅇㄱ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ ㄴ ㅄㅎㄷ[(ㄱㅇㄱ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ ㄴ ㅄㅎㄷ[(ㄱㅇㄱ ㅂ ㅅ ㅅㄱ ㅂㅎㅀㄴ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
  })
  it('test_atan', function () {
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ ㄴ ㅄㅎㄷ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ ㄴ ㅄㅎㄷ [(ㄱㅇㄱ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄱ [(ㄱㅇㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴ[(ㄱㅇㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
    _test(
      'ㄴㄱ[(ㄱㅇㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄴ ㅂ ㅅ ㄷㄴ ㅂㅎㅀㄴ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ]ㅎㄴ',
      'True'
    )
  })
  it('test_atan2', function () {
    _test('ㄱ ㄴ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄷ', '0.0')
    _test('ㄱ ㄴㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄷ (ㅂ ㅅ ㅂ ㅂㅎㄹ)ㄶㄷ', 'True')
    _test(
      '(ㄴ ㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄷ) ㄷ ㄱㅎㄷ (ㅂ ㅅ ㅂ ㅂㅎㄹ)ㄶㄷ',
      'True'
    )
    _test(
      '(ㄴㄱ ㄱ ㅂ ㅅ ㄴㄷ ㅂㅎㄹ ㅎㄷ) ㄷㄱ ㄱㅎㄷ (ㅂ ㅅ ㅂ ㅂㅎㄹ)ㄶㄷ',
      'True'
    )
    _test(
      '[ㄴ ㄴㄱ ㄷ ㄷㄱ ㄹ ㄺ ㅁㅀㅅ] [(ㄱㅇㄱ ㅂ ㅅ ㅅㄴ ㅂㅎㅀㄴ, ㄱㅇㄱ ㅂ ㅅ ㄳ ㅂㅎㅀㄴ, ㅂ ㅅ ㄴㄷ ㅂㅎㅀㄷ) ㄱㅇㄱ (ㅂ ㅅ ㄱ ㅂㅎㄹ)ㅎㄷㅎ] ㅁㄷㅎㄷ (ㄱ ㅁㅂㅎㄴ)ㅎㄴ',
      'True'
    )
  })
  it('test_trunc', function () {
    _test('ㄱ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄴ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄴㄱ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄱ ㅂㅎㅁ)ㅎㄴ', '-2')
  })
  it('test_floor', function () {
    _test('ㄱ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄴ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄴㄱ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄴ ㅂㅎㅁ)ㅎㄴ', '-3')
  })
  it('test_round', function () {
    _test('ㄱ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄴ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄴㄱ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄷ ㅂㅎㅁ)ㅎㄴ', '-2')
  })
  it('test_ceil', function () {
    _test('ㄱ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㅁㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㄴ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄴㄱ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '3')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㄹ ㅂㅎㅁ)ㅎㄴ', '-2')
  })
  it('test_round_to_inf', function () {
    _test('ㄱ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '0')
    _test('ㅁ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㅁㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄴ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '1')
    _test('ㄴㄱ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '-1')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㄹ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '2')
    _test('ㄷㄱ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '-2')
    _test('ㄷ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '3')
    _test('ㄷㄱ ㄴㄱ ㅅㅎㄷ ㅂ ㄱㅎㄷ (ㅂ ㅅ ㅂㄹ ㅁ ㅂㅎㅁ)ㅎㄴ', '-3')
  })
})

describe('TestSpecialNumbers', function () {
  it('test_special_value_basic', function () {
    _test('ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ', '-inf')
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) ㄴ ㅄㅎㄷ', 'nan+i')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) ㄴ ㅄㅎㄷ', 'inf+i')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㄴ ㅄㅎㄷ', '-inf+i')
    _test('ㄱ (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ', 'nani')
    _test('ㄴ (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ', '1+nani')
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ', 'nan+nani')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ', 'inf+nani')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ', '-inf+nani')
    _test('ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ', 'infi')
    _test('ㄴ (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ', '1+infi')
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ', 'nan+infi')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ', 'inf+infi')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ', '-inf+infi')
    _test('ㄱ (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ', '-infi')
    _test('ㄴ (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ', '1-infi')
    _test('(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ', 'nan-infi')
    _test('(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ', 'inf-infi')
    _test(
      '(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ',
      '-inf-infi'
    )
  })
  it('test_special_value_addition', function () {
    _test('[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test('[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test('[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'infi'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test('[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test('[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test('[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test('[(ㄴ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', '1+infi')
    _test(
      '[(ㄴ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test('[(ㄴ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', '1+nani')
    _test('[(ㄴ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', '1+infi')
    _test(
      '[(ㄴ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test('[(ㄴ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', '1+nani')
    _test(
      '[(ㄴ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+infi'
    )
    _test(
      '[(ㄴ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test(
      '[(ㄴ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test('[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', '1+infi')
    _test('[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', '1+infi')
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test('[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', '2+infi')
    _test('[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', '2+infi')
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2-infi'
    )
    _test('[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', '1+nani')
    _test('[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', '1+nani')
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '1+nani'
    )
    _test('[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', '2+nani')
    _test('[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', '2+nani')
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test('[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test('[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test('[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test('[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test('[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test('[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'infi')
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-1+nani'
    )
    _test('[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test('[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'nani')
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-2+nani'
    )
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+0i')
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+i')
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+0i')
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+i')
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+i')
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+2i')
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+i')
    _test('[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'inf+2i')
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+0i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-2i'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      '-inf+nani'
    )
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+0i')
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+i')
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+0i')
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+i')
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+i')
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+2i')
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+i')
    _test('[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ', 'nan+2i')
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+0i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-2i'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄷㅎㄷ',
      'nan+nani'
    )
  })
  it('test_special_value_multiplication', function () {
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㄴ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㄴ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan-infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      '-inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'inf+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+infi'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㄴㄱ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㄴㄱ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㅁ ㅂㅎㄹ ㄴㄱ ㄱㅎㄷ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
    _test(
      '[(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] [(ㅂ ㅅ ㄴ ㅂㅎㄹ) (ㅂ ㅅ ㄴ ㅂㅎㄹ) ㅄㅎㄷ] ㄱㅎㄷ',
      'nan+nani'
    )
  })
})
